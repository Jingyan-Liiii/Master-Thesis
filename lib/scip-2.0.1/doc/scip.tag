<?xml version='1.0' encoding='ISO-8859-1' standalone='yes' ?>
<tagfile>
  <compound kind="page">
    <name>index</name>
    <title>Overview (Users Manual)</title>
    <filename>index</filename>
  </compound>
  <compound kind="file">
    <name>branch_allfullstrong.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>branch__allfullstrong_8c</filename>
    <includes id="branch__allfullstrong_8h" name="branch_allfullstrong.h" local="yes" imported="no">scip/branch_allfullstrong.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_NAME</name>
      <anchorfile>branch__allfullstrong_8c.html</anchorfile>
      <anchor>a6b89615e8ad2abbd5b5c27602222c6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_DESC</name>
      <anchorfile>branch__allfullstrong_8c.html</anchorfile>
      <anchor>a0015ff6ddd790ebf1866b927efac31cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_PRIORITY</name>
      <anchorfile>branch__allfullstrong_8c.html</anchorfile>
      <anchor>a1d1f9f436fbaa0aea36753d939676136</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_MAXDEPTH</name>
      <anchorfile>branch__allfullstrong_8c.html</anchorfile>
      <anchor>af08aa66417e943bd29d62dd08a4dc1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_MAXBOUNDDIST</name>
      <anchorfile>branch__allfullstrong_8c.html</anchorfile>
      <anchor>af78a3288e197ea2c7ac89b2ad2ecfbaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExitAllfullstrong</name>
      <anchorfile>branch__allfullstrong_8c.html</anchorfile>
      <anchor>af46d61a0a3db37117d820acaa508a55d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchInitsolAllfullstrong</name>
      <anchorfile>branch__allfullstrong_8c.html</anchorfile>
      <anchor>a91d937191a3a8342c314262e51a6e0c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExitsolAllfullstrong</name>
      <anchorfile>branch__allfullstrong_8c.html</anchorfile>
      <anchor>a1b4e0e1332f5a614f7221e760e098cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExecextAllfullstrong</name>
      <anchorfile>branch__allfullstrong_8c.html</anchorfile>
      <anchor>a2cd593a77f78042121c1bdf5d0874f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleAllfullstrong</name>
      <anchorfile>branch__allfullstrong_8c.html</anchorfile>
      <anchor>a7128e362bb5314686768a4fe2825f14b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_allfullstrong.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>branch__allfullstrong_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleAllfullstrong</name>
      <anchorfile>branch__allfullstrong_8h.html</anchorfile>
      <anchor>a7128e362bb5314686768a4fe2825f14b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_fullstrong.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>branch__fullstrong_8c</filename>
    <includes id="branch__fullstrong_8h" name="branch_fullstrong.h" local="yes" imported="no">scip/branch_fullstrong.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_NAME</name>
      <anchorfile>branch__fullstrong_8c.html</anchorfile>
      <anchor>a6b89615e8ad2abbd5b5c27602222c6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_DESC</name>
      <anchorfile>branch__fullstrong_8c.html</anchorfile>
      <anchor>a0015ff6ddd790ebf1866b927efac31cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_PRIORITY</name>
      <anchorfile>branch__fullstrong_8c.html</anchorfile>
      <anchor>a1d1f9f436fbaa0aea36753d939676136</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_MAXDEPTH</name>
      <anchorfile>branch__fullstrong_8c.html</anchorfile>
      <anchor>af08aa66417e943bd29d62dd08a4dc1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_MAXBOUNDDIST</name>
      <anchorfile>branch__fullstrong_8c.html</anchorfile>
      <anchor>af78a3288e197ea2c7ac89b2ad2ecfbaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_REEVALAGE</name>
      <anchorfile>branch__fullstrong_8c.html</anchorfile>
      <anchor>a5eae285db90f2c7b494802374ef619b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExitFullstrong</name>
      <anchorfile>branch__fullstrong_8c.html</anchorfile>
      <anchor>aa317c01384127f27d8055ef1c5c8f235</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchInitsolFullstrong</name>
      <anchorfile>branch__fullstrong_8c.html</anchorfile>
      <anchor>ac19b37c59740ddbff099f71459d0f20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExitsolFullstrong</name>
      <anchorfile>branch__fullstrong_8c.html</anchorfile>
      <anchor>ae37cb8bc34346eba7ac70b1b15209971</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExecextFullstrong</name>
      <anchorfile>branch__fullstrong_8c.html</anchorfile>
      <anchor>a68e0914b0cd53a6058ed3ffc335a4a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExecpsFullstrong</name>
      <anchorfile>branch__fullstrong_8c.html</anchorfile>
      <anchor>a6a6cf727d88447db98746715159c279b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleFullstrong</name>
      <anchorfile>branch__fullstrong_8c.html</anchorfile>
      <anchor>a417ba28ae597673c783320b4bb986dd3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_fullstrong.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>branch__fullstrong_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleFullstrong</name>
      <anchorfile>branch__fullstrong_8h.html</anchorfile>
      <anchor>a417ba28ae597673c783320b4bb986dd3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_inference.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>branch__inference_8c</filename>
    <includes id="branch__inference_8h" name="branch_inference.h" local="yes" imported="no">scip/branch_inference.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_NAME</name>
      <anchorfile>branch__inference_8c.html</anchorfile>
      <anchor>a6b89615e8ad2abbd5b5c27602222c6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_DESC</name>
      <anchorfile>branch__inference_8c.html</anchorfile>
      <anchor>a0015ff6ddd790ebf1866b927efac31cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_PRIORITY</name>
      <anchorfile>branch__inference_8c.html</anchorfile>
      <anchor>a1d1f9f436fbaa0aea36753d939676136</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_MAXDEPTH</name>
      <anchorfile>branch__inference_8c.html</anchorfile>
      <anchor>af08aa66417e943bd29d62dd08a4dc1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_MAXBOUNDDIST</name>
      <anchorfile>branch__inference_8c.html</anchorfile>
      <anchor>af78a3288e197ea2c7ac89b2ad2ecfbaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_CONFLICTWEIGHT</name>
      <anchorfile>branch__inference_8c.html</anchorfile>
      <anchor>a7c7598d9b8355c08c2a24b63884091fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_CUTOFFWEIGHT</name>
      <anchorfile>branch__inference_8c.html</anchorfile>
      <anchor>a907a52b44fe225e3d726de5eb2596edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_INFERENCEWEIGHT</name>
      <anchorfile>branch__inference_8c.html</anchorfile>
      <anchor>a67c322ee593861e391d14c0ecee8239e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_FRACTIONALS</name>
      <anchorfile>branch__inference_8c.html</anchorfile>
      <anchor>a8a16ad2ac17400a33d3512ae4f29f812</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USEWEIGHTEDSUM</name>
      <anchorfile>branch__inference_8c.html</anchorfile>
      <anchor>a7419e9b80600ef1466f3555d63ca0657</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchInitInference</name>
      <anchorfile>branch__inference_8c.html</anchorfile>
      <anchor>ab21124a09abef4dbfb741fc03bfe694f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExitInference</name>
      <anchorfile>branch__inference_8c.html</anchorfile>
      <anchor>a975d404c51fa6c4312483829d2946d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchInitsolInference</name>
      <anchorfile>branch__inference_8c.html</anchorfile>
      <anchor>ad521df5d065864db761168b9637c507f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExitsolInference</name>
      <anchorfile>branch__inference_8c.html</anchorfile>
      <anchor>a0cd407f9a5ac3d713d3a46be72794153</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExecextInference</name>
      <anchorfile>branch__inference_8c.html</anchorfile>
      <anchor>ae40a6254d00b718f2816c5970a1a7e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleInference</name>
      <anchorfile>branch__inference_8c.html</anchorfile>
      <anchor>a06978c7113c6616a8de52bed33aa1713</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_inference.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>branch__inference_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleInference</name>
      <anchorfile>branch__inference_8h.html</anchorfile>
      <anchor>a06978c7113c6616a8de52bed33aa1713</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_leastinf.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>branch__leastinf_8c</filename>
    <includes id="branch__leastinf_8h" name="branch_leastinf.h" local="yes" imported="no">scip/branch_leastinf.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_NAME</name>
      <anchorfile>branch__leastinf_8c.html</anchorfile>
      <anchor>a6b89615e8ad2abbd5b5c27602222c6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_DESC</name>
      <anchorfile>branch__leastinf_8c.html</anchorfile>
      <anchor>a0015ff6ddd790ebf1866b927efac31cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_PRIORITY</name>
      <anchorfile>branch__leastinf_8c.html</anchorfile>
      <anchor>a1d1f9f436fbaa0aea36753d939676136</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_MAXDEPTH</name>
      <anchorfile>branch__leastinf_8c.html</anchorfile>
      <anchor>af08aa66417e943bd29d62dd08a4dc1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_MAXBOUNDDIST</name>
      <anchorfile>branch__leastinf_8c.html</anchorfile>
      <anchor>af78a3288e197ea2c7ac89b2ad2ecfbaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchFreeLeastinf</name>
      <anchorfile>branch__leastinf_8c.html</anchorfile>
      <anchor>a5305febf5a4d233670f6d16201f4bddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchInitLeastinf</name>
      <anchorfile>branch__leastinf_8c.html</anchorfile>
      <anchor>aac0c39f72be60ee67b94f30a666e6337</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExitLeastinf</name>
      <anchorfile>branch__leastinf_8c.html</anchorfile>
      <anchor>ab01ba59f308aa807c34cff7cee3c5586</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchInitsolLeastinf</name>
      <anchorfile>branch__leastinf_8c.html</anchorfile>
      <anchor>a95d93f0ee6657adad8c4d15a60c49cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExitsolLeastinf</name>
      <anchorfile>branch__leastinf_8c.html</anchorfile>
      <anchor>a0463d5f565bb4499f8b9d532d744a1b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExecpsLeastinf</name>
      <anchorfile>branch__leastinf_8c.html</anchorfile>
      <anchor>a95307ce618a15c10e48a8d1e34a75a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleLeastinf</name>
      <anchorfile>branch__leastinf_8c.html</anchorfile>
      <anchor>a331f85bb0f470a6de40413d65ee837b4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_leastinf.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>branch__leastinf_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleLeastinf</name>
      <anchorfile>branch__leastinf_8h.html</anchorfile>
      <anchor>a331f85bb0f470a6de40413d65ee837b4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_mostinf.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>branch__mostinf_8c</filename>
    <includes id="branch__mostinf_8h" name="branch_mostinf.h" local="yes" imported="no">scip/branch_mostinf.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_NAME</name>
      <anchorfile>branch__mostinf_8c.html</anchorfile>
      <anchor>a6b89615e8ad2abbd5b5c27602222c6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_DESC</name>
      <anchorfile>branch__mostinf_8c.html</anchorfile>
      <anchor>a0015ff6ddd790ebf1866b927efac31cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_PRIORITY</name>
      <anchorfile>branch__mostinf_8c.html</anchorfile>
      <anchor>a1d1f9f436fbaa0aea36753d939676136</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_MAXDEPTH</name>
      <anchorfile>branch__mostinf_8c.html</anchorfile>
      <anchor>af08aa66417e943bd29d62dd08a4dc1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_MAXBOUNDDIST</name>
      <anchorfile>branch__mostinf_8c.html</anchorfile>
      <anchor>af78a3288e197ea2c7ac89b2ad2ecfbaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchFreeMostinf</name>
      <anchorfile>branch__mostinf_8c.html</anchorfile>
      <anchor>ae3a4fbeab0e2e47a770389d1290aada1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchInitMostinf</name>
      <anchorfile>branch__mostinf_8c.html</anchorfile>
      <anchor>a0be4bcc843ca9207be3896665ba688c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExitMostinf</name>
      <anchorfile>branch__mostinf_8c.html</anchorfile>
      <anchor>aba95806a94e13670795a50eb40972d7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchInitsolMostinf</name>
      <anchorfile>branch__mostinf_8c.html</anchorfile>
      <anchor>a6be2200c2b3e9b390d6442f070c3a1f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExitsolMostinf</name>
      <anchorfile>branch__mostinf_8c.html</anchorfile>
      <anchor>a76b5904ed6c279cf3c5b9cac93b062ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExecpsMostinf</name>
      <anchorfile>branch__mostinf_8c.html</anchorfile>
      <anchor>ac2a4b6c8c63734b0c77fb8648aff15f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleMostinf</name>
      <anchorfile>branch__mostinf_8c.html</anchorfile>
      <anchor>a6c9ce96038b146ba527d4f8eb6b135ce</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_mostinf.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>branch__mostinf_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleMostinf</name>
      <anchorfile>branch__mostinf_8h.html</anchorfile>
      <anchor>a6c9ce96038b146ba527d4f8eb6b135ce</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_pscost.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>branch__pscost_8c</filename>
    <includes id="branch__pscost_8h" name="branch_pscost.h" local="yes" imported="no">scip/branch_pscost.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_NAME</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>a6b89615e8ad2abbd5b5c27602222c6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_DESC</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>a0015ff6ddd790ebf1866b927efac31cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_PRIORITY</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>a1d1f9f436fbaa0aea36753d939676136</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_MAXDEPTH</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>af08aa66417e943bd29d62dd08a4dc1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_MAXBOUNDDIST</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>af78a3288e197ea2c7ac89b2ad2ecfbaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_STRATEGIES</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>aeb010edee9275672f65ec2cc4d62c876</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_STRATEGY_DEFAULT</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>ae0a47f710617206dc9f2f1d84b64fa03</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_SCOREMINWEIGHT_DEFAULT</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>ab79820a5faa5896cc203643ff40c9f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_SCOREMAXWEIGHT_DEFAULT</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>a71291b24828f3dcce3b44af77157f64c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_SCORESUMWEIGHT_DEFAULT</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>ac0e4e24a40058346f76b349b838614c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WEIGHTEDSCORING</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>aa3f8e662125e411d56ad8912e57a487f</anchor>
      <arglist>(data, min, max, sum)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchInitPscost</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>a73ed019cb0a76653d24bba9cadf28023</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExitPscost</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>aa1b3bbbe12937395d8f3908e8dae53c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchInitsolPscost</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>a1755638df023123cfd87562766357bf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExitsolPscost</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>a3dc201dcda8ea4024cbb2aaff9f58cba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExecpsPscost</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>acbbb2e3704d42d6f39ccf1e6a3f1b726</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchrulePscost</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>ad7983f45a82b6168dd2c2a3607dcfd0e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPselectBranchVarPscost</name>
      <anchorfile>branch__pscost_8c.html</anchorfile>
      <anchor>ab4d3e6604af9e05bd20d134e794e45c3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **branchcands, SCIP_Real *branchcandssol, SCIP_Real *branchcandsscore, int nbranchcands, SCIP_VAR **var, SCIP_Real *brpoint)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_pscost.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>branch__pscost_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchrulePscost</name>
      <anchorfile>branch__pscost_8h.html</anchorfile>
      <anchor>ad7983f45a82b6168dd2c2a3607dcfd0e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPselectBranchVarPscost</name>
      <anchorfile>branch__pscost_8h.html</anchorfile>
      <anchor>ab4d3e6604af9e05bd20d134e794e45c3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **branchcands, SCIP_Real *branchcandssol, SCIP_Real *branchcandsscore, int nbranchcands, SCIP_VAR **var, SCIP_Real *brpoint)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_random.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>branch__random_8c</filename>
    <includes id="branch__random_8h" name="branch_random.h" local="yes" imported="no">scip/branch_random.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_NAME</name>
      <anchorfile>branch__random_8c.html</anchorfile>
      <anchor>a6b89615e8ad2abbd5b5c27602222c6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_DESC</name>
      <anchorfile>branch__random_8c.html</anchorfile>
      <anchor>a0015ff6ddd790ebf1866b927efac31cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_PRIORITY</name>
      <anchorfile>branch__random_8c.html</anchorfile>
      <anchor>a1d1f9f436fbaa0aea36753d939676136</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_MAXDEPTH</name>
      <anchorfile>branch__random_8c.html</anchorfile>
      <anchor>af08aa66417e943bd29d62dd08a4dc1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_MAXBOUNDDIST</name>
      <anchorfile>branch__random_8c.html</anchorfile>
      <anchor>af78a3288e197ea2c7ac89b2ad2ecfbaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_INITSEED</name>
      <anchorfile>branch__random_8c.html</anchorfile>
      <anchor>a8a58dc8e8c7a2b4b83d753f65bbecf74</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExitRandom</name>
      <anchorfile>branch__random_8c.html</anchorfile>
      <anchor>a35b291ce728cabdbd0c47fc7ed6844a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchInitsolRandom</name>
      <anchorfile>branch__random_8c.html</anchorfile>
      <anchor>ae5629010c8042d76b2e4537ccdcc2501</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExitsolRandom</name>
      <anchorfile>branch__random_8c.html</anchorfile>
      <anchor>aaca48a0644fb265a1bb3a32ae876ad9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleRandom</name>
      <anchorfile>branch__random_8c.html</anchorfile>
      <anchor>a1b3e2c6336f5014de06950868118553e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_random.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>branch__random_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleRandom</name>
      <anchorfile>branch__random_8h.html</anchorfile>
      <anchor>a1b3e2c6336f5014de06950868118553e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_relpscost.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>branch__relpscost_8c</filename>
    <includes id="branch__relpscost_8h" name="branch_relpscost.h" local="yes" imported="no">scip/branch_relpscost.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_NAME</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a6b89615e8ad2abbd5b5c27602222c6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_DESC</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a0015ff6ddd790ebf1866b927efac31cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_PRIORITY</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a1d1f9f436fbaa0aea36753d939676136</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_MAXDEPTH</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>af08aa66417e943bd29d62dd08a4dc1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHRULE_MAXBOUNDDIST</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>af78a3288e197ea2c7ac89b2ad2ecfbaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_CONFLICTWEIGHT</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a7c7598d9b8355c08c2a24b63884091fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_CONFLENGTHWEIGHT</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>abe1dc908a0ce015a714248573495c776</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_INFERENCEWEIGHT</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a67c322ee593861e391d14c0ecee8239e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_CUTOFFWEIGHT</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a907a52b44fe225e3d726de5eb2596edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PSCOSTWEIGHT</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>af5c0608cd4011ac67574bb1e9cf92c65</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINRELIABLE</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>ac2eece3d169bd4287119652a316093d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXRELIABLE</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>af334c4f31a2f6a11c9bb785d3ec54df2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SBITERQUOT</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a1562f9f4a5a495f73d5b9f1e123d506c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SBITEROFS</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a79d4593a3008c902ff9460c4a17f212a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLOOKAHEAD</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a76c05e235e31df9dc43dc3ab357ff38d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_INITCAND</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>aee3fcc47e1d25d38f33366ca95ce8788</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_INITITER</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a28fdfc554fa52332e6951c15796ce109</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXBDCHGS</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a5bccb042ef3aa4e502092292d08fa190</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchInitRelpscost</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a653fbb0b25ac6e6fbd77e1123d52841a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExitRelpscost</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a2652dd2afa67032f6be94756614c0a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchInitsolRelpscost</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a2778fab0f0d8b676223b3a33f832e611</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExitsolRelpscost</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>aa3f605648f74b26e06127426fe565935</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExecextRelpscost</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a4c0cd705d8923d8702c17d566f89e043</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>branchExecpsRelpscost</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a719afcbf87ac3c3d896ed0291d29f038</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleRelpscost</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a7288452ece13b07de8a3bb34aa3abed0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexecRelpscostBranching</name>
      <anchorfile>branch__relpscost_8c.html</anchorfile>
      <anchor>a5f6ac94f27131012282b8d5ba8706e8e</anchor>
      <arglist>(SCIP *scip, SCIP_Bool allowaddcons, SCIP_VAR **branchcands, SCIP_Real *branchcandssol, SCIP_Real *branchcandsfrac, int nbranchcands, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>branch_relpscost.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>branch__relpscost_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchruleRelpscost</name>
      <anchorfile>branch__relpscost_8h.html</anchorfile>
      <anchor>a7288452ece13b07de8a3bb34aa3abed0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexecRelpscostBranching</name>
      <anchorfile>branch__relpscost_8h.html</anchorfile>
      <anchor>a5f6ac94f27131012282b8d5ba8706e8e</anchor>
      <arglist>(SCIP *scip, SCIP_Bool allowaddcons, SCIP_VAR **branchcands, SCIP_Real *branchcandssol, SCIP_Real *branchcandsfrac, int nbranchcands, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_and.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__and_8c</filename>
    <includes id="cons__and_8h" name="cons_and.h" local="yes" imported="no">scip/cons_and.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="cons__logicor_8h" name="cons_logicor.h" local="yes" imported="no">scip/cons_logicor.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_NAME</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>aea7e068fd23523fb86409f7437f49851</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_DESC</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>acd6ea343facf9430a46f3d1f3d6c675b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PRESOLPAIRWISE</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a50bbd2474c7b2e724b95eb570d507a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_LINEARIZE</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a674602405c71249b64b51024db3b0120</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ENFORCECUTS</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>ab79c06411ff2b96ee4822787b88db41d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_AGGRLINEARIZATION</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>aedd7d7ce60463af3ce7112c2b0c93511</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASHSIZE_ANDCONS</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a386ce1508307dd0c6e1f30f5d33f45ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PRESOLUSEHASHING</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a8d97ceb0231590426c6e624f682682e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NMINCOMPARISONS</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>ab6f3d3036dfe8fd11c392c934e3f4c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINGAINPERNMINCOMPARISONS</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>aa48184fdd836534b78d110285955a496</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitAnd</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a934a4aa3865f33e3bf0d8779a717b05f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitAnd</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a48ded54ae593cdc431d59093367aeb79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreAnd</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>ad8092910816b4e6270b8de64681f5d43</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitsolAnd</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a6c2e1e99c1af156b679f825393a351e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveAnd</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a9819b9659083afeb2e1269195c417586</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveAnd</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>afc7c8e85299f7510d6824de8f7dc6d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableAnd</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a2fa863f933c45394d0476bb615c29ae7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableAnd</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a9bccd21b0edaef3eb51a1925df34e361</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum Proprule</type>
      <name>PROPRULE</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a02ab8dfd44a426aacd84e82f0244375e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Proprule</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_CORETIMES</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a9082376ede12425c1df01749fc808ce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2_CORETIMEHOLES</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700ac63e5fe5560616c5b9293e32631a1ecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3_EDGEFINDING</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700afe819bf91ff26e39ce3521db35ad9e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4_ENERGETICREASONING</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a1c0905b0306fc01f2d16327fdad0f77f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_RHS</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700ac61bb8e7bd92fdca9e6f1d62ddeb610f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_LHS</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a3c50f438d27ead284c65fe404d7a4d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrAnd</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a4ae52810712c7956c8ecc678516fcddb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsAnd</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a3a4cfa9913e7e94f4b849041bd6085f0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *resvar, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsAnd</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a57243ef6122f5e8975ee1cc9e89a1f74</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsAnd</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a414bf098b59bfd8d5a261f2629c8cd87</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetResultantAnd</name>
      <anchorfile>cons__and_8c.html</anchorfile>
      <anchor>a93e63a628fe8e0b34f1c3d3411f8606b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_and.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__and_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrAnd</name>
      <anchorfile>cons__and_8h.html</anchorfile>
      <anchor>a4ae52810712c7956c8ecc678516fcddb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsAnd</name>
      <anchorfile>cons__and_8h.html</anchorfile>
      <anchor>a3a4cfa9913e7e94f4b849041bd6085f0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *resvar, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsAnd</name>
      <anchorfile>cons__and_8h.html</anchorfile>
      <anchor>a57243ef6122f5e8975ee1cc9e89a1f74</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsAnd</name>
      <anchorfile>cons__and_8h.html</anchorfile>
      <anchor>a414bf098b59bfd8d5a261f2629c8cd87</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetResultantAnd</name>
      <anchorfile>cons__and_8h.html</anchorfile>
      <anchor>a93e63a628fe8e0b34f1c3d3411f8606b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_binpack.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__binpack_8c</filename>
    <includes id="cons__binpack_8h" name="cons_binpack.h" local="yes" imported="no">scip/cons_binpack.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LINCONSUPGD_PRIORITY</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>add60a3ce9e57e0d06d2136c71a0d1834</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>conshdlrCopyBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a275d2223b225c3b31c1e6e86cfd72c4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consFreeBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a1d3721d93a33f26feda4750b831531c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>aa735f24baa2d55a57a262afe6f032b13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>ae2d1beff05dd4e9c88dbd01352173235</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitpreBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a9708b4e1d65eb7764549847ddddcae52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a76259837614c1e4b2654cb486aa1a835</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitsolBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a1a7243714db3a0991e51548536c77c6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitsolBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>aa61856465e4aa80573ea380ad566e87b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeleteBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a7874324208b0700cae0c23bbc8239fdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consTransBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>ab63cc1f0fefe12de3fc782804e08bed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitlpBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>aced4852a3b383ae4892ff3854f9afc53</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consSepalpBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a3b26334093fc556ab92deedaefe5344c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consSepasolBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a2f8fd01cdbbe93d1fc95e182b2856ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consPropBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a672caea5745140dc7ec7d03c89d24145</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consPresolBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a035d5719a3c48bb290c4a1e51c47bc3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consRespropBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a1c4e4f4ad286c8c224383d579f57112e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>abce0ecfac7d6321ee0fd9b3ef2cd8032</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a9059428b8df3bc3f7f00bd77b2b639b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a0542a796775ff8c680a8aa2662b37e30</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a99841add02d6dfb8642180c7e4d1ce96</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consPrintBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>af7b90bc0e72388db54f00a9b50ed5679</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consCopyBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>aab04e17959d79b4dc4549f93bef45c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consParseBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>a3b2b98a2b606605a8c8a782ff10a194b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>ae5653f0946b725b48bfa835cd7c1f138</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBinpack</name>
      <anchorfile>cons__binpack_8c.html</anchorfile>
      <anchor>ab76fdfe302d92685f2374d8e95f75fc8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int len, SCIP_VAR **vars, SCIP_Real *vals, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_binpack.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__binpack_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrBinpack</name>
      <anchorfile>cons__binpack_8h.html</anchorfile>
      <anchor>ae5653f0946b725b48bfa835cd7c1f138</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBinpack</name>
      <anchorfile>cons__binpack_8h.html</anchorfile>
      <anchor>ab76fdfe302d92685f2374d8e95f75fc8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int len, SCIP_VAR **vars, SCIP_Real *vals, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_bounddisjunction.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__bounddisjunction_8c</filename>
    <includes id="cons__bounddisjunction_8h" name="cons_bounddisjunction.h" local="yes" imported="no">scip/cons_bounddisjunction.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_NAME</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>aea7e068fd23523fb86409f7437f49851</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_DESC</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>acd6ea343facf9430a46f3d1f3d6c675b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONFLICTHDLR_NAME</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>a14c78d52e3e23a9ff65280e21edb7f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONFLICTHDLR_DESC</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>a3d0966bff50048d7b5156eb5002cf4fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONFLICTHDLR_PRIORITY</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>a0fa023ede6482997fd713b768e3ab312</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AGEINCREASE</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>a0d75c2abdc6a362b474d2c3ba34957a1</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>ae23c8d7615ebe6670c2917ff5b30f05f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>ae628f4cd5031a505a69791f88f647e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitpreBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>abb30aa6621ace802770c3beebc0c5a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>a9e551a1c68695943aa71ad3d6fb5f21f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitsolBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>ac081dff574f0ca22dd08bad7a9a11f0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitsolBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>a86c5a16f9024735651a7bee13d29e6c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitlpBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>a035f2d8e684854933aee15dbde00ba56</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consSepalpBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>ad8bcc20fc1f6282b57ba6e67e8b47191</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consSepasolBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>abd7b283046a9806e93f4672924b6cefe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>adae102279f8bea63bc9fe09140b46957</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>ab962b0ddfe40061e0d02c807bafd9b99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consParseBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>ac66dcf3cda8d4c2ef3ecdd9949533e48</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>a05e8c9c71fd15cef320dd7887e42fc62</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>a4ea716f692db1c03f213b26a6ab6761b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_BOUNDTYPE *boundtypes, SCIP_Real *bounds, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>a5f146f87f4634590d1e44330d0606ff9</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>a21f4a8bb5c143c23f56b90268bd51402</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDTYPE *</type>
      <name>SCIPgetBoundtypesBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>add4341869101c8dbcea80d1aa6c99e0d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetBoundsBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8c.html</anchorfile>
      <anchor>ad4e3521d4a238b48f0f62737e5f1cfd5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_bounddisjunction.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__bounddisjunction_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8h.html</anchorfile>
      <anchor>a05e8c9c71fd15cef320dd7887e42fc62</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8h.html</anchorfile>
      <anchor>a4ea716f692db1c03f213b26a6ab6761b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_BOUNDTYPE *boundtypes, SCIP_Real *bounds, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8h.html</anchorfile>
      <anchor>a5f146f87f4634590d1e44330d0606ff9</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8h.html</anchorfile>
      <anchor>a21f4a8bb5c143c23f56b90268bd51402</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDTYPE *</type>
      <name>SCIPgetBoundtypesBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8h.html</anchorfile>
      <anchor>add4341869101c8dbcea80d1aa6c99e0d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetBoundsBounddisjunction</name>
      <anchorfile>cons__bounddisjunction_8h.html</anchorfile>
      <anchor>ad4e3521d4a238b48f0f62737e5f1cfd5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_conjunction.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__conjunction_8c</filename>
    <includes id="cons__conjunction_8h" name="cons_conjunction.h" local="yes" imported="no">scip/cons_conjunction.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>conshdlrCopyConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>afec43105e7db249a1e47a8300fa9770c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consFreeConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a346c2a647f790b590573cc70159668c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>af2c81361196edeaa3fffb93e254d234b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a00a91521159c63421353fe6ef65d77df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitpreConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>adb7748b9bda578f4af84957a1f231fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a988da9958b41d248f63b886852f439ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitsolConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a917e20921840f5f5988e73c5f9026395</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitsolConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>aa501637ae7c97ecd06ff5b08a2cf7f26</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitlpConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>af0d8abd82d194dc4ee2bcd5a97f02f43</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consSepalpConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a6a29ac1c3d4e62066771634f7c11fec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consSepasolConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a7070bf3cf0d3545a77132cd250fa8440</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consPropConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a7d0f69c7684096ac4831b9d63ff4ed4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consRespropConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a74135b7dafc8092c406a9475393f7a39</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a4a869ebd0584aec085e2730ec0672ba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a365086e3bf6fc50c6c239b09996a3323</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a4a8ed7bff39eb0ec99c9c466e7bb45d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>af8d69daf234c29241e7277e73fee92b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consCopyConjuction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>ac3e21c64f82a351930622c5265247920</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consParseConjuction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a2eb2b8fc22f69b9872ff9843beb4b2bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a91345eaf2d0d572ff3e280dadf40d070</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a20a0d5d6d2b81ce5f927453d1f70789f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nconss, SCIP_CONS **conss, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConsElemConjunction</name>
      <anchorfile>cons__conjunction_8c.html</anchorfile>
      <anchor>a44a51d7191edfba5bf54b0c6d8182508</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_CONS *addcons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_conjunction.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__conjunction_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrConjunction</name>
      <anchorfile>cons__conjunction_8h.html</anchorfile>
      <anchor>a91345eaf2d0d572ff3e280dadf40d070</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsConjunction</name>
      <anchorfile>cons__conjunction_8h.html</anchorfile>
      <anchor>a20a0d5d6d2b81ce5f927453d1f70789f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nconss, SCIP_CONS **conss, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConsElemConjunction</name>
      <anchorfile>cons__conjunction_8h.html</anchorfile>
      <anchor>a44a51d7191edfba5bf54b0c6d8182508</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_CONS *addcons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_countsols.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__countsols_8c</filename>
    <includes id="cons__and_8h" name="cons_and.h" local="yes" imported="no">scip/cons_and.h</includes>
    <includes id="cons__knapsack_8h" name="cons_knapsack.h" local="yes" imported="no">scip/cons_knapsack.h</includes>
    <includes id="cons__bounddisjunction_8h" name="cons_bounddisjunction.h" local="yes" imported="no">scip/cons_bounddisjunction.h</includes>
    <includes id="cons__logicor_8h" name="cons_logicor.h" local="yes" imported="no">scip/cons_logicor.h</includes>
    <includes id="cons__setppc_8h" name="cons_setppc.h" local="yes" imported="no">scip/cons_setppc.h</includes>
    <includes id="cons__varbound_8h" name="cons_varbound.h" local="yes" imported="no">scip/cons_varbound.h</includes>
    <includes id="cons__countsols_8h" name="cons_countsols.h" local="yes" imported="no">scip/cons_countsols.h</includes>
    <includes id="dialog__default_8h" name="dialog_default.h" local="yes" imported="no">scip/dialog_default.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SPARSETEST</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a693489a348a760d9abf2f9fdbef4ee77</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DISCARDSOLS</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a1b18e8db14c0521418a319d6c0489014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ACTIVE</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>af18888f07ee6c58594ed96b82f0b8f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_COLLECT</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a98d1a3dbdaae2badea3a305385e564d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SOLLIMIT</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>ac644fbdd1a058b4b53cfd55a11676a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_SOLS_NAME</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a624ac2d5db2381af9df774b1a4cbff26</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_SOLS_DESC</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>acd39abfc4788adbee31cf9bfb349df7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_SOLS_HEADER</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a7eeb892564c23d66dee61df5b883718b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_SOLS_WIDTH</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a5f31cbdfac7f510a05520380590182c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_SOLS_PRIORITY</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a1f833768a7657385e5b25ea93885e2c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_SOLS_POSITION</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>afd41b91568463367b6accb3746e1fd5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_SOLS_STRIPLINE</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a0a953917233ba41ad9f573e840b5c39a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_CUTS_NAME</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a06eb01e4cf42fcb1335cb5751182c249</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_CUTS_DESC</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a9bebd1bbf52b4af1a93f563bb8a01f4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_CUTS_HEADER</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a51c5fc3acdbb9e970e2c6b05c124c0b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_CUTS_WIDTH</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a4c2c5c54828aeea13a36e89882bc52dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_CUTS_PRIORITY</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a9c3f75e643942ca8f11942b2bf64ab98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_CUTS_POSITION</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a2e182eb66e4a4d2b06b6ac2b07c6bf30</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_CUTS_STRIPLINE</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>aae172b5edd4b9999006cf700eb3caf45</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CUTOFF_CONSTRAINT</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a56f3fe1c91f67bfecc6b9f26b418349d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitpreCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a47fd0721e6c497a4a278ebd578cda944</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a8e8008bce0baf24cfc5ab3e0adca2176</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitsolCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>aeb85c1ebe9c37cb2354d57fd63b709dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeleteCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a46a98ef58b7d85bb5b79a94d4d714007</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consTransCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a0ca8011958758d79d5fdd277a524be65</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitlpCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>ac0afebd37a83c33e3242e2eb315f8266</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consSepalpCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a41c81f7ab8b254a6087f7bcab88e172e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consSepasolCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a401349ed492bb7f272a9050924fe0c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consPropCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a219970039cc72971e87cb434d4076887</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consPresolCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a18ceb84e04d161085820e4a9ddfcd9e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consRespropCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a6a97b80faddc86310e0ae794e47b8c06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>aaae51af47cf003aa45e8de84f86e99c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>aa4997b081071cdf68085fc6f3e7b028e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a13494be9692855c25a837d5cc90741f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a254818446a75776c17651a50d06d9358</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consPrintCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a62a440122029be3f05c02609990f91c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consCopyCountsol</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a685291be757551282d86cbbc6927b9f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consParseCountsol</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>aabd3d575974c4f4fab8b6c9d162cc87c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_Longint</type>
      <name>Int</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>ae596116354671ea53796651e56ecf748</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a599e17990e96f53aec3c5650ee9773b3</anchor>
      <arglist>(SCIPdialogExecCount)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a1c3b0e8f05febeac36ad6f77ce45bf66</anchor>
      <arglist>(SCIPdialogExecWriteAllsolutions)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a2f1a135719b35b96839d75393eaf34aa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcount</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>aef183d6883f1917bffb15159f7b856fd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNCountedSols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a94474f0a2a7a84d6bda5838f9d1a906d</anchor>
      <arglist>(SCIP *scip, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPgetNCountedSolsstr</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>a475ad738f80c4aa477be926affe0b353</anchor>
      <arglist>(SCIP *scip, char **buffer, int buffersize, int *requiredsize)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNCountedFeasSubtrees</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>aa0c720ca903f2410e25418740c9c9468</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPgetCountedSparseSolutions</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>acbf587cc73efb9556f2ea7deba3dad37</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***vars, int *nvars, SPARSESOLUTION ***sols, int *nsols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetParamsCountsols</name>
      <anchorfile>cons__countsols_8c.html</anchorfile>
      <anchor>ad77e31969be5793016a019e006eda73c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_countsols.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__countsols_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="typedef">
      <type>struct SparseSolution</type>
      <name>SPARSESOLUTION</name>
      <anchorfile>cons__countsols_8h.html</anchorfile>
      <anchor>ac4b06e2634c82994a219847a003eeccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>cons__countsols_8h.html</anchorfile>
      <anchor>a599e17990e96f53aec3c5650ee9773b3</anchor>
      <arglist>(SCIPdialogExecCount)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>cons__countsols_8h.html</anchorfile>
      <anchor>a1c3b0e8f05febeac36ad6f77ce45bf66</anchor>
      <arglist>(SCIPdialogExecWriteAllsolutions)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrCountsols</name>
      <anchorfile>cons__countsols_8h.html</anchorfile>
      <anchor>a2f1a135719b35b96839d75393eaf34aa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcount</name>
      <anchorfile>cons__countsols_8h.html</anchorfile>
      <anchor>aef183d6883f1917bffb15159f7b856fd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNCountedSols</name>
      <anchorfile>cons__countsols_8h.html</anchorfile>
      <anchor>a94474f0a2a7a84d6bda5838f9d1a906d</anchor>
      <arglist>(SCIP *scip, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPgetNCountedSolsstr</name>
      <anchorfile>cons__countsols_8h.html</anchorfile>
      <anchor>a475ad738f80c4aa477be926affe0b353</anchor>
      <arglist>(SCIP *scip, char **buffer, int buffersize, int *requiredsize)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNCountedFeasSubtrees</name>
      <anchorfile>cons__countsols_8h.html</anchorfile>
      <anchor>aa0c720ca903f2410e25418740c9c9468</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPgetCountedSparseSolutions</name>
      <anchorfile>cons__countsols_8h.html</anchorfile>
      <anchor>acbf587cc73efb9556f2ea7deba3dad37</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***vars, int *nvars, SPARSESOLUTION ***sols, int *nsols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetParamsCountsols</name>
      <anchorfile>cons__countsols_8h.html</anchorfile>
      <anchor>ad77e31969be5793016a019e006eda73c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_cumulative.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__cumulative_8c</filename>
    <includes id="cons__cumulative_8h" name="cons_cumulative.h" local="yes" imported="no">scip/cons_cumulative.h</includes>
    <includes id="cons__linking_8h" name="cons_linking.h" local="yes" imported="no">scip/cons_linking.h</includes>
    <includes id="cons__knapsack_8h" name="cons_knapsack.h" local="yes" imported="no">scip/cons_knapsack.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USEBINVARS</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>ac9638c1a62ed8c1cc3af0c735aad5b31</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_LOCALCUTS</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a2718927f5f5b8961f110d858b6218662</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USECOVERCUTS</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a2110e81eb333c985996b1283a15dfdcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USECORETIMES</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a0be50ff44841b088bc8cb5f74ea6f579</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USECORETIMESHOLES</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>ad4bb74e2e8451a6817ef85c21f9d9b38</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USEEDGEFINDING</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>ab9c68f745eb1ffd3a72f57734168294f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USEENERGETICREASONING</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a50917a1f20abf180ccf5df975bfbe2c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_CUTSASCONSS</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a7b3ac121c1d1e5c9cb02f1cc617f49ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitCumulative</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a157bbd7a158260d69fe42db165725009</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitCumulative</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a81ef9e5833d05fae6b73fb77f8bf50a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreCumulative</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a00a2aa9789f9ded735e1f9eb42521b78</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitsolCumulative</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a3f49b0062cfa50276dc52931c60669c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveCumulative</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a940537c28da1f68f95d35a46ed58b058</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveCumulative</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a61020ba08025059db0ce3641da24ae92</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableCumulative</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>acecdb5ab99ff007dca7b057202cb6093</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableCumulative</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a8c4f3f198ed8629721d232b9cb9a5e59</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consParseCumulative</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a71eff55a96a9705ce16ffce44d652008</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum Proprule</type>
      <name>PROPRULE</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a02ab8dfd44a426aacd84e82f0244375e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct InferInfo</type>
      <name>INFERINFO</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>ad58287ccdbe599464c3583772c751b25</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ThetaTreeNode</type>
      <name>THETATREENODE</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a38082ba0bf271b8426c4878e618dec02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ThetaTree</type>
      <name>THETATREE</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>aeb53d0f9a428f4e323cb9e49ba38af97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct TLTreeNode</type>
      <name>TLTREENODE</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a676f2d90156a3b5aa6bc3a5bea7244e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct TLTree</type>
      <name>TLTREE</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a8458a7b26e3144f88793c0f50b573509</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Proprule</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_CORETIMES</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a9082376ede12425c1df01749fc808ce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2_CORETIMEHOLES</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700ac63e5fe5560616c5b9293e32631a1ecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3_EDGEFINDING</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700afe819bf91ff26e39ce3521db35ad9e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4_ENERGETICREASONING</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a1c0905b0306fc01f2d16327fdad0f77f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_RHS</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700ac61bb8e7bd92fdca9e6f1d62ddeb610f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_LHS</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a3c50f438d27ead284c65fe404d7a4d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrCumulative</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a5fc1cb9a5326e09db66867291891fe6a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsCumulative</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>af9312fb28ec365d9a2377582a1777805</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, int *durations, int *demands, int capacity, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsCumulative</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a29d15b51a4f3f0dbc08c33c17e395a0b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsCumulative</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>ae38707f4b5392d73372e7367399f77c3</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetCapacityCumulative</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a9de4d325285a82ea921ee9a9e2da19ac</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>SCIPgetDurationsCumulative</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>ada392f726f16eb9db8b88aa9b2b7972f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>SCIPgetDemandsCumulative</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>ae9d16fbf5b98d74b2d6cb9d477b33b14</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprofileCreate</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>aa720e4f484484e44f5a3deb76ccf8dbd</anchor>
      <arglist>(SCIP *scip, CUMULATIVEPROFILE **profile, int capacity, int maxtimepoints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprofileFree</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>ad83a955287031379deb255eea18d3735</anchor>
      <arglist>(SCIP *scip, CUMULATIVEPROFILE **profile)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprofileResize</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>aec1ad8990b6ec0acd35259dd09740100</anchor>
      <arglist>(SCIP *scip, CUMULATIVEPROFILE *profile, int newminsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprofileInsertCore</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>ad5763f36b38e089c45e5ca86b36ed49e</anchor>
      <arglist>(SCIP *scip, CUMULATIVEPROFILE *profile, SCIP_VAR *var, int duration, int demand, SCIP_Bool *core, SCIP_Bool *fixed, SCIP_Bool *infeasible)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprofileDeleteCore</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a1e95a44b4112fe677d114c06b6b6b166</anchor>
      <arglist>(SCIP *scip, CUMULATIVEPROFILE *profile, SCIP_VAR *var, int duration, int demand, SCIP_Bool *core)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprofilePrint</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a0f2e72d957ac50f42ebb42bbec228c8f</anchor>
      <arglist>(SCIP *scip, CUMULATIVEPROFILE *profile, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPprofileFindLowerBound</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a2cc9e00dfd15d669e5e8f58ae52f35e1</anchor>
      <arglist>(CUMULATIVEPROFILE *profile, int timepoint, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPprofileInsertTimepoint</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a2670c4cd0bad122c8083b23d994f5774</anchor>
      <arglist>(CUMULATIVEPROFILE *profile, int timepoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprofileUpdate</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>ad294ed34785c693f4719aa9b9f4c8ec0</anchor>
      <arglist>(CUMULATIVEPROFILE *profile, int starttime, int endtime, int demand, SCIP_Bool *infeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPprofileIsFeasibleStart</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a6166947a94a7a6fb5b3b1c778f5f4e72</anchor>
      <arglist>(CUMULATIVEPROFILE *profile, int timepoint, int duration, int demand, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPprofileGetEarliestFeasibleStart</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>ad045b0786c38308479edbef01d48ac99</anchor>
      <arglist>(CUMULATIVEPROFILE *profile, int lb, int ub, int duration, int demand, SCIP_Bool *infeasible)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPprofileGetLatestFeasibleStart</name>
      <anchorfile>cons__cumulative_8c.html</anchorfile>
      <anchor>a5777fe53c2c0dad76a84e651b928d968</anchor>
      <arglist>(CUMULATIVEPROFILE *profile, int lb, int ub, int duration, int demand, SCIP_Bool *infeasible)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_cumulative.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__cumulative_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="typedef">
      <type>struct CumulativeProfile</type>
      <name>CUMULATIVEPROFILE</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>af2db6ae3ed1813d589d6d4ca0f782532</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrCumulative</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>a5fc1cb9a5326e09db66867291891fe6a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsCumulative</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>af9312fb28ec365d9a2377582a1777805</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, int *durations, int *demands, int capacity, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsCumulative</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>a29d15b51a4f3f0dbc08c33c17e395a0b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsCumulative</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>ae38707f4b5392d73372e7367399f77c3</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetCapacityCumulative</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>a9de4d325285a82ea921ee9a9e2da19ac</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>SCIPgetDurationsCumulative</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>ada392f726f16eb9db8b88aa9b2b7972f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>SCIPgetDemandsCumulative</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>ae9d16fbf5b98d74b2d6cb9d477b33b14</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprofileCreate</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>aa720e4f484484e44f5a3deb76ccf8dbd</anchor>
      <arglist>(SCIP *scip, CUMULATIVEPROFILE **profile, int capacity, int maxtimepoints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprofileFree</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>ad83a955287031379deb255eea18d3735</anchor>
      <arglist>(SCIP *scip, CUMULATIVEPROFILE **profile)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprofileResize</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>aec1ad8990b6ec0acd35259dd09740100</anchor>
      <arglist>(SCIP *scip, CUMULATIVEPROFILE *profile, int newminsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprofileInsertCore</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>ad5763f36b38e089c45e5ca86b36ed49e</anchor>
      <arglist>(SCIP *scip, CUMULATIVEPROFILE *profile, SCIP_VAR *var, int duration, int demand, SCIP_Bool *core, SCIP_Bool *fixed, SCIP_Bool *infeasible)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprofileDeleteCore</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>a1e95a44b4112fe677d114c06b6b6b166</anchor>
      <arglist>(SCIP *scip, CUMULATIVEPROFILE *profile, SCIP_VAR *var, int duration, int demand, SCIP_Bool *core)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprofilePrint</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>a0f2e72d957ac50f42ebb42bbec228c8f</anchor>
      <arglist>(SCIP *scip, CUMULATIVEPROFILE *profile, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPprofileFindLowerBound</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>a2cc9e00dfd15d669e5e8f58ae52f35e1</anchor>
      <arglist>(CUMULATIVEPROFILE *profile, int timepoint, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPprofileInsertTimepoint</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>a2670c4cd0bad122c8083b23d994f5774</anchor>
      <arglist>(CUMULATIVEPROFILE *profile, int timepoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprofileUpdate</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>ad294ed34785c693f4719aa9b9f4c8ec0</anchor>
      <arglist>(CUMULATIVEPROFILE *profile, int starttime, int endtime, int demand, SCIP_Bool *infeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPprofileIsFeasibleStart</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>a6166947a94a7a6fb5b3b1c778f5f4e72</anchor>
      <arglist>(CUMULATIVEPROFILE *profile, int timepoint, int duration, int demand, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPprofileGetEarliestFeasibleStart</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>ad045b0786c38308479edbef01d48ac99</anchor>
      <arglist>(CUMULATIVEPROFILE *profile, int lb, int ub, int duration, int demand, SCIP_Bool *infeasible)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPprofileGetLatestFeasibleStart</name>
      <anchorfile>cons__cumulative_8h.html</anchorfile>
      <anchor>a5777fe53c2c0dad76a84e651b928d968</anchor>
      <arglist>(CUMULATIVEPROFILE *profile, int lb, int ub, int duration, int demand, SCIP_Bool *infeasible)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_eqknapsack.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__eqknapsack_8c</filename>
    <includes id="cons__eqknapsack_8h" name="cons_eqknapsack.h" local="yes" imported="no">scip/cons_eqknapsack.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LINCONSUPGD_PRIORITY</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>add60a3ce9e57e0d06d2136c71a0d1834</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>conshdlrCopyEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a9ee037e5ce17d5c04770791009e86744</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consFreeEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a3618d4c510e7e0a8a572d0147ea5484b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>ae1f9a1871db0c5fa2299853f4685598e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a084f3260c3548d7d7287772736abfbdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitpreEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a243271a39b5fd026b3a1cee272680745</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a130a2f5002dbd14c97d1254d95aed809</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitsolEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>abe9e2f589535f187eba8a90ffa28a50d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitsolEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a801d7230e779f27f68cb49c86dd7e3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeleteEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>ab3401021c258aed7e1a52635657aac86</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consTransEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>acf11ff190acb0ad60f80484f6ea66617</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitlpEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a5df2dd6c0e690a6d8c90f462f7d0ab57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consSepalpEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>aa0008c1fb3b2ac4c8650f579774a1b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consSepasolEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>ab5474c7c6ddc64ef8722eca388be8f31</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consPropEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a794b769b1447c041358ec95cab9f680b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consPresolEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>ad5e4673ad33e1bb71cbabc03acc02730</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consRespropEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>ac525f91182520f90f9d847820b148455</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a909e53bc71f817885170b6de8459e32d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a19f7edc95ab35d23f14bcb66b428c005</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>afc14474b3ac37391560058c853866800</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a81b2925275c23d6efea0f14af642d358</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consPrintEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a579fea641eda6152abd6e1c88f1c856b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consCopyEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>acdbcd4b805fda34675079514d98618be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consParseEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a8d466431d7b121af5449d576e43aa10d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a3b196f972d1bfd31006c938c251776d5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsEqknapsack</name>
      <anchorfile>cons__eqknapsack_8c.html</anchorfile>
      <anchor>a4f7346ab9821836b3aaa13fb4a3660a6</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int len, SCIP_VAR **vars, SCIP_Real *vals, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_eqknapsack.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__eqknapsack_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrEqknapsack</name>
      <anchorfile>cons__eqknapsack_8h.html</anchorfile>
      <anchor>a3b196f972d1bfd31006c938c251776d5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsEqknapsack</name>
      <anchorfile>cons__eqknapsack_8h.html</anchorfile>
      <anchor>a4f7346ab9821836b3aaa13fb4a3660a6</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int len, SCIP_VAR **vars, SCIP_Real *vals, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_indicator.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__indicator_8c</filename>
    <includes id="cons__indicator_8h" name="cons_indicator.h" local="yes" imported="no">scip/cons_indicator.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="cons__logicor_8h" name="cons_logicor.h" local="yes" imported="no">scip/cons_logicor.h</includes>
    <includes id="cons__varbound_8h" name="cons_varbound.h" local="yes" imported="no">scip/cons_varbound.h</includes>
    <includes id="heur__trysol_8h" name="heur_trysol.h" local="yes" imported="no">scip/heur_trysol.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_NAME</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>aea7e068fd23523fb86409f7437f49851</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_DESC</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>acd6ea343facf9430a46f3d1f3d6c675b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_BRANCHINDICATORS</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>ac7d4c8f555578e38c950b3fca3ba9b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_GENLOGICOR</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>ae5f8050ea9a4a858bd97d8c8aa14cc78</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SEPAALTERNATIVELP</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>ab28e3b2e050655c406cefdbaa8f45665</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ADDCOUPLING</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>af4164c9feb7caf90cb4919bb8d98cdb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXCOUPLINGVALUE</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a6c4f5726fd26558cec203d70f13c19f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ADDCOUPLINGCONS</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a1d0f12cdc1e3ed99e060039356e64901</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_REMOVEINDICATORS</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a7c7de5028074b7d1823f587370ea4ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_UPDATEBOUNDS</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>aa66db0519a8355dd426d7f194c462d06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_TRYSOLUTIONS</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a05127f7e7a4badc1b02ac5808f9c13cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NOLINCONSCONT</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>af9c4e7ab3068a0d6e36c4d80ba682827</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ENFORCECUTS</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>ab79c06411ff2b96ee4822787b88db41d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OBJEPSILON</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>ac6ee5cd549dbd0245e5ae8346a9ec60b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_CALL_PARAM</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a121a8f5431345c6c8fcbca7553b69bdc</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveIndicator</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>af99f009d242c1696e9a4af993a17234e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveIndicator</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a5223741564a4b3ba94d581e85dc7f533</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitIndicator</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a42731aee0e5425b1c99ee5a9ac82f46d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrIndicator</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>acec6947832a55d9dde74e7ba446d1ccd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsIndicator</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a52f6038d998403a3f5f5ba3c154f0dfc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *binvar, int nvars, SCIP_VAR **vars, SCIP_Real *vals, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsIndicatorLinCons</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a027445ced4573462bb613f293b5569dc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *binvar, SCIP_CONS *lincons, SCIP_VAR *slackvar, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarIndicator</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>ad974cacd95e7d4da66945ad1cd7aec87</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS *</type>
      <name>SCIPgetLinearConsIndicator</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a3940c41d867a4c2ad752bdab01a7d8b4</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetLinearConsIndicator</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a52c113d2e5e681f68883c9821418cedf</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_CONS *lincons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBinaryVarIndicator</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>abc00f18a59dee1232f8a2c41bfd3c9b0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *binvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetBinaryVarIndicator</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>aa41b2ec6bbfe402f40a55d4b34d1a866</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetSlackVarIndicator</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a1f334f8895c4779856d1e7b62aed47a4</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSlackVarIndicator</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a09a28c61d5a1eef2e014a4c9be73a592</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *slackvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisViolatedIndicator</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>ad753ff2e29333ef3abec7f6c651368a5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmakeIndicatorFeasible</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>ac50cc1a3e02089a32c8ee04f9d9eb5a8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol, SCIP_Bool *changed)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLinearConsIndicator</name>
      <anchorfile>cons__indicator_8c.html</anchorfile>
      <anchor>a48ffeef9b6caa9c8626b30a28bc2dd16</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS *lincons)</arglist>
    </member>
    <docanchor file="cons__indicator_8c">DETAIL</docanchor>
    <docanchor file="cons__indicator_8c">SEPARATION</docanchor>
    <docanchor file="cons__indicator_8c">PREPROC</docanchor>
    <docanchor file="cons__indicator_8c">ALTERNATIVEPOLYHEDRON</docanchor>
  </compound>
  <compound kind="file">
    <name>cons_indicator.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__indicator_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrIndicator</name>
      <anchorfile>cons__indicator_8h.html</anchorfile>
      <anchor>acec6947832a55d9dde74e7ba446d1ccd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsIndicator</name>
      <anchorfile>cons__indicator_8h.html</anchorfile>
      <anchor>a52f6038d998403a3f5f5ba3c154f0dfc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *binvar, int nvars, SCIP_VAR **vars, SCIP_Real *vals, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsIndicatorLinCons</name>
      <anchorfile>cons__indicator_8h.html</anchorfile>
      <anchor>a027445ced4573462bb613f293b5569dc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *binvar, SCIP_CONS *lincons, SCIP_VAR *slackvar, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarIndicator</name>
      <anchorfile>cons__indicator_8h.html</anchorfile>
      <anchor>ad974cacd95e7d4da66945ad1cd7aec87</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS *</type>
      <name>SCIPgetLinearConsIndicator</name>
      <anchorfile>cons__indicator_8h.html</anchorfile>
      <anchor>a3940c41d867a4c2ad752bdab01a7d8b4</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetLinearConsIndicator</name>
      <anchorfile>cons__indicator_8h.html</anchorfile>
      <anchor>a52c113d2e5e681f68883c9821418cedf</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_CONS *lincons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBinaryVarIndicator</name>
      <anchorfile>cons__indicator_8h.html</anchorfile>
      <anchor>abc00f18a59dee1232f8a2c41bfd3c9b0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *binvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetBinaryVarIndicator</name>
      <anchorfile>cons__indicator_8h.html</anchorfile>
      <anchor>aa41b2ec6bbfe402f40a55d4b34d1a866</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetSlackVarIndicator</name>
      <anchorfile>cons__indicator_8h.html</anchorfile>
      <anchor>a1f334f8895c4779856d1e7b62aed47a4</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSlackVarIndicator</name>
      <anchorfile>cons__indicator_8h.html</anchorfile>
      <anchor>a09a28c61d5a1eef2e014a4c9be73a592</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *slackvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisViolatedIndicator</name>
      <anchorfile>cons__indicator_8h.html</anchorfile>
      <anchor>ad753ff2e29333ef3abec7f6c651368a5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmakeIndicatorFeasible</name>
      <anchorfile>cons__indicator_8h.html</anchorfile>
      <anchor>ac50cc1a3e02089a32c8ee04f9d9eb5a8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol, SCIP_Bool *changed)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLinearConsIndicator</name>
      <anchorfile>cons__indicator_8h.html</anchorfile>
      <anchor>a48ffeef9b6caa9c8626b30a28bc2dd16</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS *lincons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_integral.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__integral_8c</filename>
    <includes id="cons__integral_8h" name="cons_integral.h" local="yes" imported="no">scip/cons_integral.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consFreeIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a04b29b122c893c842b73311c708eabd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a7e7f38fc28d1eef4ee4c1a6b26e98c97</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a576e2df659050bfc5b0faa9b4938fb9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitpreIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a2b21bc739ce98b0de26ab4b2ff3cdf29</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a3d65c7843bdaed425cf16210b5b7a91e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitsolIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a8baa0c809dca7bc9bd5a116cd78b765d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitsolIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a0e9c5f01d76af6d92094ada5d6fff93b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeleteIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a97de4acbc3eb7296c9edc7bc9d93ae45</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consTransIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>aee1ee6efdc3b71548789fed49c73d538</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitlpIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>ae8b46e3570fd6932903364ea7094b35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consSepalpIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a6d348e9bc99a4d9994106eb34b1171b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consSepasolIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a2b9c1ccacdffb2fe395bff1e1a517a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnfopsIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>af2e5ce9eeb60ab2d07a9f17f8c16d70d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consPropIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>af356bf721520c43e6f456ff538ec1647</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consPresolIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>aebd86fc645cd22aefed460c9f9a5ed0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consRespropIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a50af6ee91c597dd745ff0b1b6a76f2e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a69a25838356d45d9ec3de2303c80c0e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>abe56d70be1eba60da1477499af1aa76d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>aa2af05aed051ecc1a81ba17cb7b5a369</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>afb508103b543bbb8f614312d4f35018d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consPrintIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a7212e4b5016a2afc4e460bd4986f3c10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consCopyIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a02baa50a61cb6ad1e22d3d65daea2c52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consParseIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>a6348056af9d74516125603404218fd51</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrIntegral</name>
      <anchorfile>cons__integral_8c.html</anchorfile>
      <anchor>ac0a17c1fb32d73a8c3ead6de9ff799e2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_integral.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__integral_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrIntegral</name>
      <anchorfile>cons__integral_8h.html</anchorfile>
      <anchor>ac0a17c1fb32d73a8c3ead6de9ff799e2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_invarknapsack.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__invarknapsack_8c</filename>
    <includes id="cons__invarknapsack_8h" name="cons_invarknapsack.h" local="yes" imported="no">scip/cons_invarknapsack.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LINCONSUPGD_PRIORITY</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>add60a3ce9e57e0d06d2136c71a0d1834</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>conshdlrCopyInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a6b29bd002895c3778c525f180ab3ffd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consFreeInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a5b06cf15d5e0162f59ef4edee60b8685</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>aa7840ded1d74894348f74fa27fec99be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a77025f4688c63483452122e507735809</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitpreInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>aa63f90041857743a069cf68c62a059f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a1b38494891dcd7c4bd6364ce71b80741</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitsolInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>aefbe23e77e161bcd492a1380b4eb117d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitsolInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a96d44b3592e6bbe4f2a99991d90f5df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeleteInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>af6c09128b7725ecd256e89b3bdce54b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consTransInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a72045e1fe8ad1232e925669d0c0aa53a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitlpInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a1912555e4d42f67dc66a0cd497a71021</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consSepalpInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>ac44cb7409c0622419b2e69040d7c5a2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consSepasolInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>ad741fd99c7da91259ad29e9eff2b906b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consPropInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a4248c6e595a99d5cb4afe6d80f65466f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consPresolInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>afd50ff0272e52be84f71bf8388305f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consRespropInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>adc4d60a81f2bae52273736abdd082dc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a26c202b9ccb4fb58d16b151a9b42769b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a34dabbe13fff6b153b3ea816c8673dca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a7df716704c70de0686858828259bda70</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a8a65fb4879465e234ff608942db59407</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consPrintInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a24c09dc841901e4998e8f6e2f3bc0974</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consCopyInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>aa4dba0d85874416e5681bd1024aa80a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consParseInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a8bcb8866c489f0be6d1869e0fd49f464</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>a95fa3584c5ffae0ac7ca4b1736e6e04a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8c.html</anchorfile>
      <anchor>aaf70ab6f35345911a586d29386d65456</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int len, SCIP_VAR **vars, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_invarknapsack.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__invarknapsack_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8h.html</anchorfile>
      <anchor>a95fa3584c5ffae0ac7ca4b1736e6e04a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsInvarknapsack</name>
      <anchorfile>cons__invarknapsack_8h.html</anchorfile>
      <anchor>aaf70ab6f35345911a586d29386d65456</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int len, SCIP_VAR **vars, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_knapsack.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__knapsack_8c</filename>
    <includes id="cons__knapsack_8h" name="cons_knapsack.h" local="yes" imported="no">scip/cons_knapsack.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="cons__setppc_8h" name="cons_setppc.h" local="yes" imported="no">scip/cons_setppc.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_NAME</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>aea7e068fd23523fb86409f7437f49851</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_DESC</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>acd6ea343facf9430a46f3d1f3d6c675b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LINCONSUPGD_PRIORITY</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>add60a3ce9e57e0d06d2136c71a0d1834</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_DYNPROG_CAPACITY</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>af20e8eced492b440a8375dcf2228725a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_USECLIQUES_SIZE</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>ae1402ad7d5deb361c027fa5578cb0baf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_ZEROITEMS_SIZE</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>afeb7f0916771ece52211173c675e5c1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KNAPSACKRELAX_MAXDELTA</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a0f3e497011b1d51ba791fbbf994b6b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KNAPSACKRELAX_MAXDNOM</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>acec9969bde4b2a2646860b7b025a99cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KNAPSACKRELAX_MAXSCALE</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a2bff924dc2de01df92f56da0ddb89614</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SEPACARDFREQ</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a0daf5a29ccf19f0bcd147aacfb66144d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDS</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>ad1a925058883d0cd959cea25479f6436</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDSROOT</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a5c62f47fd3344274a3ec1b924cdc2a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTS</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>ac1ee053eab0810875e4ad04309d47ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTSROOT</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a869aa0207dd459a9bbc8cb7b4c18084e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXCARDBOUNDDIST</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a626e4b34a25d691ee68d8c2554a155cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DISAGGREGATION</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>af355bd6b74cf8e7a12201d42bf996091</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SIMPLIFYINEQUALITIES</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>aad1d886c7d47a726e40ac22458267769</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NEGATEDCLIQUE</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a5d6b497fabc691c0850722baa8f434e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXABSVBCOEF</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>ad5220578600b445b27e18d964f18c07d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USESUPADDLIFT</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>acf53b61b08dcb1e1129ac93af259ac5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PRESOLUSEHASHING</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a8d97ceb0231590426c6e624f682682e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASHSIZE_KNAPSACKCONS</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a82dc93a4ec603d83ff9af9e58c8b6fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PRESOLPAIRWISE</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a50bbd2474c7b2e724b95eb570d507a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NMINCOMPARISONS</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>ab6f3d3036dfe8fd11c392c934e3f4c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINGAINPERNMINCOMPARISONS</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>aa48184fdd836534b78d110285955a496</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DUALPRESOLVING</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a0af38c9ef55a1c3ad6b03e5cc1874f80</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IDX</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a971303525c9d5c4e28121d4785b2786e</anchor>
      <arglist>(j, d)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitsolKnapsack</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>aab6ce84fda00ca8eeae3e62eebbecbcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveKnapsack</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a6f68933227aa4f49b1427a38b3d2cdcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveKnapsack</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a7a7a38084153f39edbf26f727a41f47f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableKnapsack</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a34b2ab0ea8e7134c3bac46e63a8bbe6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableKnapsack</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>aa880302a691690075834aa67bc294943</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consParseKnapsack</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a04d60b9e9cf5b89903441a3e0afbca9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct sortkeypair</type>
      <name>SORTKEYPAIR</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a5c6a69f07f82ac4db0e40c11acc7c0a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveKnapsackExactly</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a8f16a4931b2d53b5ad471c7ec62f8a0e</anchor>
      <arglist>(SCIP *scip, int nitems, SCIP_Longint *weights, SCIP_Real *profits, SCIP_Longint capacity, int *items, int *solitems, int *nonsolitems, int *nsolitems, int *nnonsolitems, SCIP_Real *solval, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveKnapsackApproximately</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a3e8d53334043cd2048b0242816f3ab5a</anchor>
      <arglist>(SCIP *scip, int nitems, SCIP_Longint *weights, SCIP_Real *profits, SCIP_Longint capacity, int *items, int *solitems, int *nonsolitems, int *nsolitems, int *nnonsolitems, SCIP_Real *solval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPseparateKnapsackCuts</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>ae14383ef7565e2c9d2b9ff7ba9c1247f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR **vars, int nvars, SCIP_Longint *weights, SCIP_Longint capacity, SCIP_SOL *sol, int *ncuts)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPseparateRelaxedKnapsack</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a805a2372ae2d872471bd48f82739be3b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, int nknapvars, SCIP_VAR **knapvars, SCIP_Real *knapvals, SCIP_Real valscale, SCIP_Real rhs, SCIP_SOL *sol, int *ncuts)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrKnapsack</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a6db32aa67fda5e61f0dedfd595175647</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsKnapsack</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a97042db12a1561c3a95aec4edf97d3e0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Longint *weights, SCIP_Longint capacity, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCoefKnapsack</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a3cc6df93c5f35c42e8aca5b0f36da2f1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Longint weight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetCapacityKnapsack</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a9fb7a73aa72de60caea42c8c73922056</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsKnapsack</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a0cddcb3414a2df5e55ed7c755f9300a2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsKnapsack</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a17b08e2dc194b5d999d76c69963854bb</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint *</type>
      <name>SCIPgetWeightsKnapsack</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>ac47429b8756e92b1550302c5f0282695</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualsolKnapsack</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>ae75913674509ecf16c16b5b7c8913de3</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualfarkasKnapsack</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>aba10ce09e582e8dbe95f461c851620af</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPgetRowKnapsack</name>
      <anchorfile>cons__knapsack_8c.html</anchorfile>
      <anchor>a77ca2608c892417db06e234fb0eb738f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_knapsack.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__knapsack_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrKnapsack</name>
      <anchorfile>cons__knapsack_8h.html</anchorfile>
      <anchor>a6db32aa67fda5e61f0dedfd595175647</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsKnapsack</name>
      <anchorfile>cons__knapsack_8h.html</anchorfile>
      <anchor>a97042db12a1561c3a95aec4edf97d3e0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Longint *weights, SCIP_Longint capacity, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCoefKnapsack</name>
      <anchorfile>cons__knapsack_8h.html</anchorfile>
      <anchor>a3cc6df93c5f35c42e8aca5b0f36da2f1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Longint weight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetCapacityKnapsack</name>
      <anchorfile>cons__knapsack_8h.html</anchorfile>
      <anchor>a9fb7a73aa72de60caea42c8c73922056</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsKnapsack</name>
      <anchorfile>cons__knapsack_8h.html</anchorfile>
      <anchor>a0cddcb3414a2df5e55ed7c755f9300a2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsKnapsack</name>
      <anchorfile>cons__knapsack_8h.html</anchorfile>
      <anchor>a17b08e2dc194b5d999d76c69963854bb</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint *</type>
      <name>SCIPgetWeightsKnapsack</name>
      <anchorfile>cons__knapsack_8h.html</anchorfile>
      <anchor>ac47429b8756e92b1550302c5f0282695</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualsolKnapsack</name>
      <anchorfile>cons__knapsack_8h.html</anchorfile>
      <anchor>ae75913674509ecf16c16b5b7c8913de3</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualfarkasKnapsack</name>
      <anchorfile>cons__knapsack_8h.html</anchorfile>
      <anchor>aba10ce09e582e8dbe95f461c851620af</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPgetRowKnapsack</name>
      <anchorfile>cons__knapsack_8h.html</anchorfile>
      <anchor>a77ca2608c892417db06e234fb0eb738f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveKnapsackExactly</name>
      <anchorfile>cons__knapsack_8h.html</anchorfile>
      <anchor>a8f16a4931b2d53b5ad471c7ec62f8a0e</anchor>
      <arglist>(SCIP *scip, int nitems, SCIP_Longint *weights, SCIP_Real *profits, SCIP_Longint capacity, int *items, int *solitems, int *nonsolitems, int *nsolitems, int *nnonsolitems, SCIP_Real *solval, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveKnapsackApproximately</name>
      <anchorfile>cons__knapsack_8h.html</anchorfile>
      <anchor>a3e8d53334043cd2048b0242816f3ab5a</anchor>
      <arglist>(SCIP *scip, int nitems, SCIP_Longint *weights, SCIP_Real *profits, SCIP_Longint capacity, int *items, int *solitems, int *nonsolitems, int *nsolitems, int *nnonsolitems, SCIP_Real *solval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPseparateKnapsackCuts</name>
      <anchorfile>cons__knapsack_8h.html</anchorfile>
      <anchor>ae14383ef7565e2c9d2b9ff7ba9c1247f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR **vars, int nvars, SCIP_Longint *weights, SCIP_Longint capacity, SCIP_SOL *sol, int *ncuts)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveKnapsack</name>
      <anchorfile>cons__knapsack_8h.html</anchorfile>
      <anchor>a2256bc2d987d1b18ae07b576065a5154</anchor>
      <arglist>(SCIP *scip, int nitems, SCIP_Longint *weights, SCIP_Real *profits, SCIP_Longint capacity, int *items, int *solitems, int *nonsolitems, int *nsolitems, int *nnonsolitems, SCIP_Real *solval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPliftKnapsackCover</name>
      <anchorfile>cons__knapsack_8h.html</anchorfile>
      <anchor>aa5c93cb6c3ecc3ab51984b1c7271083f</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **vars, int nvars, SCIP_Longint *weights, SCIP_Longint capacity, SCIP_Real *solvals, int *covervars, int *noncovervars, int ncovervars, int ncovervarsc1, int ncovervarsc2, int nnoncovervars, int *liftcoefs, int *liftrhs, SCIP_Real *liftlpval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPseparateKnapsackCover</name>
      <anchorfile>cons__knapsack_8h.html</anchorfile>
      <anchor>a664540b8338acd0f8d2d250df1f2d888</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR **vars, int nvars, SCIP_Longint *weights, SCIP_Longint capacity, SCIP_SOL *sol, int maxnumcardlift, int *ncuts)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPseparateRelaxedKnapsack</name>
      <anchorfile>cons__knapsack_8h.html</anchorfile>
      <anchor>a805a2372ae2d872471bd48f82739be3b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, int nknapvars, SCIP_VAR **knapvars, SCIP_Real *knapvals, SCIP_Real valscale, SCIP_Real rhs, SCIP_SOL *sol, int *ncuts)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_linear.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__linear_8c</filename>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="cons__knapsack_8h" name="cons_knapsack.h" local="yes" imported="no">scip/cons_knapsack.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_NAME</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>aea7e068fd23523fb86409f7437f49851</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_DESC</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>acd6ea343facf9430a46f3d1f3d6c675b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONFLICTHDLR_NAME</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a14c78d52e3e23a9ff65280e21edb7f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONFLICTHDLR_DESC</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a3d0966bff50048d7b5156eb5002cf4fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONFLICTHDLR_PRIORITY</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a0fa023ede6482997fd713b768e3ab312</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_TIGHTENBOUNDSFREQ</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>ac9eebf53c86976e349af041365801c79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDS</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>ad1a925058883d0cd959cea25479f6436</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDSROOT</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a5c62f47fd3344274a3ec1b924cdc2a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTS</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>ac1ee053eab0810875e4ad04309d47ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTSROOT</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a869aa0207dd459a9bbc8cb7b4c18084e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PRESOLPAIRWISE</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a50bbd2474c7b2e724b95eb570d507a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PRESOLUSEHASHING</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a8d97ceb0231590426c6e624f682682e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXAGGRNORMSCALE</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a51da9eed0306425703e291df3feac753</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXCARDBOUNDDIST</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a626e4b34a25d691ee68d8c2554a155cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SEPARATEALL</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>afa1ad3ff4eb2ef3edf8b9aac8fbf8618</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_AGGREGATEVARIABLES</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a04d5be22fbf35b307d1d810162fc2bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SIMPLIFYINEQUALITIES</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>aad1d886c7d47a726e40ac22458267769</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DUALPRESOLVING</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a0af38c9ef55a1c3ad6b03e5cc1874f80</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXDNOM</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a15826381c8e8f7a1c28ffd6756f273db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSCALEDCOEF</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>ae3c9cb8ed25246dd2161e56399ef099c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASHSIZE_LINEARCONS</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>ac9bf5b7073504305505977a81639f93d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NMINCOMPARISONS</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>ab6f3d3036dfe8fd11c392c934e3f4c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINGAINPERNMINCOMPARISONS</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>aa48184fdd836534b78d110285955a496</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXTIGHTENROUNDS</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>aff6b91c367be8728b336a9ea91a8019b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXVALRECOMP</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>af65f3f69cfc709d3a7aacd6094e9214a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BINWEIGHT</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>aa78e75d7f8aa17a1f44ced8838d1ac6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INTWEIGHT</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>aeb3825fcebf7d34449e6146de4e737c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONTWEIGHT</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>ab641dd717a54b9464b78820e9346dfd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULTIPLIER</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>ab7ffb5a0ee7b15aecd0b32e84b93e2ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitpreLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a13ff11e4efc2ebba132d8116cd77e91b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitsolLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a4918dc725c73bd755ffa7958860c8bb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXCONSPRESOLROUNDS</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a81d9d6767705525506ff61ea61897ebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>ae4905d30a6fd63331d542df6ef63e48c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a84cb25ef93cbb16398b0dceea082caed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>ad8c4edeaa5aa0d221bba5cba21d6b749</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a7caf40ccabf258f230f42cf107ca1f97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Tokenizer</type>
      <name>SCIP_TOKENIZER</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a1301f9537a8a82435b1b014ae2bc2d4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum CipSense</type>
      <name>CIPSENSE</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a5768e0cca57c96e64512c6dd4330a1c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum Proprule</type>
      <name>PROPRULE</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a02ab8dfd44a426aacd84e82f0244375e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct InferInfo</type>
      <name>INFERINFO</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>ad58287ccdbe599464c3583772c751b25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>CipSense</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_SENSE_NOTHING</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ada407420368e615ac543fc6e03d8c3adb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_SENSE_LE</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ada2a4c0dbaf24c2c1b97b7e1b4fc9e9040</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_SENSE_GE</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ada73a5038841acb5b1b66ac650822fef3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_SENSE_EQ</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ada703f91cc2f0f676e433b75d4a2eb1395</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_SENSE_NOTHING</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ada407420368e615ac543fc6e03d8c3adb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_SENSE_LE</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ada2a4c0dbaf24c2c1b97b7e1b4fc9e9040</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_SENSE_GE</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ada73a5038841acb5b1b66ac650822fef3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_SENSE_EQ</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ada703f91cc2f0f676e433b75d4a2eb1395</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Proprule</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_CORETIMES</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a9082376ede12425c1df01749fc808ce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2_CORETIMEHOLES</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700ac63e5fe5560616c5b9293e32631a1ecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3_EDGEFINDING</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700afe819bf91ff26e39ce3521db35ad9e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4_ENERGETICREASONING</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a1c0905b0306fc01f2d16327fdad0f77f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_RHS</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700ac61bb8e7bd92fdca9e6f1d62ddeb610f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_LHS</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a3c50f438d27ead284c65fe404d7a4d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a03292cfe5e3dc200e15299267130ed2d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeLinconsUpgrade</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a0c7d2ae4288d0760dc8156fdaf9aee64</anchor>
      <arglist>(SCIP *scip, SCIP_DECL_LINCONSUPGD((*linconsupgd)), int priority, const char *conshdlrname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>aa7aed137a4130b35b168812414413481</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *vals, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyConsLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a970e41b2c10983a8ce99b07b9fada437</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, SCIP *sourcescip, const char *name, int nvars, SCIP_VAR **sourcevars, SCIP_Real *sourcecoefs, SCIP_Real lhs, SCIP_Real rhs, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode, SCIP_Bool global, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCoefLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a38e1ad54f5ada21a62c1ed2f0529a74a</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLhsLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a412d4c849b3e038067603eeaee19ac0c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a152f83b1953aaf62fe3471039ff24262</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgLhsLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>ad9dbf2f92f03970431948bf42262f5e2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Real lhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgRhsLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a1a2bbebfbad5cfa955899b6da053e6a8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a4604e5a3408bca690ddfde493012cc20</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a1091fe43cc5148e023330592fff4a360</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetValsLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>aabb1d65f76855867505311354affb73f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetActivityLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>aa8c88dcaa6cc14e28a4e7ee6e8d7c949</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetFeasibilityLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>aa9c94fdeba8ad0ca5aa97c7f07070a51</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualsolLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a0bd06cd82e491728d839582c0520c7bd</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualfarkasLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a93245470ed30b9c3a32499e88a729de0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPgetRowLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a0f69b022e5996a9f3ec6fee1c608c7be</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupgradeConsLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>a1876fd40af473ebfcc409e9a19fcef69</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_CONS **upgdcons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmarkDoNotUpgradeConsLinear</name>
      <anchorfile>cons__linear_8c.html</anchorfile>
      <anchor>afb04e82c44982d30cca9032bc839a589</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_linear.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__linear_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_LINCONSUPGD</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>a9675890862d1d86a50fb95f1c1de2625</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_LinConsUpgrade</type>
      <name>SCIP_LINCONSUPGRADE</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>acb54086ac632c4e0d65f74eb4f8f7c11</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>a03292cfe5e3dc200e15299267130ed2d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeLinconsUpgrade</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>a0c7d2ae4288d0760dc8156fdaf9aee64</anchor>
      <arglist>(SCIP *scip, SCIP_DECL_LINCONSUPGD((*linconsupgd)), int priority, const char *conshdlrname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>aa7aed137a4130b35b168812414413481</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *vals, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyConsLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>a970e41b2c10983a8ce99b07b9fada437</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, SCIP *sourcescip, const char *name, int nvars, SCIP_VAR **sourcevars, SCIP_Real *sourcecoefs, SCIP_Real lhs, SCIP_Real rhs, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode, SCIP_Bool global, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCoefLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>a38e1ad54f5ada21a62c1ed2f0529a74a</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLhsLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>a412d4c849b3e038067603eeaee19ac0c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>a152f83b1953aaf62fe3471039ff24262</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgLhsLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>ad9dbf2f92f03970431948bf42262f5e2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Real lhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgRhsLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>a1a2bbebfbad5cfa955899b6da053e6a8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>a4604e5a3408bca690ddfde493012cc20</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>a1091fe43cc5148e023330592fff4a360</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetValsLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>aabb1d65f76855867505311354affb73f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetActivityLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>aa8c88dcaa6cc14e28a4e7ee6e8d7c949</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetFeasibilityLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>aa9c94fdeba8ad0ca5aa97c7f07070a51</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualsolLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>a0bd06cd82e491728d839582c0520c7bd</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualfarkasLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>a93245470ed30b9c3a32499e88a729de0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPgetRowLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>a0f69b022e5996a9f3ec6fee1c608c7be</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupgradeConsLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>a1876fd40af473ebfcc409e9a19fcef69</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_CONS **upgdcons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmarkDoNotUpgradeConsLinear</name>
      <anchorfile>cons__linear_8h.html</anchorfile>
      <anchor>afb04e82c44982d30cca9032bc839a589</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_linking.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__linking_8c</filename>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="cons__linking_8h" name="cons_linking.h" local="yes" imported="no">scip/cons_linking.h</includes>
    <includes id="cons__setppc_8h" name="cons_setppc.h" local="yes" imported="no">scip/cons_setppc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_NAME</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>aea7e068fd23523fb86409f7437f49851</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_DESC</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>acd6ea343facf9430a46f3d1f3d6c675b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASHSIZE_BINVARSCONS</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>ae595fdc2113cde9a7fe5c20c95b394bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_LINEARIZE</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a674602405c71249b64b51024db3b0120</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitLinking</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a5d11484cac1964404feaf0e92430afa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitLinking</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>aa96dd91fe791cd961fae0baab1ab23d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreLinking</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a984c7a5858d0bf6a7dbf3682a3e73317</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitsolLinking</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a2d1759e199dadae56bd7f6e1b17520fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveLinking</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>ae1e330c2746fd9bd1ee10df4bdc6d6dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveLinking</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a3232e99d3d409a8c12616bdd9657fd09</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableLinking</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a47fb44f264d2329712238cb21f322421</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableLinking</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a7e4df4928bb95facb3daa59c1063604d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consParseLinking</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a2b725054eef69dd309c1163b0122a88f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrLinking</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a79632aa2c9245e5f76b10dac24598fd2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsLinking</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>abff036abbb48b518f2ffa634a56b617c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *intvar, SCIP_VAR **binvars, int nbinvars, int offset, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexistsConsLinking</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a301fd9e1b9eeb47353c16da45ad09bc0</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *intvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS *</type>
      <name>SCIPgetConsLinking</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a45f913398b4be2d09fb1a4dd9ef85e5f</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *intvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetIntvarLinking</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>af1803bfe1c3f4504432b6d0dd39f84bc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetBinvarsLinking</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a03251ced478368e3fbe59af1db88bdc3</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR ***binvars, int *nbinvars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNBinvarsLinking</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a00164960251507b9d7f9aadf3620a174</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetOffsetLinking</name>
      <anchorfile>cons__linking_8c.html</anchorfile>
      <anchor>a347c9a3043b754c5e284570bce778d33</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_linking.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__linking_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrLinking</name>
      <anchorfile>cons__linking_8h.html</anchorfile>
      <anchor>a79632aa2c9245e5f76b10dac24598fd2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsLinking</name>
      <anchorfile>cons__linking_8h.html</anchorfile>
      <anchor>abff036abbb48b518f2ffa634a56b617c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *intvar, SCIP_VAR **binvars, int nbinvars, int offset, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexistsConsLinking</name>
      <anchorfile>cons__linking_8h.html</anchorfile>
      <anchor>a301fd9e1b9eeb47353c16da45ad09bc0</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *intvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS *</type>
      <name>SCIPgetConsLinking</name>
      <anchorfile>cons__linking_8h.html</anchorfile>
      <anchor>a45f913398b4be2d09fb1a4dd9ef85e5f</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *intvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetIntvarLinking</name>
      <anchorfile>cons__linking_8h.html</anchorfile>
      <anchor>af1803bfe1c3f4504432b6d0dd39f84bc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetBinvarsLinking</name>
      <anchorfile>cons__linking_8h.html</anchorfile>
      <anchor>a03251ced478368e3fbe59af1db88bdc3</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR ***binvars, int *nbinvars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNBinvarsLinking</name>
      <anchorfile>cons__linking_8h.html</anchorfile>
      <anchor>a00164960251507b9d7f9aadf3620a174</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetOffsetLinking</name>
      <anchorfile>cons__linking_8h.html</anchorfile>
      <anchor>a347c9a3043b754c5e284570bce778d33</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_logicor.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__logicor_8c</filename>
    <includes id="cons__logicor_8h" name="cons_logicor.h" local="yes" imported="no">scip/cons_logicor.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LINCONSUPGD_PRIORITY</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>add60a3ce9e57e0d06d2136c71a0d1834</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_NAME</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>aea7e068fd23523fb86409f7437f49851</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_DESC</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>acd6ea343facf9430a46f3d1f3d6c675b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONFLICTHDLR_NAME</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a14c78d52e3e23a9ff65280e21edb7f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONFLICTHDLR_DESC</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a3d0966bff50048d7b5156eb5002cf4fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONFLICTHDLR_PRIORITY</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a0fa023ede6482997fd713b768e3ab312</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PRESOLPAIRWISE</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a50bbd2474c7b2e724b95eb570d507a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASHSIZE_LOGICORCONS</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>aa1ee3bdc9f694db1b27f7d7a2b89439b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PRESOLUSEHASHING</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a8d97ceb0231590426c6e624f682682e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NMINCOMPARISONS</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>ab6f3d3036dfe8fd11c392c934e3f4c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINGAINPERNMINCOMPARISONS</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>aa48184fdd836534b78d110285955a496</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AGEINCREASE</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a0d75c2abdc6a362b474d2c3ba34957a1</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitLogicor</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a298bd411542e6f231e204fd6588bb4a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitLogicor</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>af574bc5d5f0d43ec5feafc8b2a42e397</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitpreLogicor</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>aaef8ec767d2861a69dbec6fa173b45f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreLogicor</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a5ce7d18a8b52d698b5cb3fc2ffeea639</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitsolLogicor</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>ad503c5b62e5a97b1b0ad7d08a3957b7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableLogicor</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a351f6b25f65efc77730d1d33bb6892fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableLogicor</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a4fedd18fc60cb2f4dc04badc2f0c3dd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrLogicor</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a54b04246f35c1c2968e284ee36ce620d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsLogicor</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>ab7fa763c2b9f73c6b82fd7eefb75d6c7</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsLogicor</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a143984b18ab9b590c27dc60a634a8052</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsLogicor</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a79c1bc82a011a189e7eac8f4a4d895e8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualsolLogicor</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a4356e0682bdd8e91d080ccca55900130</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualfarkasLogicor</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>ab94278d46f448d1af6826b778d37f1bc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPgetRowLogicor</name>
      <anchorfile>cons__logicor_8c.html</anchorfile>
      <anchor>a8a013a44406d8c0ebc3b0da8c6706384</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_logicor.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__logicor_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrLogicor</name>
      <anchorfile>cons__logicor_8h.html</anchorfile>
      <anchor>a54b04246f35c1c2968e284ee36ce620d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsLogicor</name>
      <anchorfile>cons__logicor_8h.html</anchorfile>
      <anchor>ab7fa763c2b9f73c6b82fd7eefb75d6c7</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsLogicor</name>
      <anchorfile>cons__logicor_8h.html</anchorfile>
      <anchor>a143984b18ab9b590c27dc60a634a8052</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsLogicor</name>
      <anchorfile>cons__logicor_8h.html</anchorfile>
      <anchor>a79c1bc82a011a189e7eac8f4a4d895e8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualsolLogicor</name>
      <anchorfile>cons__logicor_8h.html</anchorfile>
      <anchor>a4356e0682bdd8e91d080ccca55900130</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualfarkasLogicor</name>
      <anchorfile>cons__logicor_8h.html</anchorfile>
      <anchor>ab94278d46f448d1af6826b778d37f1bc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPgetRowLogicor</name>
      <anchorfile>cons__logicor_8h.html</anchorfile>
      <anchor>a8a013a44406d8c0ebc3b0da8c6706384</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_or.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__or_8c</filename>
    <includes id="cons__or_8h" name="cons_or.h" local="yes" imported="no">scip/cons_or.h</includes>
    <includes id="cons__and_8h" name="cons_and.h" local="yes" imported="no">scip/cons_and.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_NAME</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>aea7e068fd23523fb86409f7437f49851</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_DESC</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>acd6ea343facf9430a46f3d1f3d6c675b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitOr</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a96193afb87450862b21f1a832e30abd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitOr</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a5a550b05c43f06b4de10a69a1d36325c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitpreOr</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>ab431a8c64c0eacb31a3b87e6ad0d7a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreOr</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a34fcc88363ca091e3d03257a7b68f94f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitsolOr</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a2f4be8ff911826f502f0a0888e1fcc12</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveOr</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>ab1581efc1f2d342b0afbf6c136a7b4c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveOr</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a9afdc305901a24118bdb0c88c5f9c0d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableOr</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>ad47c0e384a1d2fe9e8a928c505ba6c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableOr</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>abe517b94b5f0043504d7b84dfe0c2915</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum Proprule</type>
      <name>PROPRULE</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a02ab8dfd44a426aacd84e82f0244375e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Proprule</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_CORETIMES</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a9082376ede12425c1df01749fc808ce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2_CORETIMEHOLES</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700ac63e5fe5560616c5b9293e32631a1ecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3_EDGEFINDING</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700afe819bf91ff26e39ce3521db35ad9e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4_ENERGETICREASONING</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a1c0905b0306fc01f2d16327fdad0f77f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_RHS</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700ac61bb8e7bd92fdca9e6f1d62ddeb610f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_LHS</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a3c50f438d27ead284c65fe404d7a4d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrOr</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a052f1efa752e787c45ee4e90f8a5ea98</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsOr</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>adcd6e0b9e7a5479c33bdf574367e6476</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *resvar, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsOr</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a30f8a45450b314339dc48eee409e6183</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsOr</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>aee763664193b948ae45518b345dafbcb</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetResultantOr</name>
      <anchorfile>cons__or_8c.html</anchorfile>
      <anchor>a1373d2cfff14234699d3a17fc7ca46ff</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_or.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__or_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrOr</name>
      <anchorfile>cons__or_8h.html</anchorfile>
      <anchor>a052f1efa752e787c45ee4e90f8a5ea98</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsOr</name>
      <anchorfile>cons__or_8h.html</anchorfile>
      <anchor>adcd6e0b9e7a5479c33bdf574367e6476</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *resvar, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsOr</name>
      <anchorfile>cons__or_8h.html</anchorfile>
      <anchor>a30f8a45450b314339dc48eee409e6183</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsOr</name>
      <anchorfile>cons__or_8h.html</anchorfile>
      <anchor>aee763664193b948ae45518b345dafbcb</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetResultantOr</name>
      <anchorfile>cons__or_8h.html</anchorfile>
      <anchor>a1373d2cfff14234699d3a17fc7ca46ff</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_orbitope.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__orbitope_8c</filename>
    <includes id="cons__orbitope_8h" name="cons_orbitope.h" local="yes" imported="no">scip/cons_orbitope.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitpreOrbitope</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>a08ce09013728bdccc5bf4a2d6643e87d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreOrbitope</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>a2a38ddf77dfbf36e9e5e6b0b2d4349c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitsolOrbitope</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>aab5f197d796d0f801eb0a8edbb69f332</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitsolOrbitope</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>a7e012f7f7b4e6a04a4d490c81cfa2c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitlpOrbitope</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>a2e10112e993bf84d0b7f90627ad6d195</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveOrbitope</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>aff6a34f907ccd1ba6d541fa8b2ba112c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveOrbitope</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>ae62c9f7009710fb2cd1391f07412cf8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableOrbitope</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>a6245eeeba80eaf443a7b99e894125749</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableOrbitope</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>aff9af2eb3a22cab15369a98b913e75d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrOrbitope</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>a73206cc40cbc76613246aaa5e5cca89f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsOrbitope</name>
      <anchorfile>cons__orbitope_8c.html</anchorfile>
      <anchor>a82bc5e111799c33d2df86b737b0a7459</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR ***vars, SCIP_Bool ispart, int nspcons, int nblocks, SCIP_Bool resolveprop, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_orbitope.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__orbitope_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrOrbitope</name>
      <anchorfile>cons__orbitope_8h.html</anchorfile>
      <anchor>a73206cc40cbc76613246aaa5e5cca89f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsOrbitope</name>
      <anchorfile>cons__orbitope_8h.html</anchorfile>
      <anchor>a82bc5e111799c33d2df86b737b0a7459</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR ***vars, SCIP_Bool ispart, int nspcons, int nblocks, SCIP_Bool resolveprop, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_quadratic.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__quadratic_8c</filename>
    <includes id="cons__quadratic_8h" name="cons_quadratic.h" local="yes" imported="no">scip/cons_quadratic.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="cons__and_8h" name="cons_and.h" local="yes" imported="no">scip/cons_and.h</includes>
    <includes id="cons__varbound_8h" name="cons_varbound.h" local="yes" imported="no">scip/cons_varbound.h</includes>
    <includes id="heur__subnlp_8h" name="heur_subnlp.h" local="yes" imported="no">scip/heur_subnlp.h</includes>
    <includes id="heur__trysol_8h" name="heur_trysol.h" local="yes" imported="no">scip/heur_trysol.h</includes>
    <includes id="nlpi__ipopt_8h" name="nlpi_ipopt.h" local="yes" imported="no">nlpi/nlpi_ipopt.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXDNOM</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a15826381c8e8f7a1c28ffd6756f273db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>infty2infty</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a6feb097c36797c2241c419a40a28dced</anchor>
      <arglist>(infty1, infty2, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consRespropQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a4c84131b1a1dd47b9742fa15bd59b40f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a6528399cc70b8b7bf2a84217c9481067</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a5f6b40fcdc0d089eff5905fb49ca88aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>aa8a80c5afc01c1f1c8830004a2327e6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a4450c766c17c7cff36b9de753f441884</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Tokenizer</type>
      <name>SCIP_TOKENIZER</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a1301f9537a8a82435b1b014ae2bc2d4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum CipSense</type>
      <name>CIPSENSE</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a5768e0cca57c96e64512c6dd4330a1c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>CipSense</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_SENSE_NOTHING</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ada407420368e615ac543fc6e03d8c3adb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_SENSE_LE</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ada2a4c0dbaf24c2c1b97b7e1b4fc9e9040</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_SENSE_GE</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ada73a5038841acb5b1b66ac650822fef3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_SENSE_EQ</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ada703f91cc2f0f676e433b75d4a2eb1395</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_SENSE_NOTHING</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ada407420368e615ac543fc6e03d8c3adb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_SENSE_LE</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ada2a4c0dbaf24c2c1b97b7e1b4fc9e9040</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_SENSE_GE</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ada73a5038841acb5b1b66ac650822fef3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_SENSE_EQ</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a15f4326a650ffd185b05a7eb863b19ada703f91cc2f0f676e433b75d4a2eb1395</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a5896e2034e60e6cc9bd7b9350a07157e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeQuadconsUpgrade</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a57055d094aa3f01b3297b47323edb841</anchor>
      <arglist>(SCIP *scip, SCIP_DECL_QUADCONSUPGD((*quadconsupgd)), int priority, const char *conshdlrname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a2b9b66bf530f9b8d42311a6f7d7338ee</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nlinvars, SCIP_VAR **linvars, SCIP_Real *lincoefs, int nquadterms, SCIP_VAR **quadvars1, SCIP_VAR **quadvars2, SCIP_Real *quadcoefs, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsQuadratic2</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a66a2fcf25b6a50493d2c82934953baa2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nlinvars, SCIP_VAR **linvars, SCIP_Real *lincoefs, int nquadvarterms, SCIP_QUADVARTERM *quadvarterms, int nbilinterms, SCIP_BILINTERM *bilinterms, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLinearVarQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>abf317ec1649fe05ef0adc01a05d18d10</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddQuadVarQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>aa84ad0ef556d303d578931f3c21ea684</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real lincoef, SCIP_Real sqrcoef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddBilinTermQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a4f6f86304a38f258eeb134a4ad33f2ce</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var1, SCIP_VAR *var2, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a5df7aa538ff4e6f1695b522d0c29c4ed</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_NLROW **nlrow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLinearVarsQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a8a653f264d9b2156c66d712d2b284b9d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetLinearVarsQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a26da57063d20ac2f8bd30dcc10715702</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetCoefsLinearVarsQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a62982a7ade04d4638da419e07deecf30</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNQuadVarTermsQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>ad9a99e0556c938bf8cef6cf482693ab8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_QUADVARTERM *</type>
      <name>SCIPgetQuadVarTermsQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a4779a83d63a30860b969d6c8f61e0189</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNBilinTermsQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a27f32aff75736ec8d7c0c61a7b8d2fcd</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BILINTERM *</type>
      <name>SCIPgetBilinTermsQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a80d49a7675f67a7b9b5a53d2ccb77fdc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLhsQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>aa2018705d7aa56f4fa3f37af9e7d16af</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a76acc8cd5c480e94bda9529884947413</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckCurvatureQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a94fd6973d1070419607c7be27d8291f8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisConvexQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a00ecfcb4036d55d6ad1c7e7199857afa</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisConcaveQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a492defe6ceaaacbfb87d47f9ac4b69b0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetViolationQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a674afd3d94227b226bf82fefb10d0f3b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol, SCIP_Real *violation)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddToNlpiProblemQuadratic</name>
      <anchorfile>cons__quadratic_8c.html</anchorfile>
      <anchor>a9daca154fe065a93c2d01f516ea8e477</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_NLPI *nlpi, SCIP_NLPIPROBLEM *nlpiprob, SCIP_HASHMAP *scipvar2nlpivar, SCIP_Bool names)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_quadratic.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__quadratic_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="type__nlpi_8h" name="type_nlpi.h" local="yes" imported="no">nlpi/type_nlpi.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_QUADCONSUPGD</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>ab2520a75c5c6c8d58d6504125ac8305e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_QuadConsUpgrade</type>
      <name>SCIP_QUADCONSUPGRADE</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a19921b61930d5337420837dc9d45aea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_QuadVarTerm</type>
      <name>SCIP_QUADVARTERM</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>ace676974f5d4a6c165078b47cb2d79b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_BilinTerm</type>
      <name>SCIP_BILINTERM</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a98879c75a7907844ec69a01975138888</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a5896e2034e60e6cc9bd7b9350a07157e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeQuadconsUpgrade</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a57055d094aa3f01b3297b47323edb841</anchor>
      <arglist>(SCIP *scip, SCIP_DECL_QUADCONSUPGD((*quadconsupgd)), int priority, const char *conshdlrname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a1d2346bbee52968f486345828603141d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nlinvars, SCIP_VAR **linvars, SCIP_Real *lincoefs, int nquadterms, SCIP_VAR **quadvars1, SCIP_VAR **quadvars2, SCIP_Real *quadcoeffs, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsQuadratic2</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a66a2fcf25b6a50493d2c82934953baa2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nlinvars, SCIP_VAR **linvars, SCIP_Real *lincoefs, int nquadvarterms, SCIP_QUADVARTERM *quadvarterms, int nbilinterms, SCIP_BILINTERM *bilinterms, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLinearVarQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>abf317ec1649fe05ef0adc01a05d18d10</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddQuadVarQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>aa84ad0ef556d303d578931f3c21ea684</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real lincoef, SCIP_Real sqrcoef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddBilinTermQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a4f6f86304a38f258eeb134a4ad33f2ce</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var1, SCIP_VAR *var2, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a5df7aa538ff4e6f1695b522d0c29c4ed</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_NLROW **nlrow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLinearVarsQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a8a653f264d9b2156c66d712d2b284b9d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetLinearVarsQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a26da57063d20ac2f8bd30dcc10715702</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetCoefsLinearVarsQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a62982a7ade04d4638da419e07deecf30</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNQuadVarTermsQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>ad9a99e0556c938bf8cef6cf482693ab8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_QUADVARTERM *</type>
      <name>SCIPgetQuadVarTermsQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a4779a83d63a30860b969d6c8f61e0189</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNBilinTermsQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a27f32aff75736ec8d7c0c61a7b8d2fcd</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BILINTERM *</type>
      <name>SCIPgetBilinTermsQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a80d49a7675f67a7b9b5a53d2ccb77fdc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLhsQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>aa2018705d7aa56f4fa3f37af9e7d16af</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a76acc8cd5c480e94bda9529884947413</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckCurvatureQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a94fd6973d1070419607c7be27d8291f8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisConvexQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a00ecfcb4036d55d6ad1c7e7199857afa</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisConcaveQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a492defe6ceaaacbfb87d47f9ac4b69b0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetViolationQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a674afd3d94227b226bf82fefb10d0f3b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol, SCIP_Real *violation)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddToNlpiProblemQuadratic</name>
      <anchorfile>cons__quadratic_8h.html</anchorfile>
      <anchor>a9daca154fe065a93c2d01f516ea8e477</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_NLPI *nlpi, SCIP_NLPIPROBLEM *nlpiprob, SCIP_HASHMAP *scipvar2nlpivar, SCIP_Bool names)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_setppc.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__setppc_8c</filename>
    <includes id="cons__setppc_8h" name="cons_setppc.h" local="yes" imported="no">scip/cons_setppc.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LINCONSUPGD_PRIORITY</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>add60a3ce9e57e0d06d2136c71a0d1834</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_NAME</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>aea7e068fd23523fb86409f7437f49851</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_DESC</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>acd6ea343facf9430a46f3d1f3d6c675b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONFLICTHDLR_NAME</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a14c78d52e3e23a9ff65280e21edb7f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONFLICTHDLR_DESC</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a3d0966bff50048d7b5156eb5002cf4fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONFLICTHDLR_PRIORITY</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a0fa023ede6482997fd713b768e3ab312</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PRESOLPAIRWISE</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a50bbd2474c7b2e724b95eb570d507a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASHSIZE_SETPPCCONS</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a3a6a95017c0cfb41b0862243a94706f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PRESOLUSEHASHING</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a8d97ceb0231590426c6e624f682682e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NMINCOMPARISONS</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>ab6f3d3036dfe8fd11c392c934e3f4c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINGAINPERNMINCOMPARISONS</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>aa48184fdd836534b78d110285955a496</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NPSEUDOBRANCHES</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a2506a305e794cdf142c2e46d4428c0be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a782714bdbb1b4827dae405d30aaaa384</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a98ace11a69bba20d52b4f8a29eaa456f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitpreSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>af3a2b1ae8a2cd8ed12f51b27703f966f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a8ea4b01c076108493c3a8f7558d2ee17</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitsolSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a7919036f8ddade83179222d132dc1bf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a6a48163787596c40cce2e38d2d356562</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a12e8d807dcc57e57d421a1511fae3470</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>acca4ce807fd95adf66ed370904b59095</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>af7a80e7359c468459f3136974c0c1ed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consParseSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a058eddf2e9f9ed1310d6365bb36d0ee0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a2d0a080eabfd94d487173466cac39236</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSetpart</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>aabe1b748b2512948b33777804e690d6d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSetpack</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a6d08b49b7747e82ead50ca57cc265ced</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSetcover</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>abf7674872517990c86ee114df7f34351</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCoefSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a943e37509aca09bd0122a3f9c705158c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a676bb79bae4bb1d0746e55d430a8a820</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>ac5a51b663b928925e8c2ece1024a8f84</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SETPPCTYPE</type>
      <name>SCIPgetTypeSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>aa177ebcc53dbd98bcccbb8b82bddb32f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualsolSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>ade6d1a9212b8b6306e6127174b8f0eea</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualfarkasSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>aed1cc89c3256dcd7ac059b6d188643cd</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPgetRowSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a4816ad94eb736e32f1a52bd148074df5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNFixedonesSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a8894ed622cd6af47236c30c26860f3d9</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNFixedzerosSetppc</name>
      <anchorfile>cons__setppc_8c.html</anchorfile>
      <anchor>a2e34fd6440dff7757a52074752333dbd</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_setppc.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__setppc_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="typedef">
      <type>enum SCIP_SetppcType</type>
      <name>SCIP_SETPPCTYPE</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>a94bea5fcdd357507820ed53b380181c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_SetppcType</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>abf039bd5c3071bd0cfe7d2b24eec849a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SETPPCTYPE_PARTITIONING</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>abf039bd5c3071bd0cfe7d2b24eec849aa5d1984cfd139f3ff902eaaac7709d525</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SETPPCTYPE_PACKING</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>abf039bd5c3071bd0cfe7d2b24eec849aada4dfae04adf02e4432f771e8d362f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SETPPCTYPE_COVERING</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>abf039bd5c3071bd0cfe7d2b24eec849aad611bf1c01b5d30b5c36e5e48b08019b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrSetppc</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>a2d0a080eabfd94d487173466cac39236</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSetpart</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>aabe1b748b2512948b33777804e690d6d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSetpack</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>a6d08b49b7747e82ead50ca57cc265ced</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSetcover</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>abf7674872517990c86ee114df7f34351</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCoefSetppc</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>a943e37509aca09bd0122a3f9c705158c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsSetppc</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>a676bb79bae4bb1d0746e55d430a8a820</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsSetppc</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>ac5a51b663b928925e8c2ece1024a8f84</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SETPPCTYPE</type>
      <name>SCIPgetTypeSetppc</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>aa177ebcc53dbd98bcccbb8b82bddb32f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualsolSetppc</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>ade6d1a9212b8b6306e6127174b8f0eea</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualfarkasSetppc</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>aed1cc89c3256dcd7ac059b6d188643cd</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPgetRowSetppc</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>a4816ad94eb736e32f1a52bd148074df5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNFixedonesSetppc</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>a8894ed622cd6af47236c30c26860f3d9</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNFixedzerosSetppc</name>
      <anchorfile>cons__setppc_8h.html</anchorfile>
      <anchor>a2e34fd6440dff7757a52074752333dbd</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_soc.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__soc_8c</filename>
    <includes id="cons__soc_8h" name="cons_soc.h" local="yes" imported="no">scip/cons_soc.h</includes>
    <includes id="cons__quadratic_8h" name="cons_quadratic.h" local="yes" imported="no">scip/cons_quadratic.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="heur__subnlp_8h" name="heur_subnlp.h" local="yes" imported="no">scip/heur_subnlp.h</includes>
    <includes id="heur__trysol_8h" name="heur_trysol.h" local="yes" imported="no">scip/heur_trysol.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QUADCONSUPGD_PRIORITY</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>afc26de4f01f61445ad871cd89000ea6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>M_PI</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>ae71449b1cc6e6250b91f539153a7a0d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitpreSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a8667012dcdb7f29d40b83918156e6229</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitlpSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a34178ed8873cc3292d8b34b24dcf8961</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consRespropSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a9541221a47a137ad61f4419eabc2f998</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a7b49eaf86f1d076deead50a6767ce256</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>ad7d2aabb523562b63b4a9dc7541382d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a0ced6f34ae47a8e0e2a858a4c0919d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a76b5eaf86fcfdd60a120be1d9b55ff26</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consParseSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a8a416939fd3397d52e1eb323bd9fea65</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a42c8c037eb84b7c2f6f7090538227ccd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>ae37ea9297d888d8cf30e11001964cec1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *coefs, SCIP_Real *offsets, SCIP_Real constant, SCIP_VAR *rhsvar, SCIP_Real rhscoeff, SCIP_Real rhsoffset, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a35d9d0aa1eaf773716e83d73510320a2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_NLROW **nlrow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLhsVarsSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>aec5b56738403ef7ffdad6ba480e83766</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetLhsVarsSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a6f3ccb05d0f9aaeb6028f55b990cc9dc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetLhsCoefsSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a6983d6344e56f175a8ea96b780fc3e3d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetLhsOffsetsSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>af16aa54727c6a3a7227cc7340820cfce</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLhsConstantSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>ab75bd414eeab09f6de72293a5a48ec71</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetRhsVarSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>ada9e2df6a37a488b7cd0de12ae5b24c5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsCoefSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a755da9544fbc6cbf16598054d4c21591</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsOffsetSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a785ee6cadba5f6ff215be132ac8be125</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddToNlpiProblemSOC</name>
      <anchorfile>cons__soc_8c.html</anchorfile>
      <anchor>a6bc0f8949db07c679040dab8073e33bc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_NLPI *nlpi, SCIP_NLPIPROBLEM *nlpiprob, SCIP_HASHMAP *scipvar2nlpivar, SCIP_Bool names)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_soc.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__soc_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="type__nlpi_8h" name="type_nlpi.h" local="yes" imported="no">nlpi/type_nlpi.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrSOC</name>
      <anchorfile>cons__soc_8h.html</anchorfile>
      <anchor>a42c8c037eb84b7c2f6f7090538227ccd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSOC</name>
      <anchorfile>cons__soc_8h.html</anchorfile>
      <anchor>ae37ea9297d888d8cf30e11001964cec1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *coefs, SCIP_Real *offsets, SCIP_Real constant, SCIP_VAR *rhsvar, SCIP_Real rhscoeff, SCIP_Real rhsoffset, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowSOC</name>
      <anchorfile>cons__soc_8h.html</anchorfile>
      <anchor>a35d9d0aa1eaf773716e83d73510320a2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_NLROW **nlrow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLhsVarsSOC</name>
      <anchorfile>cons__soc_8h.html</anchorfile>
      <anchor>aec5b56738403ef7ffdad6ba480e83766</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetLhsVarsSOC</name>
      <anchorfile>cons__soc_8h.html</anchorfile>
      <anchor>a6f3ccb05d0f9aaeb6028f55b990cc9dc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetLhsCoefsSOC</name>
      <anchorfile>cons__soc_8h.html</anchorfile>
      <anchor>a6983d6344e56f175a8ea96b780fc3e3d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetLhsOffsetsSOC</name>
      <anchorfile>cons__soc_8h.html</anchorfile>
      <anchor>af16aa54727c6a3a7227cc7340820cfce</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLhsConstantSOC</name>
      <anchorfile>cons__soc_8h.html</anchorfile>
      <anchor>ab75bd414eeab09f6de72293a5a48ec71</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetRhsVarSOC</name>
      <anchorfile>cons__soc_8h.html</anchorfile>
      <anchor>ada9e2df6a37a488b7cd0de12ae5b24c5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsCoefSOC</name>
      <anchorfile>cons__soc_8h.html</anchorfile>
      <anchor>a755da9544fbc6cbf16598054d4c21591</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsOffsetSOC</name>
      <anchorfile>cons__soc_8h.html</anchorfile>
      <anchor>a785ee6cadba5f6ff215be132ac8be125</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddToNlpiProblemSOC</name>
      <anchorfile>cons__soc_8h.html</anchorfile>
      <anchor>a6bc0f8949db07c679040dab8073e33bc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_NLPI *nlpi, SCIP_NLPIPROBLEM *nlpiprob, SCIP_HASHMAP *scipvar2nlpivar, SCIP_Bool names)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_sos1.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__sos1_8c</filename>
    <includes id="cons__sos1_8h" name="cons_sos1.h" local="yes" imported="no">scip/cons_sos1.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_NAME</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>aea7e068fd23523fb86409f7437f49851</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_DESC</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>acd6ea343facf9430a46f3d1f3d6c675b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveSOS1</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>a721fc3c82de5be8f02ddeb11912432b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveSOS1</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>afacf36d383b5eee8e237059ece5fcc81</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableSOS1</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>a32cb4b9c43f2227b5071c97501cbe6d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableSOS1</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>a718d39d87e045cb6be16d67ba3bf736b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitSOS1</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>a3b0034e999b695e103430f2afd3a645f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitSOS1</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>a01f2e95162368f62625cfde159d12d04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitpreSOS1</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>aa30e39fd14e22e988003f909a1f95bf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreSOS1</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>aba1da0a9ebf7622ab1004814bc6ca69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrSOS1</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>a57208f7b9b06d3bd60234b73eddd489f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSOS1</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>a602170304c73ecd6a2c2c6efc5e871cc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *weights, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarSOS1</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>a4d76e35eb4b6b44ef22fa8e384c15ffb</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real weight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPappendVarSOS1</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>a7e4434fe62b09f9225e5aedfeffa798a</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsSOS1</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>ada74c232127253148e27e01d9fe76033</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsSOS1</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>ae887e8fa5271a95fd7d20875aac6199c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetWeightsSOS1</name>
      <anchorfile>cons__sos1_8c.html</anchorfile>
      <anchor>a6596a6586bc237b3be0bffd150f26b43</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_sos1.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__sos1_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrSOS1</name>
      <anchorfile>cons__sos1_8h.html</anchorfile>
      <anchor>a57208f7b9b06d3bd60234b73eddd489f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSOS1</name>
      <anchorfile>cons__sos1_8h.html</anchorfile>
      <anchor>a602170304c73ecd6a2c2c6efc5e871cc</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *weights, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarSOS1</name>
      <anchorfile>cons__sos1_8h.html</anchorfile>
      <anchor>a4d76e35eb4b6b44ef22fa8e384c15ffb</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real weight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPappendVarSOS1</name>
      <anchorfile>cons__sos1_8h.html</anchorfile>
      <anchor>a7e4434fe62b09f9225e5aedfeffa798a</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsSOS1</name>
      <anchorfile>cons__sos1_8h.html</anchorfile>
      <anchor>ada74c232127253148e27e01d9fe76033</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsSOS1</name>
      <anchorfile>cons__sos1_8h.html</anchorfile>
      <anchor>ae887e8fa5271a95fd7d20875aac6199c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetWeightsSOS1</name>
      <anchorfile>cons__sos1_8h.html</anchorfile>
      <anchor>a6596a6586bc237b3be0bffd150f26b43</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_sos2.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__sos2_8c</filename>
    <includes id="cons__sos2_8h" name="cons_sos2.h" local="yes" imported="no">scip/cons_sos2.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_NAME</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>aea7e068fd23523fb86409f7437f49851</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_DESC</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>acd6ea343facf9430a46f3d1f3d6c675b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveSOS2</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>a0814ca8bb7f2df6b9f62973d1a5a00e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveSOS2</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>a43dc7d7caf5f03c5fbde57b320079ebc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableSOS2</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>ae1607dffba311416e7bb4b1436756edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableSOS2</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>a8d0a64160d894065454caf9d4fb893dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitSOS2</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>ae48d79b61fdf1398efe485f59c3890e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitSOS2</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>a7af8b0370ab012b69b07aec9aabfb884</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitpreSOS2</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>a4748723bc209e1a4ebfdd07e251c6c18</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreSOS2</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>a5f04b7f1becbccec1c489e20a614bade</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrSOS2</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>a553b36330a5538c651c0c39ee9d4186d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSOS2</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>aa7a96c42d087a779412ca2001f32014c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *weights, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarSOS2</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>aead66a32db6389504977e34349aa4ba9</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real weight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPappendVarSOS2</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>a5c7952f62a015dc8b94ba1f416104963</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsSOS2</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>a6b003078ba8c81ab2c5245f2f9b23f4d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsSOS2</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>a62dc70676518cb28c1f06a2e7633411e</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetWeightsSOS2</name>
      <anchorfile>cons__sos2_8c.html</anchorfile>
      <anchor>a4c5475f39692e3cc71e7e9d6653c87fb</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_sos2.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__sos2_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrSOS2</name>
      <anchorfile>cons__sos2_8h.html</anchorfile>
      <anchor>a553b36330a5538c651c0c39ee9d4186d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsSOS2</name>
      <anchorfile>cons__sos2_8h.html</anchorfile>
      <anchor>aa7a96c42d087a779412ca2001f32014c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *weights, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarSOS2</name>
      <anchorfile>cons__sos2_8h.html</anchorfile>
      <anchor>aead66a32db6389504977e34349aa4ba9</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real weight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPappendVarSOS2</name>
      <anchorfile>cons__sos2_8h.html</anchorfile>
      <anchor>a5c7952f62a015dc8b94ba1f416104963</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsSOS2</name>
      <anchorfile>cons__sos2_8h.html</anchorfile>
      <anchor>a6b003078ba8c81ab2c5245f2f9b23f4d</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsSOS2</name>
      <anchorfile>cons__sos2_8h.html</anchorfile>
      <anchor>a62dc70676518cb28c1f06a2e7633411e</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPgetWeightsSOS2</name>
      <anchorfile>cons__sos2_8h.html</anchorfile>
      <anchor>a4c5475f39692e3cc71e7e9d6653c87fb</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_varbound.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__varbound_8c</filename>
    <includes id="cons__varbound_8h" name="cons_varbound.h" local="yes" imported="no">scip/cons_varbound.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_NAME</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>aea7e068fd23523fb86409f7437f49851</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_DESC</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>acd6ea343facf9430a46f3d1f3d6c675b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LINCONSUPGD_PRIORITY</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>add60a3ce9e57e0d06d2136c71a0d1834</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consFreeVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a95cfafdb23434bb88c2eec2654daea25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a849872f44d6317aa54d34d9469461423</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>acfbd79bfed4243ae79992dce0c4a9c19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitpreVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a81bdb3718d811acf559dc3dc3fc7bead</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>ad40b0823c87cd9dc1130635fb0e1b941</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitsolVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>aa9953a0db702ec51a9dc208fd5ad117a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a1eff46ca7d71888424e9317ba300bdf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a92f350c3636cc7649c9e9ac0174c0604</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>aacdf3c041c2fdf665d9ec9a7f9af1f4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a23495e21612482862d6bda95c8a938f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consParseVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a74b750cc3594bc8cea7e76bdbeea8f5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum Proprule</type>
      <name>PROPRULE</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a02ab8dfd44a426aacd84e82f0244375e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Proprule</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_CORETIMES</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a9082376ede12425c1df01749fc808ce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2_CORETIMEHOLES</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700ac63e5fe5560616c5b9293e32631a1ecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3_EDGEFINDING</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700afe819bf91ff26e39ce3521db35ad9e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4_ENERGETICREASONING</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a1c0905b0306fc01f2d16327fdad0f77f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_RHS</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700ac61bb8e7bd92fdca9e6f1d62ddeb610f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_LHS</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a3c50f438d27ead284c65fe404d7a4d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a54006547b31bdb0d459f136e60630eaa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>ace0f6f0f039ba125796464a119089884</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *var, SCIP_VAR *vbdvar, SCIP_Real vbdcoef, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLhsVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>aa058db2a0f701e987d72425822afc649</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>ab1e41a5b6362bb6c84254bc2942567c8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetVarVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a0ba64940448ff6860c2fa9dd4555f50c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetVbdvarVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>ae0f2f77277f7e2d11e2443ebaed3458f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVbdcoefVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a0e5cd4c3edc088b75374d67e2cc16f23</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualsolVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>ac237dd0f126a6f5bf5fc37f315ee1f86</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualfarkasVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a29510f6e041a53fff234f0425653b9f0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPgetRowVarbound</name>
      <anchorfile>cons__varbound_8c.html</anchorfile>
      <anchor>a2ec527a471fbd9d2525cfdd0ab0bfaf5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_varbound.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__varbound_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrVarbound</name>
      <anchorfile>cons__varbound_8h.html</anchorfile>
      <anchor>a54006547b31bdb0d459f136e60630eaa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsVarbound</name>
      <anchorfile>cons__varbound_8h.html</anchorfile>
      <anchor>ace0f6f0f039ba125796464a119089884</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *var, SCIP_VAR *vbdvar, SCIP_Real vbdcoef, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLhsVarbound</name>
      <anchorfile>cons__varbound_8h.html</anchorfile>
      <anchor>aa058db2a0f701e987d72425822afc649</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRhsVarbound</name>
      <anchorfile>cons__varbound_8h.html</anchorfile>
      <anchor>ab1e41a5b6362bb6c84254bc2942567c8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetVarVarbound</name>
      <anchorfile>cons__varbound_8h.html</anchorfile>
      <anchor>a0ba64940448ff6860c2fa9dd4555f50c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPgetVbdvarVarbound</name>
      <anchorfile>cons__varbound_8h.html</anchorfile>
      <anchor>ae0f2f77277f7e2d11e2443ebaed3458f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVbdcoefVarbound</name>
      <anchorfile>cons__varbound_8h.html</anchorfile>
      <anchor>a0e5cd4c3edc088b75374d67e2cc16f23</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualsolVarbound</name>
      <anchorfile>cons__varbound_8h.html</anchorfile>
      <anchor>ac237dd0f126a6f5bf5fc37f315ee1f86</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualfarkasVarbound</name>
      <anchorfile>cons__varbound_8h.html</anchorfile>
      <anchor>a29510f6e041a53fff234f0425653b9f0</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPgetRowVarbound</name>
      <anchorfile>cons__varbound_8h.html</anchorfile>
      <anchor>a2ec527a471fbd9d2525cfdd0ab0bfaf5</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_xor.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__xor_8c</filename>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <includes id="cons__xor_8h" name="cons_xor.h" local="yes" imported="no">scip/cons_xor.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAPRIORITY</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a5488ab42a790cf0e3652ad80b6b81f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_ENFOPRIORITY</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>ad4ca03322fe71dbaf18d6eebc29bde37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_CHECKPRIORITY</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a1bccb692871b1e48ddeefe66a7dbd76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_SEPAFREQ</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a0e096d19f19b8da25a11104155bd7c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_PROPFREQ</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>aafe34508b529e136070e44430d6e78be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_EAGERFREQ</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>ac939edbf15ddf8e569bf0285a8a385e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_MAXPREROUNDS</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a4855ed04c9a18bdd15e0d76771d2b4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYSEPA</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>adf171f22d972da1f289d5b9ac05adab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPROP</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>af8123a3f0b18e9156ce1a82660fccdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DELAYPRESOL</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>abf33ad86f40b28acf2efa02cf14f421c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NEEDSCONS</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a0dadf918bf679cc726d8bc6aa81c78a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_NAME</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>aea7e068fd23523fb86409f7437f49851</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_DESC</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>acd6ea343facf9430a46f3d1f3d6c675b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PRESOLPAIRWISE</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a50bbd2474c7b2e724b95eb570d507a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASHSIZE_XORCONS</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a46e30ca6352b62ef6eb7cc794ae1d8ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PRESOLUSEHASHING</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a8d97ceb0231590426c6e624f682682e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NMINCOMPARISONS</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>ab6f3d3036dfe8fd11c392c934e3f4c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINGAINPERNMINCOMPARISONS</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>aa48184fdd836534b78d110285955a496</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NROWS</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>ad1b201a53819ee0b206811f261d9dfce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitXor</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a73133d74caf71f40490c7359d52de676</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitXor</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a8dfdbfa00cb3107c93b480294a49ee94</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitpreXor</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a0396e321adcd07fe21754c20e811bf0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consExitpreXor</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a6b1c66243cc32dc533ec9fbf0ed855ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consInitsolXor</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a88d9ab24e1cdba6aeffb717009c14e98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consActiveXor</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a64ed42c43a80e7340b998df5755c6d3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDeactiveXor</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>af198179f96e50cf0e907e7f81999061a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consEnableXor</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a8635f5eca16e2df36552de1c5f629c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consDisableXor</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a942f13f1496bb7ce814156ed3af6cfb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>consParseXor</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>ad818720e3b320f9c63991f0c247ce35e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum Proprule</type>
      <name>PROPRULE</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a02ab8dfd44a426aacd84e82f0244375e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Proprule</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_CORETIMES</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a9082376ede12425c1df01749fc808ce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2_CORETIMEHOLES</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700ac63e5fe5560616c5b9293e32631a1ecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3_EDGEFINDING</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700afe819bf91ff26e39ce3521db35ad9e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4_ENERGETICREASONING</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a1c0905b0306fc01f2d16327fdad0f77f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_RHS</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700ac61bb8e7bd92fdca9e6f1d62ddeb610f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1_LHS</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a3c50f438d27ead284c65fe404d7a4d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_2</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a04aabe1d8078acf9d59c436aa6ca6ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_3</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a40cabe12d75c65b7be9d2c2cad562f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_4</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a82a9e41d9b618b158714612bbbd62f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_1</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a070a504e470ba7abc944802e5055fa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPRULE_INVALID</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a87cffc11e67d9f556dd98c647bfab700a4d401c028c84a627eb6fcb663815800c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrXor</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a30be499339dda77e6ab7ec9720020285</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsXor</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a6d8ed4fefe3d67731f636c06e580750e</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_Bool rhs, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsXor</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a364417e8b5570ef5f4314f5150e48202</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsXor</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>a4ab3ef00e1e8f471aa2e9c76eb0e0605</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPgetRhsXor</name>
      <anchorfile>cons__xor_8c.html</anchorfile>
      <anchor>ab81bc727b55b27587d6639bda9111e67</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cons_xor.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>cons__xor_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlrXor</name>
      <anchorfile>cons__xor_8h.html</anchorfile>
      <anchor>a30be499339dda77e6ab7ec9720020285</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateConsXor</name>
      <anchorfile>cons__xor_8h.html</anchorfile>
      <anchor>a6d8ed4fefe3d67731f636c06e580750e</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_Bool rhs, int nvars, SCIP_VAR **vars, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVarsXor</name>
      <anchorfile>cons__xor_8h.html</anchorfile>
      <anchor>a364417e8b5570ef5f4314f5150e48202</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarsXor</name>
      <anchorfile>cons__xor_8h.html</anchorfile>
      <anchor>a4ab3ef00e1e8f471aa2e9c76eb0e0605</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPgetRhsXor</name>
      <anchorfile>cons__xor_8h.html</anchorfile>
      <anchor>ab81bc727b55b27587d6639bda9111e67</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dialog_default.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>dialog__default_8c</filename>
    <includes id="dialog__default_8h" name="dialog_default.h" local="yes" imported="no">scip/dialog_default.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a602f2dbf316244bc3c4a451776769303</anchor>
      <arglist>(SCIPdialogExecMenu)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a3d8cf2663db57c874deff6f2994714c0</anchor>
      <arglist>(SCIPdialogExecMenuLazy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>ae163fa28e457f706397abda217321d74</anchor>
      <arglist>(SCIPdialogExecChecksol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>ab9ad6c6c9b09d809fb93ec4b8801445b</anchor>
      <arglist>(SCIPdialogExecConflictgraph)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a1c4b04c3eb36fa1748ea7f803e80ecea</anchor>
      <arglist>(SCIPdialogExecDisplayBranching)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a49e3a14cbbd10a205256aa259c8621a4</anchor>
      <arglist>(SCIPdialogExecDisplayConflict)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a388e73e630207ae3984593a4587ec39c</anchor>
      <arglist>(SCIPdialogExecDisplayConshdlrs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a1e59aaed582058ed954ebd48ef9de5dc</anchor>
      <arglist>(SCIPdialogExecDisplayDisplaycols)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>abba778bdf25535ba1fb0ce18ad8c487f</anchor>
      <arglist>(SCIPdialogExecDisplayHeuristics)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>aa8c65098115a6bb0eed8560f3784f39d</anchor>
      <arglist>(SCIPdialogExecDisplayMemory)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a70dd57e31562ff5571447d074fa14e61</anchor>
      <arglist>(SCIPdialogExecDisplayNlpi)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a017923aa54d69fdeb3fb23a36faea2b4</anchor>
      <arglist>(SCIPdialogExecDisplayNodeselectors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a0c0097d5cb1e1c6021fdb2821d911027</anchor>
      <arglist>(SCIPdialogExecDisplayParameters)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>acc691fa5975527629a960660d744305d</anchor>
      <arglist>(SCIPdialogExecDisplayPresolvers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>aa49555e59cfb252c5918a97e55f8241d</anchor>
      <arglist>(SCIPdialogExecDisplayPricers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a41233f16bb0ad770f1791ce8914e2880</anchor>
      <arglist>(SCIPdialogExecDisplayProblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>aa6d5e93fb6d5a789174c0f65399080a0</anchor>
      <arglist>(SCIPdialogExecDisplayPropagators)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>ad5bfbbc0b43f48d07a00b1ffeea5b1ae</anchor>
      <arglist>(SCIPdialogExecDisplayReaders)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a40104acf32aec87b40e5ab6ecb3d3667</anchor>
      <arglist>(SCIPdialogExecDisplaySeparators)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a174977ec5e842b4caa26a298cde638f1</anchor>
      <arglist>(SCIPdialogExecDisplaySolution)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a9636414961017fe1d1624071ead531dc</anchor>
      <arglist>(SCIPdialogExecDisplayStatistics)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>abeec472346440d56f6a66654b85c5d3a</anchor>
      <arglist>(SCIPdialogExecDisplayTransproblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a331f970dd150e6d3b24f075cb4a7b0e7</anchor>
      <arglist>(SCIPdialogExecDisplayValue)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a9747f25c85162704e55e4b738a2b8b22</anchor>
      <arglist>(SCIPdialogExecDisplayVarbranchstatistics)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a3e8353f3abff94d6aa56e32edc0cff39</anchor>
      <arglist>(SCIPdialogExecHelp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a4c7d1526b2a5a6c04ebc93fac2801378</anchor>
      <arglist>(SCIPdialogExecDisplayTranssolution)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a784675e1700cba837a8aa2820624972f</anchor>
      <arglist>(SCIPdialogExecFree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>afdf7f08406269a16bc8708c89d3199d2</anchor>
      <arglist>(SCIPdialogExecNewstart)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a273da7da0b96c9d8b9b85a5f6ebb7d45</anchor>
      <arglist>(SCIPdialogExecOptimize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a5ea321c4fee3b48d908fc4e86f8cc0d3</anchor>
      <arglist>(SCIPdialogExecPresolve)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>ae157af778966e209063b9eaa137dab5d</anchor>
      <arglist>(SCIPdialogExecQuit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a78c61bfdb09b13b2a017732c643c1e94</anchor>
      <arglist>(SCIPdialogExecRead)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a310c55ddb1ead3f845d43077ae819ba4</anchor>
      <arglist>(SCIPdialogExecSetDefault)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a9a31e265384f2d5b2233644d48588e25</anchor>
      <arglist>(SCIPdialogExecSetLoad)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a059e13325793622f46fdf6674fc7afb4</anchor>
      <arglist>(SCIPdialogExecSetSave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a63cae4bdae6ff52be58086dab5821447</anchor>
      <arglist>(SCIPdialogExecSetDiffsave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a9cbd809a47613fc3964ba7a4ac9714e5</anchor>
      <arglist>(SCIPdialogExecSetParam)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGDESC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a75e1974af3e7e91832cad17c36596af2</anchor>
      <arglist>(SCIPdialogDescSetParam)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a42d1fa9e9fe018a8ad064086ddd92ade</anchor>
      <arglist>(SCIPdialogExecSetBranchingDirection)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>ab64524d3993ceed8f97cd5fdd5019803</anchor>
      <arglist>(SCIPdialogExecSetBranchingPriority)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>ab9614c9d180c9878f76388c81c714f57</anchor>
      <arglist>(SCIPdialogExecSetHeuristicsEmphasisAggressive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a6949a9473624771fc4dbc876c3332dcc</anchor>
      <arglist>(SCIPdialogExecSetHeuristicsEmphasisFast)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a333bf2e1f4c4b875bd99e4f514c72227</anchor>
      <arglist>(SCIPdialogExecSetHeuristicsEmphasisOff)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a96a6ea667d0fe8c7c555ee0eb9278f74</anchor>
      <arglist>(SCIPdialogExecSetPresolvingEmphasisAggressive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>af9c0a963abcd0d8ac357be2f00deedf6</anchor>
      <arglist>(SCIPdialogExecSetPresolvingEmphasisFast)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>ae2fa3da2d8ecdf72c188bc69bf02ef52</anchor>
      <arglist>(SCIPdialogExecSetPresolvingEmphasisOff)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a411e71eb4e2ee97822ff09572139d370</anchor>
      <arglist>(SCIPdialogExecSetSeparatingEmphasisAggressive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a2d26dab3123f5f7f88bcf3f4c71639f8</anchor>
      <arglist>(SCIPdialogExecSetSeparatingEmphasisFast)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>ae0f6badfdb7277cae269a67cfe06ae4b</anchor>
      <arglist>(SCIPdialogExecSetSeparatingEmphasisOff)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a7b269a1d3f73710230c9cacc1f866878</anchor>
      <arglist>(SCIPdialogExecSetEmphasisCounter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a376ba9058a620353d5cf371e71803b81</anchor>
      <arglist>(SCIPdialogExecSetEmphasisCpsolver)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>aafc7b4800943aeea60ef027557588734</anchor>
      <arglist>(SCIPdialogExecSetEmphasisEasycip)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a8ee48531b0b2f20609342dd45cad32fc</anchor>
      <arglist>(SCIPdialogExecSetEmphasisFeasibility)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a4e56fb8dbe54e8b015fead506f37b86d</anchor>
      <arglist>(SCIPdialogExecSetEmphasisHardlp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a9578cb91ee54f8477b891ee9b21275f4</anchor>
      <arglist>(SCIPdialogExecSetEmphasisOptimality)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>aaec86896a44b5c7250590faf1dd29453</anchor>
      <arglist>(SCIPdialogExecSetLimitsObjective)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateRootDialog</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>ae11d4db95382ae0c7c3e40362a22f7b3</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG **root)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeDialogDefault</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>a11c47b7b6237c17fbe74f59746fda063</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeDialogDefaultSet</name>
      <anchorfile>dialog__default_8c.html</anchorfile>
      <anchor>acb713659d23d392931e6835f8db08c93</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dialog_default.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>dialog__default_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a602f2dbf316244bc3c4a451776769303</anchor>
      <arglist>(SCIPdialogExecMenu)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a3d8cf2663db57c874deff6f2994714c0</anchor>
      <arglist>(SCIPdialogExecMenuLazy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>ae163fa28e457f706397abda217321d74</anchor>
      <arglist>(SCIPdialogExecChecksol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>ab9ad6c6c9b09d809fb93ec4b8801445b</anchor>
      <arglist>(SCIPdialogExecConflictgraph)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a1c4b04c3eb36fa1748ea7f803e80ecea</anchor>
      <arglist>(SCIPdialogExecDisplayBranching)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a49e3a14cbbd10a205256aa259c8621a4</anchor>
      <arglist>(SCIPdialogExecDisplayConflict)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a388e73e630207ae3984593a4587ec39c</anchor>
      <arglist>(SCIPdialogExecDisplayConshdlrs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a1e59aaed582058ed954ebd48ef9de5dc</anchor>
      <arglist>(SCIPdialogExecDisplayDisplaycols)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>abba778bdf25535ba1fb0ce18ad8c487f</anchor>
      <arglist>(SCIPdialogExecDisplayHeuristics)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>aa8c65098115a6bb0eed8560f3784f39d</anchor>
      <arglist>(SCIPdialogExecDisplayMemory)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a017923aa54d69fdeb3fb23a36faea2b4</anchor>
      <arglist>(SCIPdialogExecDisplayNodeselectors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a70dd57e31562ff5571447d074fa14e61</anchor>
      <arglist>(SCIPdialogExecDisplayNlpi)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a0c0097d5cb1e1c6021fdb2821d911027</anchor>
      <arglist>(SCIPdialogExecDisplayParameters)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>acc691fa5975527629a960660d744305d</anchor>
      <arglist>(SCIPdialogExecDisplayPresolvers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>aa49555e59cfb252c5918a97e55f8241d</anchor>
      <arglist>(SCIPdialogExecDisplayPricers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a41233f16bb0ad770f1791ce8914e2880</anchor>
      <arglist>(SCIPdialogExecDisplayProblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>aa6d5e93fb6d5a789174c0f65399080a0</anchor>
      <arglist>(SCIPdialogExecDisplayPropagators)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>ad5bfbbc0b43f48d07a00b1ffeea5b1ae</anchor>
      <arglist>(SCIPdialogExecDisplayReaders)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a40104acf32aec87b40e5ab6ecb3d3667</anchor>
      <arglist>(SCIPdialogExecDisplaySeparators)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a174977ec5e842b4caa26a298cde638f1</anchor>
      <arglist>(SCIPdialogExecDisplaySolution)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a9636414961017fe1d1624071ead531dc</anchor>
      <arglist>(SCIPdialogExecDisplayStatistics)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>abeec472346440d56f6a66654b85c5d3a</anchor>
      <arglist>(SCIPdialogExecDisplayTransproblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a331f970dd150e6d3b24f075cb4a7b0e7</anchor>
      <arglist>(SCIPdialogExecDisplayValue)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a9747f25c85162704e55e4b738a2b8b22</anchor>
      <arglist>(SCIPdialogExecDisplayVarbranchstatistics)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a4c7d1526b2a5a6c04ebc93fac2801378</anchor>
      <arglist>(SCIPdialogExecDisplayTranssolution)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a3e8353f3abff94d6aa56e32edc0cff39</anchor>
      <arglist>(SCIPdialogExecHelp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a784675e1700cba837a8aa2820624972f</anchor>
      <arglist>(SCIPdialogExecFree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>afdf7f08406269a16bc8708c89d3199d2</anchor>
      <arglist>(SCIPdialogExecNewstart)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a273da7da0b96c9d8b9b85a5f6ebb7d45</anchor>
      <arglist>(SCIPdialogExecOptimize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a5ea321c4fee3b48d908fc4e86f8cc0d3</anchor>
      <arglist>(SCIPdialogExecPresolve)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>ae157af778966e209063b9eaa137dab5d</anchor>
      <arglist>(SCIPdialogExecQuit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a78c61bfdb09b13b2a017732c643c1e94</anchor>
      <arglist>(SCIPdialogExecRead)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a310c55ddb1ead3f845d43077ae819ba4</anchor>
      <arglist>(SCIPdialogExecSetDefault)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a9a31e265384f2d5b2233644d48588e25</anchor>
      <arglist>(SCIPdialogExecSetLoad)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a059e13325793622f46fdf6674fc7afb4</anchor>
      <arglist>(SCIPdialogExecSetSave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a63cae4bdae6ff52be58086dab5821447</anchor>
      <arglist>(SCIPdialogExecSetDiffsave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a9cbd809a47613fc3964ba7a4ac9714e5</anchor>
      <arglist>(SCIPdialogExecSetParam)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGDESC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a75e1974af3e7e91832cad17c36596af2</anchor>
      <arglist>(SCIPdialogDescSetParam)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a42d1fa9e9fe018a8ad064086ddd92ade</anchor>
      <arglist>(SCIPdialogExecSetBranchingDirection)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>ab64524d3993ceed8f97cd5fdd5019803</anchor>
      <arglist>(SCIPdialogExecSetBranchingPriority)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>ab9614c9d180c9878f76388c81c714f57</anchor>
      <arglist>(SCIPdialogExecSetHeuristicsEmphasisAggressive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a6949a9473624771fc4dbc876c3332dcc</anchor>
      <arglist>(SCIPdialogExecSetHeuristicsEmphasisFast)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a333bf2e1f4c4b875bd99e4f514c72227</anchor>
      <arglist>(SCIPdialogExecSetHeuristicsEmphasisOff)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a96a6ea667d0fe8c7c555ee0eb9278f74</anchor>
      <arglist>(SCIPdialogExecSetPresolvingEmphasisAggressive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>af9c0a963abcd0d8ac357be2f00deedf6</anchor>
      <arglist>(SCIPdialogExecSetPresolvingEmphasisFast)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>ae2fa3da2d8ecdf72c188bc69bf02ef52</anchor>
      <arglist>(SCIPdialogExecSetPresolvingEmphasisOff)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a411e71eb4e2ee97822ff09572139d370</anchor>
      <arglist>(SCIPdialogExecSetSeparatingEmphasisAggressive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a2d26dab3123f5f7f88bcf3f4c71639f8</anchor>
      <arglist>(SCIPdialogExecSetSeparatingEmphasisFast)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>ae0f6badfdb7277cae269a67cfe06ae4b</anchor>
      <arglist>(SCIPdialogExecSetSeparatingEmphasisOff)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a7b269a1d3f73710230c9cacc1f866878</anchor>
      <arglist>(SCIPdialogExecSetEmphasisCounter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a376ba9058a620353d5cf371e71803b81</anchor>
      <arglist>(SCIPdialogExecSetEmphasisCpsolver)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>aafc7b4800943aeea60ef027557588734</anchor>
      <arglist>(SCIPdialogExecSetEmphasisEasycip)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a8ee48531b0b2f20609342dd45cad32fc</anchor>
      <arglist>(SCIPdialogExecSetEmphasisFeasibility)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a4e56fb8dbe54e8b015fead506f37b86d</anchor>
      <arglist>(SCIPdialogExecSetEmphasisHardlp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a9578cb91ee54f8477b891ee9b21275f4</anchor>
      <arglist>(SCIPdialogExecSetEmphasisOptimality)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>aaec86896a44b5c7250590faf1dd29453</anchor>
      <arglist>(SCIPdialogExecSetLimitsObjective)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateRootDialog</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>ae11d4db95382ae0c7c3e40362a22f7b3</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG **root)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeDialogDefault</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>a11c47b7b6237c17fbe74f59746fda063</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeDialogDefaultSet</name>
      <anchorfile>dialog__default_8h.html</anchorfile>
      <anchor>acb713659d23d392931e6835f8db08c93</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dijkstra_bh.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/dijkstra/</path>
    <filename>dijkstra__bh_8c</filename>
    <includes id="dijkstra__bh_8h" name="dijkstra_bh.h" local="yes" imported="no">dijkstra_bh.h</includes>
    <member kind="function">
      <type>DIJKSTRA_Bool</type>
      <name>Dijsktra_graphIsValid</name>
      <anchorfile>dijkstra__bh_8c.html</anchorfile>
      <anchor>a619e559c81970bb7c4baa592774580c6</anchor>
      <arglist>(const Dijkstra_Graph *G)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>graph_dijkstra_bh</name>
      <anchorfile>dijkstra__bh_8c.html</anchorfile>
      <anchor>a6bf346b4aa6ec149e9d08003dfbafae2</anchor>
      <arglist>(const Dijkstra_Graph *G, unsigned int start, unsigned long long *dist, unsigned int *pred, unsigned int *entry, unsigned int *order)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dijkstra_bh.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/dijkstra/</path>
    <filename>dijkstra__bh_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>DIJKSTRA_Bool</name>
      <anchorfile>dijkstra__bh_8h.html</anchorfile>
      <anchor>aaa796cb2d8e7a2e538bbded225775a78</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>dijkstra__bh_8h.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>dijkstra__bh_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIJKSTRA_FARAWAY</name>
      <anchorfile>dijkstra__bh_8h.html</anchorfile>
      <anchor>a6995baddeb215c6ccf69327ab31c109c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIJKSTRA_UNUSED</name>
      <anchorfile>dijkstra__bh_8h.html</anchorfile>
      <anchor>a2ea33a925188a89fe392955de55c4a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Dijkstra_graph</type>
      <name>Dijkstra_Graph</name>
      <anchorfile>dijkstra__bh_8h.html</anchorfile>
      <anchor>aa882aadc04d69d7e310622c7cc0ab2be</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>DIJKSTRA_Bool</type>
      <name>Dijsktra_graphIsValid</name>
      <anchorfile>dijkstra__bh_8h.html</anchorfile>
      <anchor>a619e559c81970bb7c4baa592774580c6</anchor>
      <arglist>(const Dijkstra_Graph *G)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>graph_dijkstra_bh</name>
      <anchorfile>dijkstra__bh_8h.html</anchorfile>
      <anchor>a6bf346b4aa6ec149e9d08003dfbafae2</anchor>
      <arglist>(const Dijkstra_Graph *G, unsigned int start, unsigned long long *dist, unsigned int *pred, unsigned int *entry, unsigned int *order)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>disp_default.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>disp__default_8c</filename>
    <includes id="disp__default_8h" name="disp_default.h" local="yes" imported="no">scip/disp_default.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_SOLFOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a06ac19355b446a0262259b2271804788</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_SOLFOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a6c2ec42535e9d1d31eba5b463db31b88</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_SOLFOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a5d7ac2f5f559fab27a1a11b6a21de200</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_SOLFOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ab3c76a07fc568acfece4fe9c990dcd57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_SOLFOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ac7094c0f45c63dacdbe0d28e62af0011</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_SOLFOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ad93b2dd73de68cd540ecdfe9ac49fb13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_SOLFOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>aafa31680af36fef3db5c19ad0861d8de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_TIME</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a17554ff1a7df9e196c71e07416fad190</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_TIME</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>af7e946b6e90872514846368b3df8a913</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_TIME</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a5b88dacd31a0a0decff996083d3bb277</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_TIME</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a8fab09637b70339680f2e2af3cfde2e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_TIME</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a42dc8d1dafe5c02d3526800c9919a117</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_TIME</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a256032efe4b5328a0f9352ca973f169e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_TIME</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a2dac6c9ec4365a8f791aaed4a930798a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_NNODES</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ad943c2ace392a8ee326051b4e54ae8f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_NNODES</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a11b9e2dfee40bd51c34cba064b275b29</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_NNODES</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a6bd025aadb0be8f70cef934da88a7165</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_NNODES</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>acedba6f728c722d1a49a4263a402173c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_NNODES</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a0e146bf91ba5769ba0c8afebc72b1378</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_NNODES</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a28fa069572a06def84bba5e31065083d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_NNODES</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a3f578b6c0223f3b92c00e3d931d5eed8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_NODESLEFT</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a0a18b4611225520d34cc8063dddb75a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_NODESLEFT</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ac40a9a68761acdb343e638f85a022b79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_NODESLEFT</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a2b87fda56ce317e45e3450cea263b560</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_NODESLEFT</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a46e8824c6d4ad7b3941e89681d6cbf13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_NODESLEFT</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a36a9cde2f6940f42ef5a3390b7606647</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_NODESLEFT</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a4fac690af946bbcfe23d0f26106934a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_NODESLEFT</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ae15abbb701df404c80719ab587ea8704</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_LPITERATIONS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>aebf0b41a0c75c13b80058f79db4ee001</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_LPITERATIONS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a5f7b4c2ba459a1380fe801df17d5b3d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_LPITERATIONS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>abd83480423591fdf4a48d11950a4a04e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_LPITERATIONS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a01172de9a82da75270c6748d66f28487</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_LPITERATIONS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ae44bf5e32858841b7d0983fe31da839f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_LPITERATIONS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a5b6c1602d20e45f114898108fc46aa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_LPITERATIONS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a58e2172bac99fd419045c9ff0cd8fd47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_LPAVGITERS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a4825d7970875693f90aa44abb31b2e99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_LPAVGITERS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>af791ef1a0c1713808098d94d1d59fa80</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_LPAVGITERS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>afccaceff28da37bae459327c3cd3f2c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_LPAVGITERS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a65b0eb803a26441da82c21bc5d581105</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_LPAVGITERS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>afd4c102fff22d0e74c36d157bc50faff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_LPAVGITERS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a0e48b12a2984916389ee81e286f9685d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_LPAVGITERS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a6b3ef286332c818939cf18d4549ae5af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_MEMUSED</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a3d7da12c070051cd40dd5ed73b723082</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_MEMUSED</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a142ff104e32c102a5c2889f18a40b6d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_MEMUSED</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>aa6fe60a97d66129c06009e5c86b6fb31</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_MEMUSED</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a850ab84180893894f364395412050355</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_MEMUSED</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a540d672c76e7737bdde8fa9de36261b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_MEMUSED</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>adbdcb50c2e1b1e466cdbc9250da7794e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_MEMUSED</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ab61be5c5070bffc56551f3041cd9d2b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_DEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a68b70c483fb770954cd0069874ee2736</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_DEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ae56d2b3a316595f563e844da7f74ec56</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_DEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a095d7e4b9ad88b728500c3ad842ca8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_DEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ac79ca2a3737e5124815efd692f0691f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_DEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ad02c93ac13dc1c428cb52277648f5d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_DEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a8f364294669c7cb9a2a014fe9b6ebd56</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_DEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a3ad42d4443e35f983aa7f1ec9c6f2b9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_MAXDEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ac31536fb9018dfd4f1eafaefedd96352</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_MAXDEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a4b57bcdfb6ee22c5c0cf096afcc4e681</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_MAXDEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a7f51841d4fcf0be8c48bfe9aabc31326</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_MAXDEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a15ab326ea198443ad2bee449307a6d31</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_MAXDEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a357e31a6fd769979e10f9da99feaed09</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_MAXDEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>adb8274de9c48ac0bbb7798e563f4b749</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_MAXDEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ae36a4a9028ea2e953d152e020ce646fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_PLUNGEDEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>afc011b05884b93bd14f5798e70047de1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_PLUNGEDEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>abcfea65dff4e044f6f7d31a2b5018e50</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_PLUNGEDEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>afb02999e3bd74b003a8ff27de7ed3737</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_PLUNGEDEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a2395fa79e171e8797abbce0ccf352d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_PLUNGEDEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a2aafe448a1ce331f832090bdb8b3bd3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_PLUNGEDEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a5860049bd15219a04fd95f6506a30890</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_PLUNGEDEPTH</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a99bc7098d63f72cc40c378d7844bd77d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_NFRAC</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a611c7c5985fd613194b7fb958566dfde</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_NFRAC</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a88f0b1a9910276811f4af89b17aca4f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_NFRAC</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a4a8f60ac7c1b28f872b8e8077ee2688f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_NFRAC</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a4d2af5204df6cf6dd7b62416a7d6d57b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_NFRAC</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a95d161b415a3cd136b6747c897bbfb39</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_NFRAC</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a8f2939d6d7be102db3629546c066adae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_NFRAC</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a8767b2eb2dd36fcc1ef5b05f4ccf1b06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_NEXTERNCANDS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>acff9b71ab8559903b5e80a4a342cf3d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_NEXTERNCANDS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ad5f32aa3b717be96a63d68c5f8030447</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_NEXTERNCANDS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a5496d0d5e465a9e85896483300d5ee68</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_NEXTERNCANDS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>afb73237a555c72a226c31326587725a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_NEXTERNCANDS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ab63d62b6dc9150c4230845cd04926b5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_NEXTERNCANDS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a5bc7834cc25727dddbe19e9420d3c649</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_NEXTERNCANDS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ae90533aebb8b4a2993809ad8c25bcb09</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_VARS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>adc5214dea9bb7f96ce4839a616baf1f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_VARS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a7967e41b8116ac03f94dfb3571fa6b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_VARS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>aba53678df280e6876a6a22eda46d7761</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_VARS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a73e2ed5a2df350c6c57c8a43d0a98d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_VARS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>aedfe54fd66dfc6ab00f63d96c52e1768</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_VARS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a80398dd56be6833547315e646e3ef78f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_VARS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>aae26543142a61c36f9e3b945a620c49e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_CONSS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a9373d22a241072a5425a12c224370d63</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_CONSS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a6e7df03733530abb4fd7c69897e01413</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_CONSS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a31dffb3d3cb97f03211410b36f0891ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_CONSS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a439243247c407941b7070d5f74a54702</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_CONSS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ad4575ab3a1916d81722cf4d2d46d5888</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_CONSS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a49ef7b011b4e8bd2a0ba83971b5a33e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_CONSS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ae825ffe853769474e9a674119cf052dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_CURCONSS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a1032b1634b24104a5333196892cad917</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_CURCONSS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a1f8a7cb01583abc6ff8b90dc598db370</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_CURCONSS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a9028f9b16f1d7e4501f85fe5fe3e483a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_CURCONSS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a051678cd27ed36d888825cf145ecf3e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_CURCONSS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a22921b87ec9ad8275633a83188781d48</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_CURCONSS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ab50040a82667759aaf0650502f14f9a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_CURCONSS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a30bd8b2569bfc310ea642625aff5d679</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_CURCOLS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>aff533da1f44a5ed7a1b37a9430dca90b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_CURCOLS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a0e3ea279ca11689dcd1e2e4aa81cacc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_CURCOLS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a364dfc0c1de6dbc1d77e779fd9e7bec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_CURCOLS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a89be90b9296ae08a1162dcf16cafcd84</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_CURCOLS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>afd681eaec9b3029ff446d6efd545cd80</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_CURCOLS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a31f66ea9d48ea4041f5ffddb03e0b902</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_CURCOLS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a437feca279d89d6c475d747500b27509</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_CURROWS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a2f5bd67d7feaa262975f1cb22926cafa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_CURROWS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>afcb08a2c164262a5bc23d93b0d86f0af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_CURROWS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>afd748f933e8de3f52d9ff3538f124032</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_CURROWS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a026cb7d157d7b1d0e20ced7d7bf81804</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_CURROWS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a82ad5bb1ba85893357caf03b3c6e68d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_CURROWS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>aff09cf1c40c76b6e580ca395f1b71597</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_CURROWS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a6586544536a43b718970225334708269</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_CUTS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a4308d6b4232f8645270748f0433fbe7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_CUTS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ad0170c54e9a4ad6013f331c6b9a10b10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_CUTS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a87d48d72451ef5493d4c336e76826d1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_CUTS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a8d803f5d44082d26cc9f8a615318e3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_CUTS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a1a4269eeadf1501855644be325fd3258</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_CUTS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ae22ce117768c0a5699b09e86adfd6033</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_CUTS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a59a85fe1f44b2a80aa48aca3b4613425</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_SEPAROUNDS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a719790ca7a06f8c100cd9f699ec81335</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_SEPAROUNDS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ac28ba2e2b8dd67b7693433461fcfb9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_SEPAROUNDS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ad8ee9ff2851a04f050f16c04b4173bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_SEPAROUNDS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a068cf77def6cd49f4d8db5f2de9c2a75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_SEPAROUNDS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a42d54efc2127fbbc3c89c4b07d47354b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_SEPAROUNDS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a8cffd00519f59925830dd66b875f973e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_SEPAROUNDS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ae7e91e0924e5438c4806d19dfa80da79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_POOLSIZE</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>aafe6ce5adb8c32c4b9c79db5b69619f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_POOLSIZE</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>aa2484541ed0a1bc3688a1b81a9541650</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_POOLSIZE</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>aaa086324c0f8c85a6d79eda9ce3aa0bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_POOLSIZE</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a0443a51027a8f2a74b85f256218348a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_POOLSIZE</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a0a476a18e13b6a00955e40c396cf8978</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_POOLSIZE</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a797ac669985c7d29a98bb94f62054e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_POOLSIZE</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a25a7377445b4addef1b394ad7a65b7f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_CONFLICTS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a9663d279bad95590e02bc711b151d86e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_CONFLICTS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ad2441704cd5b465ef38d583d94feb83e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_CONFLICTS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a8235a212cca7971a071417b897af50dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_CONFLICTS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a0fbbd1f94603b2de5e6112126f38086a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_CONFLICTS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ad9df26070ed817a4e721d6a1eb03411e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_CONFLICTS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>aa35b57e9bca17fac28046aa866585b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_CONFLICTS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a0373532eca42d5e5abb69ec353455c1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_STRONGBRANCHS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>aed1674657fdc2bf0c0cb674b436b1762</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_STRONGBRANCHS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a7accfd6b92fa4caa19423f648809a1f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_STRONGBRANCHS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a97bb91eb76030b022ff996a7df4b05cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_STRONGBRANCHS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ac99cbb99e8a731173cc170f45f503176</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_STRONGBRANCHS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ae98555ed3cb3c17eea4228659b551ea2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_STRONGBRANCHS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a13e8393352219d680d150da2863b89e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_STRONGBRANCHS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a2264ab7c51af09f988f213e35eea1888</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_LPOBJ</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a6b26a29a3929b83d1ecc5dd9cf606224</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_LPOBJ</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a31815514379580451227564118be7ee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_LPOBJ</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a6e21841341a2eeb01758e390e8dd5f79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_LPOBJ</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a8d72be0d8b92bc0ad002105dd42e951b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_LPOBJ</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a496511dd2997a104dd268d53d4b30c09</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_LPOBJ</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a59c09a1277277e2622dd59bcb8eacc33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_LPOBJ</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a59fea0b08fcf78bdab2bb487224279f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_CURDUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>af80129d9ce84989a32e3f053b23e153b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_CURDUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a40fdc24efbd7e4222eefb15d93009486</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_CURDUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a9155bd3d66177ca7f4bd7d68368b339c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_CURDUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a67f8e4ad5d22e19c7c2ec8970aecc133</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_CURDUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a2bfeeb5dd618ede92f7244004fae07e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_CURDUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a17fb5c4bc31f7c1d6de3256dad0686fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_CURDUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ac9ce8004824a41c55c433a921d7b7e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_ESTIMATE</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>afbffdf14c09b764a7339e3947d571fc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_ESTIMATE</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a0c1473067e5d706fee33e3f796ad34bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_ESTIMATE</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a19de64ed76357cc41b2987af00fc537d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_ESTIMATE</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a81d08782ea634314202e9f08f49d9e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_ESTIMATE</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a1a31b9e73ae6c08763e4f1aca5041554</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_ESTIMATE</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a5f0082c519e8ccc7d5ed6b5388531742</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_ESTIMATE</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>af6f5a87c98cee0d7721fcdb1cf358349</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_AVGDUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>acfda192219ec0409fd2d5ebac955cb0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_AVGDUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a37a48a9abb7d01a03706a2d815a52426</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_AVGDUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>aa4567b06ddbbccfcc3d1439dfaf13b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_AVGDUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ab1d73cd2f76f4da7c5eed7b03268b4d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_AVGDUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>aecff359f7e7ca7b3ff49108422d97c19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_AVGDUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a0c7f14f74eb9a3ec20f13ca2a03a3d2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_AVGDUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a5b20da50b5273285856ce34fd91b50d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_DUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a9fefbc59ed7361e5c101b00192fc0ab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_DUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a42a7bc2ef50bbae3fe4b4691507efa58</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_DUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a5f46608894a31d0035ef992fc37c1b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_DUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a9d6e3d6c56eef10d7e71c9b418d6b28d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_DUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a8885df53dceea57dce92648e498daebc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_DUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a0c708765456b89e7358b631b1a8aaed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_DUALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a5a0f620543f8f891e6ed70ce7b59deac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_PRIMALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a83f2857cd020bdc86e4d7126d1e0abdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_PRIMALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a5ec07e920e93cffecd93dd99fbb37f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_PRIMALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ae4a33fb0a856c6bc48fc2bc3d518c12d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_PRIMALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a31dc5f08782be6d9d5ccdab3a2c4acee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_PRIMALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a23e3fa7c6776663ff5a9f47707ae7eea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_PRIMALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a4f936fb95a0522aac3a556ffa4fd52cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_PRIMALBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a794392ab98a6562896b50a633e5abffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_CUTOFFBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a1f53f3bb41f585028150d2e0f9d44eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_CUTOFFBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a68414ac41bc607eab586192c6e539474</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_CUTOFFBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a2c4faa67c51015a9add35feb767f8b3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_CUTOFFBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a8c65d97d5cfe2c9ed3400bf4d56ac21a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_CUTOFFBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ab310281261d35da52a0cf908cb040df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_CUTOFFBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a7a4734f1d2bafabd5574ea9b9991c6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_CUTOFFBOUND</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>aef10791baa23bf8eafd5f2701bf73cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_GAP</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>af87e187312648c0fffbb3dcc5a420b2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_GAP</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ac7c9e5af2e19fbc9830cea44e2369f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_GAP</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ad714c2d412f1df036bb73e69d0b4e3c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_GAP</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a01b6ca79c49747d25ba5f698f0a05a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_GAP</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a1749a74cd6761e3fcfc1d3b001ca0668</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_GAP</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a2ebf857588237664984c97cc2758a7cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_GAP</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>afb6453cecad6bb95ab4fa260253db7c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_NAME_NSOLS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a35263fe92c270932f482a02085fa1eea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_DESC_NSOLS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>ad048081dcfd41cfd0463ef9cfb5eec03</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_HEAD_NSOLS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>addedcda282e24aef4964d29e855370af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_WIDT_NSOLS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a2cf9dd5304b437b5200142860f921efa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_PRIO_NSOLS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a90998d03ae1aecf26593ba75af525bb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_POSI_NSOLS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a966e897402f61dba67f3e84491ed168b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISP_STRI_NSOLS</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a465f21690dcf0f3dc8ef0f9c3dc2dc62</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeDispDefault</name>
      <anchorfile>disp__default_8c.html</anchorfile>
      <anchor>a1d192c15603686a5236d440b9d0ee461</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>disp_default.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>disp__default_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeDispDefault</name>
      <anchorfile>disp__default_8h.html</anchorfile>
      <anchor>a1d192c15603686a5236d440b9d0ee461</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>exprinterpret_cppad.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/nlpi/</path>
    <filename>exprinterpret__cppad_8cpp</filename>
    <includes id="nlpi_2pub__expression_8h" name="nlpi/pub_expression.h" local="yes" imported="no">nlpi/pub_expression.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SIGN</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a8c5ff70b6b28cd0157c50a22406f92c4</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sign</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a928a196c5b583ec2adeb35dddde1d3e1</anchor>
      <arglist>(const double &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>SCIPInterval</type>
      <name>CondExpOp</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>ae821bfe3e7e40674abc319681df0e944</anchor>
      <arglist>(enum CppAD::CompareOp cop, const SCIPInterval &amp;left, const SCIPInterval &amp;right, const SCIPInterval &amp;trueCase, const SCIPInterval &amp;falseCase)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EqualOpSeq</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a7e581bf436df1ee06426c29b5345bca3</anchor>
      <arglist>(const SCIPInterval &amp;x, const SCIPInterval &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IdenticalPar</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a346918acbda8013852b333d86e9c6f36</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IdenticalZero</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a87b08dbfb5d5f171325d0978bc7ba128</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IdenticalOne</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>ad166d12ff16a3153e9a23bcaf0cd2535</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IdenticalEqualPar</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a1f191da11f26f8aeed424fc3e46828a4</anchor>
      <arglist>(const SCIPInterval &amp;x, const SCIPInterval &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GreaterThanZero</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>ad24ec6b1ceee23cc00bd3cb4f1b60d31</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GreaterThanOrZero</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a30a2aa3135da3983d707eb6e57cab1aa</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LessThanZero</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a96206822b49249fba43d46f60c85f060</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LessThanOrZero</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a1da655f002979b14772f94715f481d5e</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Integer</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a914cab8d482692a04fce0b31077b6204</anchor>
      <arglist>(const SCIPInterval &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a2aa292b33a64d3b41bef4cf4fed5c15f</anchor>
      <arglist>(std::ostream &amp;out, const SCIP_INTERVAL &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalSignPower</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a2a89d178c4ea152c1553812f642976c8</anchor>
      <arglist>(Type &amp;resultant, Type &amp;arg1, Type &amp;arg2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalSignPower</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a3c1b4b121b46b260fbe22b0568431c3e</anchor>
      <arglist>(CppAD::AD&lt; double &gt; &amp;resultant, CppAD::AD&lt; double &gt; &amp;arg1, CppAD::AD&lt; double &gt; &amp;arg2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalMin</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a8c95c51dc1766f7daed26da8cda5eb23</anchor>
      <arglist>(Type &amp;resultant, Type &amp;arg1, Type &amp;arg2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalMin</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>aedbb3ee2da9fdb7afc7985b895a19d34</anchor>
      <arglist>(CppAD::AD&lt; double &gt; &amp;resultant, CppAD::AD&lt; double &gt; &amp;arg1, CppAD::AD&lt; double &gt; &amp;arg2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalMax</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a27406ba0971990639502888e0497cb61</anchor>
      <arglist>(Type &amp;resultant, Type &amp;arg1, Type &amp;arg2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalMax</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a470dd9cd3df3b6143864984ee1bfdd13</anchor>
      <arglist>(CppAD::AD&lt; double &gt; &amp;resultant, CppAD::AD&lt; double &gt; &amp;arg1, CppAD::AD&lt; double &gt; &amp;arg2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalSquare</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a80a5f3ac96abdb16105caf067a6ef8bb</anchor>
      <arglist>(Type &amp;resultant, Type &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalSqrt</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>ab3087c0567df5fcc462ca1d0d82cea54</anchor>
      <arglist>(Type &amp;resultant, Type &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalSqrt</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a91a8f21370bfc7b6f8a869050484c194</anchor>
      <arglist>(CppAD::AD&lt; double &gt; &amp;resultant, CppAD::AD&lt; double &gt; &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToNaN</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>ae2b0290215c81737ec70c603f6a28018</anchor>
      <arglist>(Type &amp;resultant)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToNaN</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a3834b93250a905cccc79c85d5a92b6e2</anchor>
      <arglist>(SCIPInterval &amp;resultant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>eval</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>add61bdc278a2279d85340a1f0face57e</anchor>
      <arglist>(SCIP_EXPR *expr, const vector&lt; Type &gt; &amp;x, SCIP_Real *param, Type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needAlwaysRetape</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a3b6eff2dc03c73f28a48a09c7c5f7cad</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPexprintGetName</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>aab5927c86d34c9735d6141e735519a67</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPexprintGetDesc</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a4addf369b73a9b708e099bf7a4e83f93</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRINTCAPABILITY</type>
      <name>SCIPexprintGetCapability</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a2662183d2706a17532fcee8c04304f1c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintCreate</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>afa3d4e74943ca79f00707065f67a50af</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRINT **exprint)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintFree</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a83ad91aa654a0ecbbdc8093350a15dca</anchor>
      <arglist>(SCIP_EXPRINT **exprint)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintCompile</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>ad4142b870bae28b64791d55da3ff4706</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintFreeData</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>af754d568d223fea54f16d89cedec0071</anchor>
      <arglist>(SCIP_EXPRINTDATA **interpreterdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintNewParametrization</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a3d4949b971ff0ba837e39c4dc140e6d5</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintEval</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a5e8e6006a0fa17a353c06ab530ebcae2</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintEvalInt</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a7dc4aaad187f200f28e8c9345f83007b</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real infinity, SCIP_INTERVAL *varvals, SCIP_INTERVAL *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintGrad</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a951003903b4819772f2643d0efc5b10a</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Bool new_varvals, SCIP_Real *val, SCIP_Real *gradient)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintGradInt</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>adf40904b5c1ad96ac217d40a9ddd2aa9</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real infinity, SCIP_INTERVAL *varvals, SCIP_Bool new_varvals, SCIP_INTERVAL *val, SCIP_INTERVAL *gradient)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintHessianSparsityDense</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a4e3afb5fe90e10cb9e116b66a6a6bede</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Bool *sparsity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintHessianDense</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>abd322fc0556700c1a41144bbbc0f9386</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Bool new_varvals, SCIP_Real *val, SCIP_Real *hessian)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>exprinterpret_none.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/nlpi/</path>
    <filename>exprinterpret__none_8c</filename>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPexprintGetName</name>
      <anchorfile>exprinterpret__none_8c.html</anchorfile>
      <anchor>aab5927c86d34c9735d6141e735519a67</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPexprintGetDesc</name>
      <anchorfile>exprinterpret__none_8c.html</anchorfile>
      <anchor>a4addf369b73a9b708e099bf7a4e83f93</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRINTCAPABILITY</type>
      <name>SCIPexprintGetCapability</name>
      <anchorfile>exprinterpret__none_8c.html</anchorfile>
      <anchor>a2662183d2706a17532fcee8c04304f1c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintCreate</name>
      <anchorfile>exprinterpret__none_8c.html</anchorfile>
      <anchor>afa3d4e74943ca79f00707065f67a50af</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRINT **exprint)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintFree</name>
      <anchorfile>exprinterpret__none_8c.html</anchorfile>
      <anchor>a83ad91aa654a0ecbbdc8093350a15dca</anchor>
      <arglist>(SCIP_EXPRINT **exprint)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintCompile</name>
      <anchorfile>exprinterpret__none_8c.html</anchorfile>
      <anchor>ad4142b870bae28b64791d55da3ff4706</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintFreeData</name>
      <anchorfile>exprinterpret__none_8c.html</anchorfile>
      <anchor>af754d568d223fea54f16d89cedec0071</anchor>
      <arglist>(SCIP_EXPRINTDATA **interpreterdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintNewParametrization</name>
      <anchorfile>exprinterpret__none_8c.html</anchorfile>
      <anchor>a3d4949b971ff0ba837e39c4dc140e6d5</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintEval</name>
      <anchorfile>exprinterpret__none_8c.html</anchorfile>
      <anchor>a5e8e6006a0fa17a353c06ab530ebcae2</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintEvalInt</name>
      <anchorfile>exprinterpret__none_8c.html</anchorfile>
      <anchor>a7dc4aaad187f200f28e8c9345f83007b</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real infinity, SCIP_INTERVAL *varvals, SCIP_INTERVAL *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintGrad</name>
      <anchorfile>exprinterpret__none_8c.html</anchorfile>
      <anchor>a951003903b4819772f2643d0efc5b10a</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Bool new_varvals, SCIP_Real *val, SCIP_Real *gradient)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintGradInt</name>
      <anchorfile>exprinterpret__none_8c.html</anchorfile>
      <anchor>adf40904b5c1ad96ac217d40a9ddd2aa9</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real infinity, SCIP_INTERVAL *varvals, SCIP_Bool new_varvals, SCIP_INTERVAL *val, SCIP_INTERVAL *gradient)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintHessianSparsityDense</name>
      <anchorfile>exprinterpret__none_8c.html</anchorfile>
      <anchor>a4e3afb5fe90e10cb9e116b66a6a6bede</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Bool *sparsity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprintHessianDense</name>
      <anchorfile>exprinterpret__none_8c.html</anchorfile>
      <anchor>abd322fc0556700c1a41144bbbc0f9386</anchor>
      <arglist>(SCIP_EXPRINT *exprint, SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Bool new_varvals, SCIP_Real *val, SCIP_Real *hessian)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_actconsdiving.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__actconsdiving_8c</filename>
    <includes id="heur__actconsdiving_8h" name="heur_actconsdiving.h" local="yes" imported="no">scip/heur_actconsdiving.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINRELDEPTH</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>ad51da41b6d0bcdfc6a0cca6d3b16f2c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXRELDEPTH</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a82348252eeeb6115b27a726a47d4fae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITERQUOT</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a4ad9478d78308c1b42364d4402afd485</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITEROFS</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a83914079c5500a3ac3bab996432aac2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEUBQUOT</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a09517339959c8b3c2cf1b88655c616d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEAVGQUOT</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a644d21286e83f9f202a8ad89781734e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEUBQUOTNOSOL</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a7d07d7da01b988451784b9b863ddd039</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEAVGQUOTNOSOL</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a94b98843ca18704fc8204c3a3d2d51a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_BACKTRACK</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a7ae85aa8c082f5dfaa3fc9f3e4383d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINLPITER</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a60637634a0e6dad8a0616cf76d42a89c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolActconsdiving</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a1d179911c2db2fac51d4b50641faf014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolActconsdiving</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>af6ec1fb4c2b97078aa4fc0a3cf54f70a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurActconsdiving</name>
      <anchorfile>heur__actconsdiving_8c.html</anchorfile>
      <anchor>a1f42a9abb7691ef34f56a81a3e231e94</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_actconsdiving.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__actconsdiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurActconsdiving</name>
      <anchorfile>heur__actconsdiving_8h.html</anchorfile>
      <anchor>a1f42a9abb7691ef34f56a81a3e231e94</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_coefdiving.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__coefdiving_8c</filename>
    <includes id="heur__coefdiving_8h" name="heur_coefdiving.h" local="yes" imported="no">scip/heur_coefdiving.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINRELDEPTH</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>ad51da41b6d0bcdfc6a0cca6d3b16f2c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXRELDEPTH</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a82348252eeeb6115b27a726a47d4fae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITERQUOT</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a4ad9478d78308c1b42364d4402afd485</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITEROFS</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a83914079c5500a3ac3bab996432aac2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEUBQUOT</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a09517339959c8b3c2cf1b88655c616d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEAVGQUOT</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a644d21286e83f9f202a8ad89781734e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEUBQUOTNOSOL</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a7d07d7da01b988451784b9b863ddd039</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEAVGQUOTNOSOL</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a94b98843ca18704fc8204c3a3d2d51a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_BACKTRACK</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a7ae85aa8c082f5dfaa3fc9f3e4383d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINLPITER</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a60637634a0e6dad8a0616cf76d42a89c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolCoefdiving</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>aef971c88da7d86b9132afaabecf3953b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolCoefdiving</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a7aba71f41322c2aeaf76ec824b3d3daa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurCoefdiving</name>
      <anchorfile>heur__coefdiving_8c.html</anchorfile>
      <anchor>a689b0e546db3fba8409acdf7e1aff09b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_coefdiving.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__coefdiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurCoefdiving</name>
      <anchorfile>heur__coefdiving_8h.html</anchorfile>
      <anchor>a689b0e546db3fba8409acdf7e1aff09b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_crossover.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__crossover_8c</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="heur__crossover_8h" name="heur_crossover.h" local="yes" imported="no">scip/heur_crossover.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXNODES</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a3522837756f274876c305e4c1b4f6df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINIMPROVE</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a96531e88ca9bbc320efc1f0047fed7f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINNODES</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a3da17bad844be18620349fa5350fa3b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINFIXINGRATE</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a70bea8553d41954dfd3df552f06935f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NODESOFS</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a318c1b5abf5de55f2099ca3d5b96200f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NODESQUOT</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a189764b27ab4e28c24d16c5f64b6d382</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NUSEDSOLS</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a3f8194390f31aeca60b54ecf29f719a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NWAITINGNODES</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a1d7cc3cbbe6ee0c38190bd63611a0854</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_RANDOMIZATION</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>aab193c4714e65df01a48a01bd1a239c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DONTWAITATROOT</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a518730acbae38a9f08ec7591e2170c6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USELPROWS</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a9c62464f60f03440fd05687a89aba225</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASHSIZE_SOLS</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a558a4ea2d612b9e76a73941cff43b1f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolCrossover</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a57e4fd6589a85df2d6f772e4e42517b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolCrossover</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a7cea7b8be0d61ec1e163cefd3a3bdef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SolTuple</type>
      <name>SOLTUPLE</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a456096aa526245292eb304d46f3057c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurCrossover</name>
      <anchorfile>heur__crossover_8c.html</anchorfile>
      <anchor>a10f29ebf4b2981a55aee0418a3b855ec</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_crossover.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__crossover_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurCrossover</name>
      <anchorfile>heur__crossover_8h.html</anchorfile>
      <anchor>a10f29ebf4b2981a55aee0418a3b855ec</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_dins.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__dins_8c</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="heur__dins_8h" name="heur_dins.h" local="yes" imported="no">scip/heur_dins.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NODESOFS</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>a318c1b5abf5de55f2099ca3d5b96200f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXNODES</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>a3522837756f274876c305e4c1b4f6df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINNODES</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>a3da17bad844be18620349fa5350fa3b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINIMPROVE</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>a96531e88ca9bbc320efc1f0047fed7f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NODESQUOT</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>a189764b27ab4e28c24d16c5f64b6d382</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NWAITINGNODES</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>a1d7cc3cbbe6ee0c38190bd63611a0854</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NEIGHBORHOODSIZE</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>a65887c215260c67f836f9e29dc69893f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SOLNUM</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>a962e5ae234928659a9093a1d5d117376</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USELPROWS</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>a9c62464f60f03440fd05687a89aba225</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitDins</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>af27d19c2c51caeba0366a06496327c67</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitDins</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>adeec2135b0aee4529c55991bc8930a93</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurDins</name>
      <anchorfile>heur__dins_8c.html</anchorfile>
      <anchor>a630a1a7469d47dc6943af0944237eac9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_dins.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__dins_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurDins</name>
      <anchorfile>heur__dins_8h.html</anchorfile>
      <anchor>a630a1a7469d47dc6943af0944237eac9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_feaspump.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__feaspump_8c</filename>
    <includes id="heur__feaspump_8h" name="heur_feaspump.h" local="yes" imported="no">scip/heur_feaspump.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITERQUOT</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a4ad9478d78308c1b42364d4402afd485</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITEROFS</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a83914079c5500a3ac3bab996432aac2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSOLS</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>ad6b38ad66f7e827f403993d10d1c69f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLOOPS</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>af36587161288aee932a586c15eeee91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSTALLLOOPS</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a8ce5cfcdb885d74a6e61ad8d0fb7e99a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINFLIPS</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a1e82649305c6d6c8a5c85a8264ad68ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_CYCLELENGTH</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a12400cb01c418f4ae847e84ecdf29934</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PERTURBFREQ</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a904b0bf12b7b2c9ffa63ec2a7da3ba1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_OBJFACTOR</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>afc3db61d23c5ff460aaa5ba2ead168e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ALPHADIFF</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a439a45f727c7e24821cd5b2b9d2a67e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_BEFORECUTS</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>ae0cad316f71e8c4812b5cc953a2e9499</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USEFP20</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a76059f2a54ce62c334ca56415f1c5dc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PERTSOLFOUND</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a93a82bbd2aacc6231ec34d261c4a32a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_STAGE3</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a004f4c2b2a0ba24415cd4de61f5fbbef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NEIGHBORHOODSIZE</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a65887c215260c67f836f9e29dc69893f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINLPITER</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>a60637634a0e6dad8a0616cf76d42a89c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurFeaspump</name>
      <anchorfile>heur__feaspump_8c.html</anchorfile>
      <anchor>aaf1ad30cc23374350da7af9b395ce72b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_feaspump.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__feaspump_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurFeaspump</name>
      <anchorfile>heur__feaspump_8h.html</anchorfile>
      <anchor>aaf1ad30cc23374350da7af9b395ce72b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_fixandinfer.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__fixandinfer_8c</filename>
    <includes id="heur__fixandinfer_8h" name="heur_fixandinfer.h" local="yes" imported="no">scip/heur_fixandinfer.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__fixandinfer_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__fixandinfer_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__fixandinfer_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__fixandinfer_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__fixandinfer_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__fixandinfer_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__fixandinfer_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__fixandinfer_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__fixandinfer_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXDIVEDEPTH</name>
      <anchorfile>heur__fixandinfer_8c.html</anchorfile>
      <anchor>ae8e55073339b0ab2f852d2ba5f1c1e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PROPROUNDS</name>
      <anchorfile>heur__fixandinfer_8c.html</anchorfile>
      <anchor>a8a7a8af238b61fc8154fba6bdd8c97b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINFIXINGS</name>
      <anchorfile>heur__fixandinfer_8c.html</anchorfile>
      <anchor>a9a4cdd038303fcd9ea7a7630a954355d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitFixandinfer</name>
      <anchorfile>heur__fixandinfer_8c.html</anchorfile>
      <anchor>a03e819ba8734c825b57b1ea62af84aa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitFixandinfer</name>
      <anchorfile>heur__fixandinfer_8c.html</anchorfile>
      <anchor>a3de9d629704f9aa1dcdf5a62585cb6c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolFixandinfer</name>
      <anchorfile>heur__fixandinfer_8c.html</anchorfile>
      <anchor>aeee558f7640d92c59a0a6343f3551563</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolFixandinfer</name>
      <anchorfile>heur__fixandinfer_8c.html</anchorfile>
      <anchor>a2c0544e0222236979f9315a2496ef1d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurFixandinfer</name>
      <anchorfile>heur__fixandinfer_8c.html</anchorfile>
      <anchor>a1adc06a81a83662dc546a9834f8e8abf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_fixandinfer.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__fixandinfer_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurFixandinfer</name>
      <anchorfile>heur__fixandinfer_8h.html</anchorfile>
      <anchor>a1adc06a81a83662dc546a9834f8e8abf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_fracdiving.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__fracdiving_8c</filename>
    <includes id="heur__fracdiving_8h" name="heur_fracdiving.h" local="yes" imported="no">scip/heur_fracdiving.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINRELDEPTH</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>ad51da41b6d0bcdfc6a0cca6d3b16f2c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXRELDEPTH</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a82348252eeeb6115b27a726a47d4fae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITERQUOT</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a4ad9478d78308c1b42364d4402afd485</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITEROFS</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a83914079c5500a3ac3bab996432aac2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEUBQUOT</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a09517339959c8b3c2cf1b88655c616d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEAVGQUOT</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a644d21286e83f9f202a8ad89781734e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEUBQUOTNOSOL</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a7d07d7da01b988451784b9b863ddd039</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEAVGQUOTNOSOL</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a94b98843ca18704fc8204c3a3d2d51a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_BACKTRACK</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a7ae85aa8c082f5dfaa3fc9f3e4383d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINLPITER</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a60637634a0e6dad8a0616cf76d42a89c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolFracdiving</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a0d8b9a13e4f0a2d8e5f4a750cc387973</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolFracdiving</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>a6f968c686513b27c160bd158fea5fafc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurFracdiving</name>
      <anchorfile>heur__fracdiving_8c.html</anchorfile>
      <anchor>af72b9903faa0038824ee060a879d6248</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_fracdiving.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__fracdiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurFracdiving</name>
      <anchorfile>heur__fracdiving_8h.html</anchorfile>
      <anchor>af72b9903faa0038824ee060a879d6248</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_guideddiving.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__guideddiving_8c</filename>
    <includes id="heur__guideddiving_8h" name="heur_guideddiving.h" local="yes" imported="no">scip/heur_guideddiving.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINRELDEPTH</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>ad51da41b6d0bcdfc6a0cca6d3b16f2c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXRELDEPTH</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>a82348252eeeb6115b27a726a47d4fae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITERQUOT</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>a4ad9478d78308c1b42364d4402afd485</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITEROFS</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>a83914079c5500a3ac3bab996432aac2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEUBQUOT</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>a09517339959c8b3c2cf1b88655c616d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEAVGQUOT</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>a644d21286e83f9f202a8ad89781734e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_BACKTRACK</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>a7ae85aa8c082f5dfaa3fc9f3e4383d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINLPITER</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>a60637634a0e6dad8a0616cf76d42a89c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolGuideddiving</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>adee5dd241a1ac609b5c86e38d8ae76af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolGuideddiving</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>ac192795d7fce4a8ea909413a293e444c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurGuideddiving</name>
      <anchorfile>heur__guideddiving_8c.html</anchorfile>
      <anchor>a02a08d914b9df83dd4c194845d2d6e70</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_guideddiving.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__guideddiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurGuideddiving</name>
      <anchorfile>heur__guideddiving_8h.html</anchorfile>
      <anchor>a02a08d914b9df83dd4c194845d2d6e70</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_intdiving.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__intdiving_8c</filename>
    <includes id="heur__intdiving_8h" name="heur_intdiving.h" local="yes" imported="no">scip/heur_intdiving.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINRELDEPTH</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>ad51da41b6d0bcdfc6a0cca6d3b16f2c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXRELDEPTH</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>a82348252eeeb6115b27a726a47d4fae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITERQUOT</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>a4ad9478d78308c1b42364d4402afd485</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITEROFS</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>a83914079c5500a3ac3bab996432aac2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEUBQUOT</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>a09517339959c8b3c2cf1b88655c616d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEAVGQUOT</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>a644d21286e83f9f202a8ad89781734e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEUBQUOTNOSOL</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>a7d07d7da01b988451784b9b863ddd039</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEAVGQUOTNOSOL</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>a94b98843ca18704fc8204c3a3d2d51a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_BACKTRACK</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>a7ae85aa8c082f5dfaa3fc9f3e4383d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINLPITER</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>a60637634a0e6dad8a0616cf76d42a89c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolIntdiving</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>ac29cdde8f8340e74e38e5a2f2de84367</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolIntdiving</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>ad21394c631a441d3c15e5ecaab667d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurIntdiving</name>
      <anchorfile>heur__intdiving_8c.html</anchorfile>
      <anchor>abc7811473b5a0b310e09584ce547929c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_intdiving.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__intdiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurIntdiving</name>
      <anchorfile>heur__intdiving_8h.html</anchorfile>
      <anchor>abc7811473b5a0b310e09584ce547929c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_intshifting.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__intshifting_8c</filename>
    <includes id="heur__intshifting_8h" name="heur_intshifting.h" local="yes" imported="no">scip/heur_intshifting.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__intshifting_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__intshifting_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__intshifting_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__intshifting_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__intshifting_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__intshifting_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__intshifting_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__intshifting_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__intshifting_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSHIFTINGS</name>
      <anchorfile>heur__intshifting_8c.html</anchorfile>
      <anchor>afd69ed724267773161d181f009a730f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WEIGHTFACTOR</name>
      <anchorfile>heur__intshifting_8c.html</anchorfile>
      <anchor>aef4d03ebf2f4e8c6dcf43ff2d011093c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurFreeIntshifting</name>
      <anchorfile>heur__intshifting_8c.html</anchorfile>
      <anchor>ad62c7d9f292f69968360f57d65da1659</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolIntshifting</name>
      <anchorfile>heur__intshifting_8c.html</anchorfile>
      <anchor>a61ad82fbab0411044630db9336b7bfb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurIntshifting</name>
      <anchorfile>heur__intshifting_8c.html</anchorfile>
      <anchor>a6ac40914cfb6b2963ad3c231f727bd1f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_intshifting.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__intshifting_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurIntshifting</name>
      <anchorfile>heur__intshifting_8h.html</anchorfile>
      <anchor>a6ac40914cfb6b2963ad3c231f727bd1f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_linesearchdiving.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__linesearchdiving_8c</filename>
    <includes id="heur__linesearchdiving_8h" name="heur_linesearchdiving.h" local="yes" imported="no">scip/heur_linesearchdiving.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINRELDEPTH</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>ad51da41b6d0bcdfc6a0cca6d3b16f2c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXRELDEPTH</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a82348252eeeb6115b27a726a47d4fae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITERQUOT</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a4ad9478d78308c1b42364d4402afd485</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITEROFS</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a83914079c5500a3ac3bab996432aac2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEUBQUOT</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a09517339959c8b3c2cf1b88655c616d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEAVGQUOT</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a644d21286e83f9f202a8ad89781734e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEUBQUOTNOSOL</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a7d07d7da01b988451784b9b863ddd039</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEAVGQUOTNOSOL</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a94b98843ca18704fc8204c3a3d2d51a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_BACKTRACK</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a7ae85aa8c082f5dfaa3fc9f3e4383d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINLPITER</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a60637634a0e6dad8a0616cf76d42a89c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolLinesearchdiving</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a47e8773bf93d93317fe00b2e6e33bcb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolLinesearchdiving</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a33b9423b1298b9068ee21f70e2f8057a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurLinesearchdiving</name>
      <anchorfile>heur__linesearchdiving_8c.html</anchorfile>
      <anchor>a64490c04fd91ebcd8fbf56f9c11e3bee</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_linesearchdiving.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__linesearchdiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurLinesearchdiving</name>
      <anchorfile>heur__linesearchdiving_8h.html</anchorfile>
      <anchor>a64490c04fd91ebcd8fbf56f9c11e3bee</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_localbranching.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__localbranching_8c</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="heur__localbranching_8h" name="heur_localbranching.h" local="yes" imported="no">scip/heur_localbranching.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NEIGHBORHOODSIZE</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a65887c215260c67f836f9e29dc69893f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NODESOFS</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a318c1b5abf5de55f2099ca3d5b96200f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXNODES</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a3522837756f274876c305e4c1b4f6df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINIMPROVE</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a96531e88ca9bbc320efc1f0047fed7f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINNODES</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a3da17bad844be18620349fa5350fa3b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NODESQUOT</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a189764b27ab4e28c24d16c5f64b6d382</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NWAITINGNODES</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a1d7cc3cbbe6ee0c38190bd63611a0854</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USELPROWS</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a9c62464f60f03440fd05687a89aba225</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXECUTE</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a05e20d8bc0525f94757303dd5a905a69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WAITFORNEWSOL</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a700527062feefdef73572212714304ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitLocalbranching</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a2977b97254ac73217153a709fd519a3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolLocalbranching</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>a1095ff8902fe98eefcd01c7c2fdff762</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolLocalbranching</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>aa010f4bc8f4478dd169e2abaa3bb9514</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurLocalbranching</name>
      <anchorfile>heur__localbranching_8c.html</anchorfile>
      <anchor>ad1eb806dcbd1cd04037c85b61f918dfa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_localbranching.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__localbranching_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurLocalbranching</name>
      <anchorfile>heur__localbranching_8h.html</anchorfile>
      <anchor>ad1eb806dcbd1cd04037c85b61f918dfa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_mutation.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__mutation_8c</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="heur__mutation_8h" name="heur_mutation.h" local="yes" imported="no">scip/heur_mutation.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NODESOFS</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a318c1b5abf5de55f2099ca3d5b96200f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXNODES</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a3522837756f274876c305e4c1b4f6df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINIMPROVE</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a96531e88ca9bbc320efc1f0047fed7f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINNODES</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a3da17bad844be18620349fa5350fa3b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINFIXINGRATE</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a70bea8553d41954dfd3df552f06935f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NODESQUOT</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a189764b27ab4e28c24d16c5f64b6d382</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NWAITINGNODES</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a1d7cc3cbbe6ee0c38190bd63611a0854</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USELPROWS</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a9c62464f60f03440fd05687a89aba225</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitMutation</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a3b1cd838d9238833813be6502d1634c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolMutation</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a3bfa124452ae6f6f7b0b18b3592fb8b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolMutation</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a6f88cdf9d9ff3b31a68f7969991847af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurMutation</name>
      <anchorfile>heur__mutation_8c.html</anchorfile>
      <anchor>a37358e321322ec3d9e197a46deb4e533</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_mutation.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__mutation_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurMutation</name>
      <anchorfile>heur__mutation_8h.html</anchorfile>
      <anchor>a37358e321322ec3d9e197a46deb4e533</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_objpscostdiving.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__objpscostdiving_8c</filename>
    <includes id="heur__objpscostdiving_8h" name="heur_objpscostdiving.h" local="yes" imported="no">scip/heur_objpscostdiving.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINRELDEPTH</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>ad51da41b6d0bcdfc6a0cca6d3b16f2c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXRELDEPTH</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>a82348252eeeb6115b27a726a47d4fae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITERQUOT</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>a4ad9478d78308c1b42364d4402afd485</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITEROFS</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>a83914079c5500a3ac3bab996432aac2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSOLS</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>ad6b38ad66f7e827f403993d10d1c69f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DEPTHFAC</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>a390a8d25f895f622011c6bd4a5f6f1b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DEPTHFACNOSOL</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>aa1ec5bc730972e39093d511cb8a98698</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINLPITER</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>a60637634a0e6dad8a0616cf76d42a89c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolObjpscostdiving</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>a6dfd37827d7bb328235f667f37c7566b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolObjpscostdiving</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>a1ce56a78ec086eccbccfb16dbfaacaa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurObjpscostdiving</name>
      <anchorfile>heur__objpscostdiving_8c.html</anchorfile>
      <anchor>a83277a2049fe267c8634fed0df439693</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_objpscostdiving.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__objpscostdiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurObjpscostdiving</name>
      <anchorfile>heur__objpscostdiving_8h.html</anchorfile>
      <anchor>a83277a2049fe267c8634fed0df439693</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_octane.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__octane_8c</filename>
    <includes id="heur__octane_8h" name="heur_octane.h" local="yes" imported="no">scip/heur_octane.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__octane_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__octane_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__octane_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__octane_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__octane_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__octane_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__octane_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__octane_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__octane_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_FMAX</name>
      <anchorfile>heur__octane_8c.html</anchorfile>
      <anchor>ac93e5b88eac03effdc74fc68a71404df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_FFIRST</name>
      <anchorfile>heur__octane_8c.html</anchorfile>
      <anchor>aa257b66d6d433da0cc33a773f6e66ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USEFRACSPACE</name>
      <anchorfile>heur__octane_8c.html</anchorfile>
      <anchor>a6e30df61162950febfb9f9b50eddc45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolOctane</name>
      <anchorfile>heur__octane_8c.html</anchorfile>
      <anchor>ad42c1724449dcebab94b9908def8fb4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolOctane</name>
      <anchorfile>heur__octane_8c.html</anchorfile>
      <anchor>a93059b1124383b9f7bc7e7e1b7a66ce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurOctane</name>
      <anchorfile>heur__octane_8c.html</anchorfile>
      <anchor>af6fa668040deb871eb689ff9a329eb4c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_octane.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__octane_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurOctane</name>
      <anchorfile>heur__octane_8h.html</anchorfile>
      <anchor>af6fa668040deb871eb689ff9a329eb4c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_oneopt.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__oneopt_8c</filename>
    <includes id="heur__oneopt_8h" name="heur_oneopt.h" local="yes" imported="no">scip/heur_oneopt.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__oneopt_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__oneopt_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__oneopt_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__oneopt_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__oneopt_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__oneopt_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__oneopt_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__oneopt_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__oneopt_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_WEIGHTEDOBJ</name>
      <anchorfile>heur__oneopt_8c.html</anchorfile>
      <anchor>a6b066c2a2ed6828b655dcf2b9c2f2a71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DURINGROOT</name>
      <anchorfile>heur__oneopt_8c.html</anchorfile>
      <anchor>a8b7271d18a5f7dfcb59664f15d55e134</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitOneopt</name>
      <anchorfile>heur__oneopt_8c.html</anchorfile>
      <anchor>a3b10c83d25b87eaf6b2b64e2081b7e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitOneopt</name>
      <anchorfile>heur__oneopt_8c.html</anchorfile>
      <anchor>a3e57f086a20dc3e8f0b3049ad1bd9017</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurOneopt</name>
      <anchorfile>heur__oneopt_8c.html</anchorfile>
      <anchor>aa5d0745fe51bcdc02c655e08852a59ac</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_oneopt.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__oneopt_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurOneopt</name>
      <anchorfile>heur__oneopt_8h.html</anchorfile>
      <anchor>aa5d0745fe51bcdc02c655e08852a59ac</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_pscostdiving.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__pscostdiving_8c</filename>
    <includes id="heur__pscostdiving_8h" name="heur_pscostdiving.h" local="yes" imported="no">scip/heur_pscostdiving.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINRELDEPTH</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>ad51da41b6d0bcdfc6a0cca6d3b16f2c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXRELDEPTH</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a82348252eeeb6115b27a726a47d4fae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITERQUOT</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a4ad9478d78308c1b42364d4402afd485</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITEROFS</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a83914079c5500a3ac3bab996432aac2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEUBQUOT</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a09517339959c8b3c2cf1b88655c616d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEAVGQUOT</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a644d21286e83f9f202a8ad89781734e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEUBQUOTNOSOL</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a7d07d7da01b988451784b9b863ddd039</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEAVGQUOTNOSOL</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a94b98843ca18704fc8204c3a3d2d51a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_BACKTRACK</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a7ae85aa8c082f5dfaa3fc9f3e4383d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINLPITER</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a60637634a0e6dad8a0616cf76d42a89c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolPscostdiving</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a6526ee85de8318ff1a8d2ae150f4d3fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolPscostdiving</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>a6a6fc198b014f95c91e16a4d2f1f94f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurPscostdiving</name>
      <anchorfile>heur__pscostdiving_8c.html</anchorfile>
      <anchor>acd329c6cf0d396096e2e1f100fc7cd04</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_pscostdiving.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__pscostdiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurPscostdiving</name>
      <anchorfile>heur__pscostdiving_8h.html</anchorfile>
      <anchor>acd329c6cf0d396096e2e1f100fc7cd04</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_rens.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__rens_8c</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="heur__rens_8h" name="heur_rens.h" local="yes" imported="no">scip/heur_rens.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_BINARYBOUNDS</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>a2c2f8535ef0062493d83988fe2f35bfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXNODES</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>a3522837756f274876c305e4c1b4f6df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINFIXINGRATE</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>a70bea8553d41954dfd3df552f06935f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINIMPROVE</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>a96531e88ca9bbc320efc1f0047fed7f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINNODES</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>a3da17bad844be18620349fa5350fa3b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NODESOFS</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>a318c1b5abf5de55f2099ca3d5b96200f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NODESQUOT</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>a189764b27ab4e28c24d16c5f64b6d382</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USELPROWS</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>a9c62464f60f03440fd05687a89aba225</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitRens</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>aaf696e1b1f77cfd783b3185c95551e92</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolRens</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>a1a0299bf714db6a4f2457454bf2cd2a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolRens</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>aa14c443c478ef85585fb480fde49643a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPapplyRens</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>a922c227b686001d99677c63f12ec89bf</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_RESULT *result, SCIP_Real timelimit, SCIP_Real memorylimit, SCIP_Real minfixingrate, SCIP_Real minimprove, SCIP_Longint maxnodes, SCIP_Longint nstallnodes, SCIP_Bool binarybounds, SCIP_Bool uselprows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurRens</name>
      <anchorfile>heur__rens_8c.html</anchorfile>
      <anchor>afc870df390e4948c917ecc4863258a2e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_rens.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__rens_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurRens</name>
      <anchorfile>heur__rens_8h.html</anchorfile>
      <anchor>afc870df390e4948c917ecc4863258a2e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPapplyRens</name>
      <anchorfile>heur__rens_8h.html</anchorfile>
      <anchor>a922c227b686001d99677c63f12ec89bf</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_RESULT *result, SCIP_Real timelimit, SCIP_Real memorylimit, SCIP_Real minfixingrate, SCIP_Real minimprove, SCIP_Longint maxnodes, SCIP_Longint nstallnodes, SCIP_Bool binarybounds, SCIP_Bool uselprows)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_rins.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__rins_8c</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="heur__rins_8h" name="heur_rins.h" local="yes" imported="no">scip/heur_rins.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NODESOFS</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>a318c1b5abf5de55f2099ca3d5b96200f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXNODES</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>a3522837756f274876c305e4c1b4f6df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINNODES</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>a3da17bad844be18620349fa5350fa3b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINIMPROVE</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>a96531e88ca9bbc320efc1f0047fed7f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINFIXINGRATE</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>a70bea8553d41954dfd3df552f06935f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NODESQUOT</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>a189764b27ab4e28c24d16c5f64b6d382</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NWAITINGNODES</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>a1d7cc3cbbe6ee0c38190bd63611a0854</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USELPROWS</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>a9c62464f60f03440fd05687a89aba225</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitRins</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>ae038a69aca8ad5784ab28dd69ca465ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolRins</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>a3fc1a95bc804bae9e20be08261c30db6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolRins</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>a49e986d90f06705e808f2ecb9102771a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurRins</name>
      <anchorfile>heur__rins_8c.html</anchorfile>
      <anchor>aa8232fb5d57a41be80de943b3fb24a2f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_rins.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__rins_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurRins</name>
      <anchorfile>heur__rins_8h.html</anchorfile>
      <anchor>aa8232fb5d57a41be80de943b3fb24a2f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_rootsoldiving.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__rootsoldiving_8c</filename>
    <includes id="heur__rootsoldiving_8h" name="heur_rootsoldiving.h" local="yes" imported="no">scip/heur_rootsoldiving.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINRELDEPTH</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>ad51da41b6d0bcdfc6a0cca6d3b16f2c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXRELDEPTH</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>a82348252eeeb6115b27a726a47d4fae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITERQUOT</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>a4ad9478d78308c1b42364d4402afd485</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITEROFS</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>a83914079c5500a3ac3bab996432aac2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSOLS</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>ad6b38ad66f7e827f403993d10d1c69f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DEPTHFAC</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>a390a8d25f895f622011c6bd4a5f6f1b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DEPTHFACNOSOL</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>aa1ec5bc730972e39093d511cb8a98698</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINLPITER</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>a60637634a0e6dad8a0616cf76d42a89c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolRootsoldiving</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>a08d357ab048064e9441f4c4d904be9dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolRootsoldiving</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>a72012c6702c72ac6c137725bc6cdb011</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurRootsoldiving</name>
      <anchorfile>heur__rootsoldiving_8c.html</anchorfile>
      <anchor>afb4741efabcac9dec6fc361cca122b8d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_rootsoldiving.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__rootsoldiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurRootsoldiving</name>
      <anchorfile>heur__rootsoldiving_8h.html</anchorfile>
      <anchor>afb4741efabcac9dec6fc361cca122b8d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_rounding.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__rounding_8c</filename>
    <includes id="heur__rounding_8h" name="heur_rounding.h" local="yes" imported="no">scip/heur_rounding.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__rounding_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__rounding_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__rounding_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__rounding_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__rounding_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__rounding_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__rounding_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__rounding_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__rounding_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurFreeRounding</name>
      <anchorfile>heur__rounding_8c.html</anchorfile>
      <anchor>a061295f84ba7da36759c313cae275b6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolRounding</name>
      <anchorfile>heur__rounding_8c.html</anchorfile>
      <anchor>a1baeeb7c03e3808574d5d8180e362ffa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurRounding</name>
      <anchorfile>heur__rounding_8c.html</anchorfile>
      <anchor>ac41d2df91bc5ed44380a0ef24b084e63</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_rounding.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__rounding_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurRounding</name>
      <anchorfile>heur__rounding_8h.html</anchorfile>
      <anchor>ac41d2df91bc5ed44380a0ef24b084e63</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_shiftandpropagate.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__shiftandpropagate_8c</filename>
    <includes id="heur__shiftandpropagate_8h" name="heur_shiftandpropagate.h" local="yes" imported="no">scip/heur_shiftandpropagate.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_WEIGHT_INEQUALITY</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a959a9a5396e8d117e430d65540b1aa22</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_WEIGHT_EQUALITY</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>adabc9861a3c3b728edc796191afba803</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_RELAXATE</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a4a420693f950a25e2beb76d2e257f862</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PROBING</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>aeb08ac899b01f362c42d3961881f54f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PROP_BREAKER</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a394b198273218ceb5a40368bffde2216</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_CUTOFF_BREAKER</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a11a2f592de3638a89025738abd578eac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATISTIC</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>aedbab97e0caeea77e458344e48e58b16</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitShiftandpropagate</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>aa8b650f4c3252fd47e8adc79a2a651ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolShiftandpropagate</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a4c9ad6aef0b28019edca71f1f819d122</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolShiftandpropagate</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a76e1ed4de2b5434cec7be8c6c1526d26</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum TransformStatus</type>
      <name>TRANSFORMSTATUS</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a935c51f801c3d44afee8f9870de50ce0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ConstraintMatrix</type>
      <name>CONSTRAINTMATRIX</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>ad127caafa4457a0a5a4b287b2af30868</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>TransformStatus</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a54196d04460fa3148590062902e500f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRANSFORMSTATUS_NONE</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a54196d04460fa3148590062902e500f0a79643ada0a8a8b9cce5ca47a47554498</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRANSFORMSTATUS_LB</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a54196d04460fa3148590062902e500f0aeefb5ec03050eb3473c882aac1fb6566</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRANSFORMSTATUS_NEG</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a54196d04460fa3148590062902e500f0aba0b1de679134993fea8fc15dd68b445</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRANSFORMSTATUS_FREE</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a54196d04460fa3148590062902e500f0a7e1f380ea9dbf08a6038b2e05ad5fd9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurShiftandpropagate</name>
      <anchorfile>heur__shiftandpropagate_8c.html</anchorfile>
      <anchor>a6f3a5709b90301d5fec3594edad77934</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_shiftandpropagate.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__shiftandpropagate_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurShiftandpropagate</name>
      <anchorfile>heur__shiftandpropagate_8h.html</anchorfile>
      <anchor>a6f3a5709b90301d5fec3594edad77934</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_shifting.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__shifting_8c</filename>
    <includes id="heur__shifting_8h" name="heur_shifting.h" local="yes" imported="no">scip/heur_shifting.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__shifting_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__shifting_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__shifting_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__shifting_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__shifting_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__shifting_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__shifting_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__shifting_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__shifting_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSHIFTINGS</name>
      <anchorfile>heur__shifting_8c.html</anchorfile>
      <anchor>afd69ed724267773161d181f009a730f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WEIGHTFACTOR</name>
      <anchorfile>heur__shifting_8c.html</anchorfile>
      <anchor>aef4d03ebf2f4e8c6dcf43ff2d011093c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurFreeShifting</name>
      <anchorfile>heur__shifting_8c.html</anchorfile>
      <anchor>a406943ed91313bfb181b716aac32ce78</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolShifting</name>
      <anchorfile>heur__shifting_8c.html</anchorfile>
      <anchor>af379089f80b6d4c8d480485ba815fbef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurShifting</name>
      <anchorfile>heur__shifting_8c.html</anchorfile>
      <anchor>a5e0cd2a98d0f24ba9cc94918c26a30a0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_shifting.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__shifting_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurShifting</name>
      <anchorfile>heur__shifting_8h.html</anchorfile>
      <anchor>a5e0cd2a98d0f24ba9cc94918c26a30a0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_simplerounding.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__simplerounding_8c</filename>
    <includes id="heur__simplerounding_8h" name="heur_simplerounding.h" local="yes" imported="no">scip/heur_simplerounding.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__simplerounding_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__simplerounding_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__simplerounding_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__simplerounding_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__simplerounding_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__simplerounding_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__simplerounding_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__simplerounding_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__simplerounding_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurFreeSimplerounding</name>
      <anchorfile>heur__simplerounding_8c.html</anchorfile>
      <anchor>aa05c8997605c9b8fcd72dea9d63f6cf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolSimplerounding</name>
      <anchorfile>heur__simplerounding_8c.html</anchorfile>
      <anchor>a84f77f22e15c03ec5f455c0426f31f96</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurSimplerounding</name>
      <anchorfile>heur__simplerounding_8c.html</anchorfile>
      <anchor>a29047f9d88898ab396abe63917f2fd06</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_simplerounding.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__simplerounding_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurSimplerounding</name>
      <anchorfile>heur__simplerounding_8h.html</anchorfile>
      <anchor>a29047f9d88898ab396abe63917f2fd06</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_subnlp.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__subnlp_8c</filename>
    <includes id="heur__subnlp_8h" name="heur_subnlp.h" local="yes" imported="no">scip/heur_subnlp.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="cons__varbound_8h" name="cons_varbound.h" local="yes" imported="no">scip/cons_varbound.h</includes>
    <includes id="cons__logicor_8h" name="cons_logicor.h" local="yes" imported="no">scip/cons_logicor.h</includes>
    <includes id="cons__setppc_8h" name="cons_setppc.h" local="yes" imported="no">scip/cons_setppc.h</includes>
    <includes id="cons__knapsack_8h" name="cons_knapsack.h" local="yes" imported="no">scip/cons_knapsack.h</includes>
    <includes id="cons__bounddisjunction_8h" name="cons_bounddisjunction.h" local="yes" imported="no">scip/cons_bounddisjunction.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__subnlp_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__subnlp_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__subnlp_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__subnlp_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__subnlp_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__subnlp_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__subnlp_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__subnlp_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__subnlp_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPapplyHeurSubNlp</name>
      <anchorfile>heur__subnlp_8c.html</anchorfile>
      <anchor>a8498c377ed87f40a2b191d505924d27a</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_RESULT *result, SCIP_SOL *refpoint, SCIP_Longint itercontingent, SCIP_Real timelimit, SCIP_Real minimprove, SCIP_Longint *iterused)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurSubNlp</name>
      <anchorfile>heur__subnlp_8c.html</anchorfile>
      <anchor>afd440078e5a49e9dfd94ac62a065a9f1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLinearConsToNlpHeurSubNlp</name>
      <anchorfile>heur__subnlp_8c.html</anchorfile>
      <anchor>a154c9a53d3798601d1b12c793372e751</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_Bool addcombconss, SCIP_Bool addcontconss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateStartpointHeurSubNlp</name>
      <anchorfile>heur__subnlp_8c.html</anchorfile>
      <anchor>a7ee19adc67412b606de293e2677ab38e</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_SOL *solcand, SCIP_Real violation)</arglist>
    </member>
    <member kind="function">
      <type>SCIP *</type>
      <name>SCIPgetSubScipHeurSubNlp</name>
      <anchorfile>heur__subnlp_8c.html</anchorfile>
      <anchor>a402c49d666dbdf7ff0a503e5b6ab9673</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarMappingScip2SubScipHeurSubNlp</name>
      <anchorfile>heur__subnlp_8c.html</anchorfile>
      <anchor>af7e4d2131b7c28262221cc0b0daff1a6</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarMappingSubScip2ScipHeurSubNlp</name>
      <anchorfile>heur__subnlp_8c.html</anchorfile>
      <anchor>a32a951895814240a257776445b284346</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_subnlp.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__subnlp_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurSubNlp</name>
      <anchorfile>heur__subnlp_8h.html</anchorfile>
      <anchor>afd440078e5a49e9dfd94ac62a065a9f1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateStartpointHeurSubNlp</name>
      <anchorfile>heur__subnlp_8h.html</anchorfile>
      <anchor>a7ee19adc67412b606de293e2677ab38e</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_SOL *solcand, SCIP_Real violation)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPapplyHeurSubNlp</name>
      <anchorfile>heur__subnlp_8h.html</anchorfile>
      <anchor>a8498c377ed87f40a2b191d505924d27a</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_RESULT *result, SCIP_SOL *refpoint, SCIP_Longint itercontingent, SCIP_Real timelimit, SCIP_Real minimprove, SCIP_Longint *iterused)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLinearConsToNlpHeurSubNlp</name>
      <anchorfile>heur__subnlp_8h.html</anchorfile>
      <anchor>a154c9a53d3798601d1b12c793372e751</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_Bool addcombconss, SCIP_Bool addcontconss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP *</type>
      <name>SCIPgetSubScipHeurSubNlp</name>
      <anchorfile>heur__subnlp_8h.html</anchorfile>
      <anchor>a402c49d666dbdf7ff0a503e5b6ab9673</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarMappingScip2SubScipHeurSubNlp</name>
      <anchorfile>heur__subnlp_8h.html</anchorfile>
      <anchor>af7e4d2131b7c28262221cc0b0daff1a6</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVarMappingSubScip2ScipHeurSubNlp</name>
      <anchorfile>heur__subnlp_8h.html</anchorfile>
      <anchor>a32a951895814240a257776445b284346</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_trivial.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__trivial_8c</filename>
    <includes id="heur__trivial_8h" name="heur_trivial.h" local="yes" imported="no">scip/heur_trivial.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__trivial_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__trivial_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__trivial_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__trivial_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__trivial_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__trivial_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__trivial_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__trivial_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__trivial_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurFreeTrivial</name>
      <anchorfile>heur__trivial_8c.html</anchorfile>
      <anchor>a99dcdf90cd004ee4ee533d26929dc2fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitTrivial</name>
      <anchorfile>heur__trivial_8c.html</anchorfile>
      <anchor>abd324c022d6807ad381d8c9c02065a96</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitTrivial</name>
      <anchorfile>heur__trivial_8c.html</anchorfile>
      <anchor>a78f117fd2af493560506e4ceb67d3888</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolTrivial</name>
      <anchorfile>heur__trivial_8c.html</anchorfile>
      <anchor>aa2ff83a6758d5059fd6a7ba0aa3a7cc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolTrivial</name>
      <anchorfile>heur__trivial_8c.html</anchorfile>
      <anchor>a4d40a7ac5a8274508a4688fc432552f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurTrivial</name>
      <anchorfile>heur__trivial_8c.html</anchorfile>
      <anchor>ad48cca3c31e8d04be1b768dc48b1cd90</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_trivial.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__trivial_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurTrivial</name>
      <anchorfile>heur__trivial_8h.html</anchorfile>
      <anchor>ad48cca3c31e8d04be1b768dc48b1cd90</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_trysol.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__trysol_8c</filename>
    <includes id="heur__trysol_8h" name="heur_trysol.h" local="yes" imported="no">scip/heur_trysol.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__trysol_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__trysol_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__trysol_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__trysol_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__trysol_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__trysol_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__trysol_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__trysol_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__trysol_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitTrySol</name>
      <anchorfile>heur__trysol_8c.html</anchorfile>
      <anchor>a8bb5b846a8d26f31b3648319201a19cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolTrySol</name>
      <anchorfile>heur__trysol_8c.html</anchorfile>
      <anchor>af07c5baa28838d29fdfc696934306d9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolTrySol</name>
      <anchorfile>heur__trysol_8c.html</anchorfile>
      <anchor>a38c16c428e90a20e9114e1f0c01116b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurTrySol</name>
      <anchorfile>heur__trysol_8c.html</anchorfile>
      <anchor>a8b48de846ab94bfc544577cba35c4ba8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPheurPassSolTrySol</name>
      <anchorfile>heur__trysol_8c.html</anchorfile>
      <anchor>a0a2e22ed373a06d58af5a44895fc0e97</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_SOL *sol)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_trysol.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__trysol_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurTrySol</name>
      <anchorfile>heur__trysol_8h.html</anchorfile>
      <anchor>a8b48de846ab94bfc544577cba35c4ba8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPheurPassSolTrySol</name>
      <anchorfile>heur__trysol_8h.html</anchorfile>
      <anchor>a0a2e22ed373a06d58af5a44895fc0e97</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_SOL *sol)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_twoopt.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__twoopt_8c</filename>
    <includes id="heur__twoopt_8h" name="heur_twoopt.h" local="yes" imported="no">scip/heur_twoopt.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_INTOPT</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>acba9e335007bf1c4663f28889a42575f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_WAITINGNODES</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>a6b94662d953079ab726344d0290d9d47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MATCHINGRATE</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>a63a0139d61ddeca0c49a514e98106150</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXNSLAVES</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>abb5c33d19a3d2d8cc0b9b5eedd3e42cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum Opttype</type>
      <name>OPTTYPE</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>ab76d2228ddffbb841f448e7e9af6c706</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Opttype</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>ae8f05f01a77c71324179e4af63a3559b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPTTYPE_BINARY</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>ae8f05f01a77c71324179e4af63a3559bab6f4aa5fbe0d5e56bba2bbb5913abb0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPTTYPE_INTEGER</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>ae8f05f01a77c71324179e4af63a3559ba98fb537ee02eca04f44c4d048f0ddbae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurTwoopt</name>
      <anchorfile>heur__twoopt_8c.html</anchorfile>
      <anchor>ae9c02f09426e8ae55176f60f9b1836e8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_twoopt.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__twoopt_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurTwoopt</name>
      <anchorfile>heur__twoopt_8h.html</anchorfile>
      <anchor>ae9c02f09426e8ae55176f60f9b1836e8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_undercover.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__undercover_8c</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="heur__undercover_8h" name="heur_undercover.h" local="yes" imported="no">scip/heur_undercover.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_FIXINGALTS</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a244f5613dcc8ef15aedd6c8f4b04273b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXNODES</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a3522837756f274876c305e4c1b4f6df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINNODES</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a3da17bad844be18620349fa5350fa3b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NODESOFS</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a318c1b5abf5de55f2099ca3d5b96200f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_CONFLICTWEIGHT</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a7c7598d9b8355c08c2a24b63884091fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_CUTOFFWEIGHT</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a907a52b44fe225e3d726de5eb2596edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_INFERENCEWEIGHT</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a67c322ee593861e391d14c0ecee8239e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXCOVERSIZE</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a52b6c3346c33e3c734567ae624a8e291</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINIMPROVE</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a96531e88ca9bbc320efc1f0047fed7f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NODESQUOT</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a189764b27ab4e28c24d16c5f64b6d382</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_RECOVERDIV</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a5e138a93977a198313a138955a0b53da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_BEFORECUTS</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>ae0cad316f71e8c4812b5cc953a2e9499</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_FIXINTFIRST</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>adf2ea0ea184ff66423d150c1df09aa20</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_LOCKSROUNDING</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>abb1bfd18c6caf0bfc5731fb61ddd16c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ONLYCONVEXIFY</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a4d4f27c704b250dfc398fe7f27bdebd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_POSTNLP</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a69f4ee4986b7890d2c1067109abf7df1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXBACKTRACKS</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>aae39e91bacb0c5c05afcbea6bcf781d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXRECOVERS</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a16b0719bd0526cce33b369d3aac76abe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXREORDERS</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>af611ae0b99ad732c7b5f44f194c1368d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_COVERINGOBJ</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>aba4028a0f622805fc85a13094fdfc591</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COVERINGOBJS</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>ace199b91a0c42eafc7dfe53946489a5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXNLPFAILS</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a4ab00de080ea42981bca6507fbcb3e30</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXPOSTNLPFAILS</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a18d5bc97c1bb6cc265d1172b7dc62683</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINTIMELEFT</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>aeaacdfb5753c9473306c8c627501b330</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUBMIPSETUPCOSTS</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a61912c475407081cac0d998e79db25b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitUndercover</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a1933a2bbf5917daa54a4a06bf346f5e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurUndercover</name>
      <anchorfile>heur__undercover_8c.html</anchorfile>
      <anchor>a2d46b93d2153054583fea5dab2da0f27</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_undercover.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__undercover_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurUndercover</name>
      <anchorfile>heur__undercover_8h.html</anchorfile>
      <anchor>a2d46b93d2153054583fea5dab2da0f27</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_veclendiving.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__veclendiving_8c</filename>
    <includes id="heur__veclendiving_8h" name="heur_veclendiving.h" local="yes" imported="no">scip/heur_veclendiving.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINRELDEPTH</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>ad51da41b6d0bcdfc6a0cca6d3b16f2c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXRELDEPTH</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a82348252eeeb6115b27a726a47d4fae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITERQUOT</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a4ad9478d78308c1b42364d4402afd485</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXLPITEROFS</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a83914079c5500a3ac3bab996432aac2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEUBQUOT</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a09517339959c8b3c2cf1b88655c616d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEAVGQUOT</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a644d21286e83f9f202a8ad89781734e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEUBQUOTNOSOL</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a7d07d7da01b988451784b9b863ddd039</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDIVEAVGQUOTNOSOL</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a94b98843ca18704fc8204c3a3d2d51a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_BACKTRACK</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a7ae85aa8c082f5dfaa3fc9f3e4383d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINLPITER</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a60637634a0e6dad8a0616cf76d42a89c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurInitsolVeclendiving</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a8057bcbc24966f04c22f47b06cb324f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolVeclendiving</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a9e547c30e9f0570efcf78092d017df5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurVeclendiving</name>
      <anchorfile>heur__veclendiving_8c.html</anchorfile>
      <anchor>a244b3c499b28a355e18403919f0668dd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_veclendiving.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__veclendiving_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurVeclendiving</name>
      <anchorfile>heur__veclendiving_8h.html</anchorfile>
      <anchor>a244b3c499b28a355e18403919f0668dd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_zirounding.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__zirounding_8c</filename>
    <includes id="heur__zirounding_8h" name="heur_zirounding.h" local="yes" imported="no">scip/heur_zirounding.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_NAME</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>a967eba5b1d30d412917cf78500ca7fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DESC</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>a5274289d723e744f6f4f97ce60764348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_DISPCHAR</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>a7d7585030e07041c97fad1db1b152f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_PRIORITY</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>a800f74d54fdb784ee8c84b8ee3df4014</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQ</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>ad37fd9a41ffd212d2c3ef8a839b383b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_FREQOFS</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>a4c2f99b2ff523bea95549d9dbb220535</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_MAXDEPTH</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>a7e50082d884e6401a7aef78120e93f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_TIMING</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>a3d5163d42104a3029dc43bb44ef3ac25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEUR_USESSUBSCIP</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>ae103ab015e8d355340c62ba392dbaf49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDINGLOOPS</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>a2d7ec7c797a7c44af71d5f2bda03e060</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_STOPZIROUND</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>a84707ec61ec69cd46c7003396cd9b035</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_STOPPERCENTAGE</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>a791055e0f9c19ce3e45fad082680cb5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINSTOPNCALLS</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>a8d71644e8f71cb49a4879ab2b3e03e90</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>heurExitsolZirounding</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>ab9bb872c22448dea0853a4eeb414d1a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum Direction</type>
      <name>DIRECTION</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>a612ffeb79f79c8facc2fc4cac4ec37f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Direction</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>a224b9163917ac32fc95a60d8c1eec3aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIRECTION_UP</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>a224b9163917ac32fc95a60d8c1eec3aaa6c1eae28e7db0d37e0e8a3140926b7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIRECTION_DOWN</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>a224b9163917ac32fc95a60d8c1eec3aaa56d7e58d244b905d940d3524ba575edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurZirounding</name>
      <anchorfile>heur__zirounding_8c.html</anchorfile>
      <anchor>aa35b8f1c2dc826343ba3686d01654ad9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heur_zirounding.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>heur__zirounding_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeurZirounding</name>
      <anchorfile>heur__zirounding_8h.html</anchorfile>
      <anchor>aa35b8f1c2dc826343ba3686d01654ad9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_clp.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>lpi__clp_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUMINFEASBOUND</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a2fd62d75c4d7a35e2b82e2d8de9c6130</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLS_PER_PACKET</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a3e80b2ad8cd656992a2f9c981adc8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWS_PER_PACKET</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>ae3086d289ba34ee9eb88f8419a4f8e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>COLPACKET</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a70d7f598e377388ae50ff1417e34bd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>ROWPACKET</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a285e06216667783fd0bd0cbcd8b4882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a65aaa272b2e5c4fb9ef4a471f801400a</anchor>
      <arglist>(SCIP_LPI **lpi, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>ae23bc1c98c8547a0ba03682d100365dd</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>add77293153dc03295e1782af22921906</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a2bad82670d46254daf3e923898c404d5</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a9d2be550f8b4c9549b3cec35a14bfe87</anchor>
      <arglist>(SCIP_LPI *lpi, int r, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a0a0c7059703ee01d62901f97a90f9e70</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a707f2ef39d80067dc6e58ea29201631d</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>abae81bf14cfd48a03f5c283dc28134d2</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>af59f56532adbbb974fc3a08280aedf4f</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>aa11747a31cdd7efe4bfcd32b82d6b325</anchor>
      <arglist>(SCIP_LPI *)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a8c50925f0993643dc0d04e0d1bbe848a</anchor>
      <arglist>(SCIP_LPI *, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__clp_8cpp.html</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_cpx.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>lpi__cpx_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_ZERO</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a39b6722f72c304de61f70f30561aeed5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ABORT_ZERO</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>ab4db77491a6aef4d4ae9326030963918</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CPX_INT_MAX</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a3c7bf5a08dbb854da26689412246e639</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLS_PER_PACKET</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a3e80b2ad8cd656992a2f9c981adc8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWS_PER_PACKET</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>ae3086d289ba34ee9eb88f8419a4f8e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUMINTPARAM</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a91bbe58fc774297c149f7e08a974de11</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUMDBLPARAM</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>ac2b1b998d4ad2ba90b97c858783f1afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>COLPACKET</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a70d7f598e377388ae50ff1417e34bd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>ROWPACKET</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a285e06216667783fd0bd0cbcd8b4882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CPXParam</type>
      <name>CPXPARAM</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a7b657f51bae0a61cb3ef35edf89dc403</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a65aaa272b2e5c4fb9ef4a471f801400a</anchor>
      <arglist>(SCIP_LPI **lpi, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>ae23bc1c98c8547a0ba03682d100365dd</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>add77293153dc03295e1782af22921906</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a2bad82670d46254daf3e923898c404d5</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a9d2be550f8b4c9549b3cec35a14bfe87</anchor>
      <arglist>(SCIP_LPI *lpi, int r, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a0a0c7059703ee01d62901f97a90f9e70</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a707f2ef39d80067dc6e58ea29201631d</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>abae81bf14cfd48a03f5c283dc28134d2</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a74e8e33e89ab5d8d4b490fe3c4a88c98</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a0b732c1d334aa020a4745e550adad4a5</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a1773cc8c068cde1f8bb0b8ba99277878</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__cpx_8c.html</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_grb.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>lpi__grb_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_ZERO</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a39b6722f72c304de61f70f30561aeed5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ABORT_ZERO</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>ab4db77491a6aef4d4ae9326030963918</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_SINGLEPACKETSIZE</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a61a8761942551e1cc6493516ce110ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DUALPACKETSIZE</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a95bb8b60ad68b9a3682d5a20e14c63a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLS_PER_PACKET</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a3e80b2ad8cd656992a2f9c981adc8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWS_PER_PACKET</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>ae3086d289ba34ee9eb88f8419a4f8e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUMINTPARAM</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a91bbe58fc774297c149f7e08a974de11</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUMDBLPARAM</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>ac2b1b998d4ad2ba90b97c858783f1afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>SCIP_SINGLEPACKET</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>ae7d2bc9e47996eea8779811dfab8c2a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>SCIP_DUALPACKET</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>afd2fb34af6687b0159dfb63042899d4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>COLPACKET</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a70d7f598e377388ae50ff1417e34bd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>ROWPACKET</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a285e06216667783fd0bd0cbcd8b4882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct GRBParam</type>
      <name>GRBPARAM</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a193f92b4f04228b18ef2b2614e7b3e83</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a65aaa272b2e5c4fb9ef4a471f801400a</anchor>
      <arglist>(SCIP_LPI **lpi, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>ae23bc1c98c8547a0ba03682d100365dd</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>add77293153dc03295e1782af22921906</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a2bad82670d46254daf3e923898c404d5</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a9d2be550f8b4c9549b3cec35a14bfe87</anchor>
      <arglist>(SCIP_LPI *lpi, int r, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a0a0c7059703ee01d62901f97a90f9e70</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a707f2ef39d80067dc6e58ea29201631d</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>abae81bf14cfd48a03f5c283dc28134d2</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a74e8e33e89ab5d8d4b490fe3c4a88c98</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a0b732c1d334aa020a4745e550adad4a5</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a1773cc8c068cde1f8bb0b8ba99277878</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__grb_8c.html</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_msk.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>lpi__msk_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>MSKCONST</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a3bbacb47eaee6da5a07e09a24e63031a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>scipmskobjsen</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a4ffda8a959d8478ff63cfa5eb4ae3fc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SENSE2MOSEK</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a83144ddc2bf3095b81181be103d49155</anchor>
      <arglist>(objsen)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MOSEK_CALL</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a5d7b4e9a27d8eae35691a4e62ecebe50</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_POSINF</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a12fac0c28594c5d17d380fd878379283</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_NEGINF</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a5c80114e75560753980d5d77727b8ea6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_PARAM_SETTING</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a411f22ac9fd8d4e38760370dd48488a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_PRINT_STAT</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>aa0315e99af782010fb5bbfc57a35fb0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_CHECK_DATA</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a7c8072cb99d467917cf110956fb0e6e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_EASY_REPRODUCE</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a11edcb5a48590b0adc6bff22884c4b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_DO_INTPNT_FEAS_CHECK</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a70fe5ec1a6d8150decc117e44c28b23b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_CHECK_STATE_TOL</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a21c4f1b7859a7c1d4013238815463c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHOW_ERRORS</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a7a4e052f8126039846d3d246b000b944</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT_ON_NUMERICAL_TROUBLES</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a4a7662a2657020ff50ae7803af4afa61</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT_ON_WARNING</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a1654a9744d660814ce0e39dc6860ef21</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORCE_MOSEK_LOG</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>acba69a85fd6ca8cbe63bd5e4a99870c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORCE_MOSEK_SUMMARY</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>afd3a1dad41dc52d17d19a53a2586e0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORCE_NO_MAXITER</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a7bdc2388fbf3621bb28558668b6e3113</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORCE_SILENCE</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>abd5b96bd381a7762ae4321f236389b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SETBACK_LIMIT</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a3dc920d5541482846ea37e7bf1394f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_CONTROLS_PRICING</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a8e23854969a5bca305b210b5eb89ff7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_CONTROLS_TOLERANCES</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>adcad0edf3a8445f9e8a9f49d3f8452c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRONGBRANCH_PRICING</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>ac2ab57241847b91b20ab708b95d75645</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUPRESS_NAME_ERROR</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a33631414f370d7cc4b49a53d5a670c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_DUAL</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a96f6d4e603539cf12e2580b507c99eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_PRIMAL</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>ae14be2bda28ba76080588c202b30d4cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_INTPNT</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a2a4f3b23e183eeb9bb5d4d8860a5bae7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WRITE_ABOVE</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>aadf4f3e35492add525d672357caef22d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEGEN_LEVEL</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a6f9f4f7171a475ff960048cc0eb1eb5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALWAYS_SOLVE_PRIMAL</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>aba99366ab4fefbe2c5a2bdc5288ffcec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLS_PER_PACKET</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a3e80b2ad8cd656992a2f9c981adc8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWS_PER_PACKET</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>ae3086d289ba34ee9eb88f8419a4f8e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>COLPACKET</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a70d7f598e377388ae50ff1417e34bd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>ROWPACKET</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a285e06216667783fd0bd0cbcd8b4882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a65aaa272b2e5c4fb9ef4a471f801400a</anchor>
      <arglist>(SCIP_LPI **lpi, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>ae23bc1c98c8547a0ba03682d100365dd</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>add77293153dc03295e1782af22921906</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a2bad82670d46254daf3e923898c404d5</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a0a0c7059703ee01d62901f97a90f9e70</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>abae81bf14cfd48a03f5c283dc28134d2</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a4b9689b714bffff577d1e85941cee9a5</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>aa800fb0fda98cd5587d75a60d04ec0d6</anchor>
      <arglist>(SCIP_LPI *lpi, int row, const SCIP_Real *binvrow, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a74e8e33e89ab5d8d4b490fe3c4a88c98</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a0b732c1d334aa020a4745e550adad4a5</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a1773cc8c068cde1f8bb0b8ba99277878</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__msk_8c.html</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_none.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>lpi__none_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>LPINAME</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a58be1127a66dd66fd311c112b7c469bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LPIINFINITY</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>ac6db33602b64d29282acc04b4733b868</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a65aaa272b2e5c4fb9ef4a471f801400a</anchor>
      <arglist>(SCIP_LPI **lpi, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>ae23bc1c98c8547a0ba03682d100365dd</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>add77293153dc03295e1782af22921906</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a2bad82670d46254daf3e923898c404d5</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a9d2be550f8b4c9549b3cec35a14bfe87</anchor>
      <arglist>(SCIP_LPI *lpi, int r, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a0a0c7059703ee01d62901f97a90f9e70</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a707f2ef39d80067dc6e58ea29201631d</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>abae81bf14cfd48a03f5c283dc28134d2</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a74e8e33e89ab5d8d4b490fe3c4a88c98</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a0b732c1d334aa020a4745e550adad4a5</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a1773cc8c068cde1f8bb0b8ba99277878</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__none_8c.html</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_qso.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>lpi__qso_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>COLS_PER_PACKET</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a3e80b2ad8cd656992a2f9c981adc8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWS_PER_PACKET</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>ae3086d289ba34ee9eb88f8419a4f8e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QS_TESTG</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a85b5308f5dd4c511a38f2e252ed5e624</anchor>
      <arglist>(A, B,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QS_ERROR</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>aee56c3aec84b846aa922e9f123c83db3</anchor>
      <arglist>(A,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QS_RETURN</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>ac428b82f03cafa4bb0d80bee8a5beef4</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>QS_CONDRET</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a9fd95784f0b954994d7c1cec0d8c6d6a</anchor>
      <arglist>(A)</arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>COLPACKET</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a70d7f598e377388ae50ff1417e34bd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>ROWPACKET</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a285e06216667783fd0bd0cbcd8b4882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a65aaa272b2e5c4fb9ef4a471f801400a</anchor>
      <arglist>(SCIP_LPI **lpi, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>ae23bc1c98c8547a0ba03682d100365dd</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>add77293153dc03295e1782af22921906</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a2bad82670d46254daf3e923898c404d5</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a9d2be550f8b4c9549b3cec35a14bfe87</anchor>
      <arglist>(SCIP_LPI *lpi, int r, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a0a0c7059703ee01d62901f97a90f9e70</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a707f2ef39d80067dc6e58ea29201631d</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>abae81bf14cfd48a03f5c283dc28134d2</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a74e8e33e89ab5d8d4b490fe3c4a88c98</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a0b732c1d334aa020a4745e550adad4a5</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a1773cc8c068cde1f8bb0b8ba99277878</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__qso_8c.html</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_spx.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>lpi__spx_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>AUTOPRICING_ITERSWITCH</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a676e311311c95fd99e0259f27728226a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRONGBRANCH_RESTOREBASIS</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a027fe53ddc0e5b6b26b39e88b327ba61</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOPLEX_TRY</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a90176d08af3f1f5d039fdcc1da1bd8a2</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOPLEX_TRY_ABORT</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>adf442243d6e29d4324dfcf9f30061013</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLS_PER_PACKET</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a3e80b2ad8cd656992a2f9c981adc8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWS_PER_PACKET</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>ae3086d289ba34ee9eb88f8419a4f8e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>COLPACKET</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a70d7f598e377388ae50ff1417e34bd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>ROWPACKET</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a285e06216667783fd0bd0cbcd8b4882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a65aaa272b2e5c4fb9ef4a471f801400a</anchor>
      <arglist>(SCIP_LPI **lpi, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>afe0e8dc7b2954cbaf84a2f92d37bdd74</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>ac3dec1f841744a96c8ae0a6749b5f99c</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>aa535703a4b6b3ae2bce4b78d90943a07</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a9d2be550f8b4c9549b3cec35a14bfe87</anchor>
      <arglist>(SCIP_LPI *lpi, int r, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a0a0c7059703ee01d62901f97a90f9e70</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a707f2ef39d80067dc6e58ea29201631d</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>abae81bf14cfd48a03f5c283dc28134d2</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>af59f56532adbbb974fc3a08280aedf4f</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>aa11747a31cdd7efe4bfcd32b82d6b325</anchor>
      <arglist>(SCIP_LPI *)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a8c50925f0993643dc0d04e0d1bbe848a</anchor>
      <arglist>(SCIP_LPI *, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__spx_8cpp.html</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_spx121.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>lpi__spx121_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>NDEBUG</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a8de3ed741dadc9c979a4ff17c0a9116e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLS_PER_PACKET</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a3e80b2ad8cd656992a2f9c981adc8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWS_PER_PACKET</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>ae3086d289ba34ee9eb88f8419a4f8e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>COLPACKET</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a70d7f598e377388ae50ff1417e34bd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>ROWPACKET</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a285e06216667783fd0bd0cbcd8b4882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a65aaa272b2e5c4fb9ef4a471f801400a</anchor>
      <arglist>(SCIP_LPI **lpi, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>afe0e8dc7b2954cbaf84a2f92d37bdd74</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>ac3dec1f841744a96c8ae0a6749b5f99c</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>aa535703a4b6b3ae2bce4b78d90943a07</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a9d2be550f8b4c9549b3cec35a14bfe87</anchor>
      <arglist>(SCIP_LPI *lpi, int r, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a0a0c7059703ee01d62901f97a90f9e70</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a707f2ef39d80067dc6e58ea29201631d</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>abae81bf14cfd48a03f5c283dc28134d2</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>af59f56532adbbb974fc3a08280aedf4f</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a330da65ed4cac86978673ab3bd5754fb</anchor>
      <arglist>(SCIP_LPI *, const char *)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>ae70cf308dbd2929dd88ebc2acbeacd31</anchor>
      <arglist>(SCIP_LPI *, const char *)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>aa11747a31cdd7efe4bfcd32b82d6b325</anchor>
      <arglist>(SCIP_LPI *)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a8c50925f0993643dc0d04e0d1bbe848a</anchor>
      <arglist>(SCIP_LPI *, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__spx121_8cpp.html</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_spx132.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>lpi__spx132_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>NDEBUG</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a8de3ed741dadc9c979a4ff17c0a9116e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLS_PER_PACKET</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a3e80b2ad8cd656992a2f9c981adc8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWS_PER_PACKET</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>ae3086d289ba34ee9eb88f8419a4f8e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>COLPACKET</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a70d7f598e377388ae50ff1417e34bd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>ROWPACKET</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a285e06216667783fd0bd0cbcd8b4882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a65aaa272b2e5c4fb9ef4a471f801400a</anchor>
      <arglist>(SCIP_LPI **lpi, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>afe0e8dc7b2954cbaf84a2f92d37bdd74</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>ac3dec1f841744a96c8ae0a6749b5f99c</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>aa535703a4b6b3ae2bce4b78d90943a07</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a9d2be550f8b4c9549b3cec35a14bfe87</anchor>
      <arglist>(SCIP_LPI *lpi, int r, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a0a0c7059703ee01d62901f97a90f9e70</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a707f2ef39d80067dc6e58ea29201631d</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>abae81bf14cfd48a03f5c283dc28134d2</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>af59f56532adbbb974fc3a08280aedf4f</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a330da65ed4cac86978673ab3bd5754fb</anchor>
      <arglist>(SCIP_LPI *, const char *)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>ae70cf308dbd2929dd88ebc2acbeacd31</anchor>
      <arglist>(SCIP_LPI *, const char *)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>aa11747a31cdd7efe4bfcd32b82d6b325</anchor>
      <arglist>(SCIP_LPI *)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a8c50925f0993643dc0d04e0d1bbe848a</anchor>
      <arglist>(SCIP_LPI *, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__spx132_8cpp.html</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lpi_xprs.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>lpi__xprs_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>OLDRAYCODE</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a1c1d3b5ed1c117660c84c7dd37c7b7ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPRS_LPQUICKPRESOLVE</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a53b6890741ebbea8e7a77facedaa7c42</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPRS_LP_OPTIMAL_SCALEDINFEAS</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a78ff2d2dfbf39a02de822c512c55ba38</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_ZEROE</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a66c58edcb45e2c166fadcc62935b6fcd</anchor>
      <arglist>(p, x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_ZEROW</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a6a85871a310915413295e40614592855</anchor>
      <arglist>(p, x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_ZEROLPIE</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a4b6bdca77e016b058bf89347e98c1d57</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_ZEROLPIW</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>af462776e73aa6575f1e2498909c02b63</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_ZEROPLPIE</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>aad97b4463b5ed6f81a1f24095a698437</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_ZERO</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a26b10813d170a85947d96dc6f8a52e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ABORT_ZERO</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>ab4db77491a6aef4d4ae9326030963918</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLS_PER_PACKET</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a3e80b2ad8cd656992a2f9c981adc8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWS_PER_PACKET</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>ae3086d289ba34ee9eb88f8419a4f8e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>COLPACKET</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a70d7f598e377388ae50ff1417e34bd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCIP_DUALPACKET</type>
      <name>ROWPACKET</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a285e06216667783fd0bd0cbcd8b4882a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int XPRS_CC</type>
      <name>XPRSpostsolve</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>aa13b685a14ebe1e3e74245153a120905</anchor>
      <arglist>(XPRSprob prob)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverName</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>aed7c57c93675aae2562abab53b487ce7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPlpiGetSolverDesc</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a6cfc10a9902214c1ac825998bebdea19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPlpiGetSolverPointer</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>ac8b0874105d4a69fd4e35455d488edb3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiCreate</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a65aaa272b2e5c4fb9ef4a471f801400a</anchor>
      <arglist>(SCIP_LPI **lpi, const char *name, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFree</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a6dfadd74b4f72eea58d0946ec9ea6f60</anchor>
      <arglist>(SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiLoadColLP</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>ae23bc1c98c8547a0ba03682d100365dd</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddCols</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>add77293153dc03295e1782af22921906</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelCols</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>af651ff93b2be704cacb27c13b24ab311</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelColset</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>ac93976edb5a40906de3c2163b2fafec0</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiAddRows</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a2bad82670d46254daf3e923898c404d5</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRows</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a95a88cc92b9c3061762849aeb2edc9ff</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiDelRowset</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>af7385b74de163f5ae25b77e99c7bdc1a</anchor>
      <arglist>(SCIP_LPI *lpi, int *dstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiClear</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a18664e9f784a12522aa9ec6e775e5a15</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgBounds</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a69472179ed0e902cb865b8bd3941c461</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgSides</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a00fa12a201791dbba7d4b17a75fe7ae2</anchor>
      <arglist>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgCoef</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>aff2b648673b8baac9903c236a97c267b</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObjsen</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a0d794ce162ec1c45eb776baa2ffdc79c</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiChgObj</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a8f18465d14a5d1116c1dc8ea6cf90ddb</anchor>
      <arglist>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleRow</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>af94ca6a608b8e0be96158d78270b2715</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiScaleCol</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a598ccc37a344e88c584b37691f162432</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNRows</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>afc4ba497c8fef592df0c5bf7745bf9d8</anchor>
      <arglist>(SCIP_LPI *lpi, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNCols</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>af0f0eab6882439ab9e263d6754c102f3</anchor>
      <arglist>(SCIP_LPI *lpi, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetNNonz</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a4e84473a9742d228d1112cf94e0337e7</anchor>
      <arglist>(SCIP_LPI *lpi, int *nnonz)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCols</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a9b718ef73cb5d6544472fb05f2193d37</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRows</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>aa925f44c4f2e5640b79ff87f8166d92e</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetColNames</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>aa01800088106fccc11758d86646a1933</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRowNames</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>ab84a1811166e562112166eeddafe5f08</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObj</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>accf7c7a0ba8f375dbfa9bce872586951</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBounds</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a534fd30b49c755aea9b96a0365ee41b0</anchor>
      <arglist>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSides</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>abd761e9fb6a1dd346a08c94a50192d8b</anchor>
      <arglist>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetCoef</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a7ae0750d24c1e5ad1c719ca4a601b511</anchor>
      <arglist>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolvePrimal</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>adff9cd01f05724d2e00808ebd09c8e93</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveDual</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>ad87b0da429ef0a5ef34ccdd01cc2309d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSolveBarrier</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>aaed3d89975ea9d3a6a79f03c1361d9b5</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool crossover)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStartStrongbranch</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a61eb2de700a5b2ca02c55a6f206af5df</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiEndStrongbranch</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>abb4fffe6db4fc82590ffb3231a4e314c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchFrac</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a4b3e0e444fa2cba71360126834df07b4</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesFrac</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a7aa759face9cb33420e56984df7b6557</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchInt</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a5172db5f9ebd4ad8b1da84ce8c00bff7</anchor>
      <arglist>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiStrongbranchesInt</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>abdfa4cbbbfc871eb382b8090167f715e</anchor>
      <arglist>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiWasSolved</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>aaa0c5c0be2bd96fce205e68f7d051abe</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSolFeasibility</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a61efb09a57b1279d91619c36cad3d597</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsPrimalRay</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a2562db03b64bf6ef2789e4edf3cc31a3</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasPrimalRay</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a91cb0382fe11412dfa127df4cc9f8e9a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalUnbounded</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a698fec903ce3546e8066a3988ee906ee</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalInfeasible</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>ad2c1ad0f846c5827b5a2050ab13eba0f</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsPrimalFeasible</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a824080a74642700e0919806405d4dd69</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiExistsDualRay</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a21939ccf03835cce5a9a449b6c43665b</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasDualRay</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>ac6738fca43ff0cbb9027560f18bd764c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualUnbounded</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>ae2cd5f0afa5f5940c9d7bab6f04b184e</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualInfeasible</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a348c42072a5aad88210e9d688b4d6a1c</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsDualFeasible</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a8457b3a26f7595f3390f7b34ab443fd4</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsOptimal</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>ab66f1eae0b448c155f0feaffa7bdda57</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsStable</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>af04aa49d1337f5007cc0d78625d2dd4d</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsObjlimExc</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a0d4fca883c08a32af088280a78ca3ef2</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsIterlimExc</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a689c99183c7e0779c50f9aef63c79123</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsTimelimExc</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a8ac20384dbd857173c8dfe0dc37f7d6a</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPlpiGetInternalStatus</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a5fbb9e1f86a8425b85760f01692f85aa</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiIgnoreInstability</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a6b24f7dd3dfac27d08f1cfc777e56a8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetObjval</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a5548fcdd7c4e4a3f6d542cd51da27c82</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetSol</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>ac5a2315c14e99b919626de4170687227</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetPrimalRay</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a2d3ab14c33312daf6f0c51e7eba4ae95</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *ray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetDualfarkas</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a54ee13d012fb992394c0828166c2fea3</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIterations</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>ae37bfbea024ddb8232827aeedc84afe0</anchor>
      <arglist>(SCIP_LPI *lpi, int *iterations)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBase</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a258aa72f3b645b140c543f0fc7f3f37a</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetBase</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a7d9cb745987d79fb87f60739a423c833</anchor>
      <arglist>(SCIP_LPI *lpi, int *cstat, int *rstat)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBasisInd</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>ae40a43f062d28623d57653ddb4719fca</anchor>
      <arglist>(SCIP_LPI *lpi, int *bind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvRow</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a4b9689b714bffff577d1e85941cee9a5</anchor>
      <arglist>(SCIP_LPI *lpi, int row, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvCol</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a0a0c7059703ee01d62901f97a90f9e70</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvARow</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>ad1d5d3d7169a6195374307c624001faf</anchor>
      <arglist>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow_in, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetBInvACol</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>abae81bf14cfd48a03f5c283dc28134d2</anchor>
      <arglist>(SCIP_LPI *lpi, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetState</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>afe1bc961d0f91cad7222870724175e21</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetState</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a74e8e33e89ab5d8d4b490fe3c4a88c98</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiFreeState</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>acfee2d2ea719f54192a11c1e80f5e61e</anchor>
      <arglist>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiHasStateBasis</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a8cf134c068da15fe85dfad3d3d0aae2b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadState</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a29c773d7e7763517c0952b9eee9ed7ec</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteState</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a6b360b8eb706948179cc3b46fa4df372</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetIntpar</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a2d82a67789be908b161295f41d02ba8b</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetIntpar</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a8dac6dec76901acef9c18397582c5e9a</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiGetRealpar</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a07259db5fb0599d063fa4973dc3d5d8e</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiSetRealpar</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a468d983f0e77aa23e9563d4c1c1e3db8</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPlpiInfinity</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a0b732c1d334aa020a4745e550adad4a5</anchor>
      <arglist>(SCIP_LPI *lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPlpiIsInfinity</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a1773cc8c068cde1f8bb0b8ba99277878</anchor>
      <arglist>(SCIP_LPI *lpi, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiReadLP</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a83b58a451300ba484bb9314b35edc63f</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlpiWriteLP</name>
      <anchorfile>lpi__xprs_8c.html</anchorfile>
      <anchor>a311a14142841041e24d522b281124f57</anchor>
      <arglist>(SCIP_LPI *lpi, const char *fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nlpi_ipopt.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/nlpi/</path>
    <filename>nlpi__ipopt_8cpp</filename>
    <includes id="nlpi__ipopt_8h" name="nlpi_ipopt.h" local="yes" imported="no">nlpi/nlpi_ipopt.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>NLPI_NAME</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>a764c70ac24159fef7443b6be74c5fb58</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NLPI_DESC</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>af77e7e6707cacf80be2bff484a140af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NLPI_PRIORITY</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>a16ee227103a1fcd15ac5c5af27dc15dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PRINTLEVEL</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>a0841e09d9c86559cbb709441bcdd1109</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXITER</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>af4493f48fbcaf205d26ffefc4b8e7de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXPERTURB</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>a1e8cc6be99b1b1efa8fca029c3a0c574</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_NLPIGETPROBLEMPOINTER</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>aa19e348bf0e0c6f8d35c185c59c00241</anchor>
      <arglist>(nlpiGetProblemPointerIpopt)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateNlpSolverIpopt</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>a47fd0556bcabf47b634e428d2b9bd784</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_NLPI **nlpi)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPgetSolverNameIpopt</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>ae21683ae568166cb905c5d12edf61695</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPgetSolverDescIpopt</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>aa80725c6aad875e2676e73ddc8a7eb58</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisIpoptAvailableIpopt</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>ade74e40bc07334d652c4838a79a721c9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPgetIpoptApplicationPointerIpopt</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>af49296b500550dc219d4ca1996c2358b</anchor>
      <arglist>(SCIP_NLPIPROBLEM *nlpiproblem)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPgetNlpiOracleIpopt</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>a0462ad0a5c02962e08454de050415fe4</anchor>
      <arglist>(SCIP_NLPIPROBLEM *nlpiproblem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>a40d3c60be9123e529d0b9b51581cede2</anchor>
      <arglist>(dsyev, DSYEV)(char *jobz</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>LapackDsyev</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>a77233f4a5b0792b207842fdc86e7dc44</anchor>
      <arglist>(SCIP_Bool computeeigenvectors, int N, SCIP_Real *a, SCIP_Real *w)</arglist>
    </member>
    <member kind="variable">
      <type>void char *</type>
      <name>uplo</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>a550156687e65eb99a4363cf82cd562e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void char int *</type>
      <name>n</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>a410bf8b836b57e4b845833fe84d7f6cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void char int double *</type>
      <name>A</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>a8c74330c6f0ee81a25bc6a04b9fe2249</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void char int double int *</type>
      <name>ldA</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>a18cca3937acf4316f2ed338514872b6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void char int double int double *</type>
      <name>W</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>a53843a241957b1fa420e1b768485a30e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void char int double int double double *</type>
      <name>WORK</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>ac7dd934e47e9201f376b0a9ee58fc2b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void char int double int double double int *</type>
      <name>LWORK</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>a347d74c6d5d966b0259ce711f9fc0bf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void char int double int double double int int *</type>
      <name>info</name>
      <anchorfile>nlpi__ipopt_8cpp.html</anchorfile>
      <anchor>ab246860e913c8cad678ff7db8bb073e0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nlpi_ipopt.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/nlpi/</path>
    <filename>nlpi__ipopt_8h</filename>
    <includes id="type__nlpi_8h" name="type_nlpi.h" local="yes" imported="no">nlpi/type_nlpi.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateNlpSolverIpopt</name>
      <anchorfile>nlpi__ipopt_8h.html</anchorfile>
      <anchor>a47fd0556bcabf47b634e428d2b9bd784</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_NLPI **nlpi)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPgetSolverNameIpopt</name>
      <anchorfile>nlpi__ipopt_8h.html</anchorfile>
      <anchor>ae21683ae568166cb905c5d12edf61695</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPgetSolverDescIpopt</name>
      <anchorfile>nlpi__ipopt_8h.html</anchorfile>
      <anchor>aa80725c6aad875e2676e73ddc8a7eb58</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisIpoptAvailableIpopt</name>
      <anchorfile>nlpi__ipopt_8h.html</anchorfile>
      <anchor>ade74e40bc07334d652c4838a79a721c9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPgetIpoptApplicationPointerIpopt</name>
      <anchorfile>nlpi__ipopt_8h.html</anchorfile>
      <anchor>af49296b500550dc219d4ca1996c2358b</anchor>
      <arglist>(SCIP_NLPIPROBLEM *nlpiproblem)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPgetNlpiOracleIpopt</name>
      <anchorfile>nlpi__ipopt_8h.html</anchorfile>
      <anchor>a0462ad0a5c02962e08454de050415fe4</anchor>
      <arglist>(SCIP_NLPIPROBLEM *nlpiproblem)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>LapackDsyev</name>
      <anchorfile>nlpi__ipopt_8h.html</anchorfile>
      <anchor>a77233f4a5b0792b207842fdc86e7dc44</anchor>
      <arglist>(SCIP_Bool computeeigenvectors, int N, SCIP_Real *a, SCIP_Real *w)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nlpi_ipopt_dummy.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/nlpi/</path>
    <filename>nlpi__ipopt__dummy_8c</filename>
    <includes id="nlpi__ipopt_8h" name="nlpi_ipopt.h" local="yes" imported="no">nlpi/nlpi_ipopt.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateNlpSolverIpopt</name>
      <anchorfile>nlpi__ipopt__dummy_8c.html</anchorfile>
      <anchor>a47fd0556bcabf47b634e428d2b9bd784</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_NLPI **nlpi)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPgetSolverNameIpopt</name>
      <anchorfile>nlpi__ipopt__dummy_8c.html</anchorfile>
      <anchor>ae21683ae568166cb905c5d12edf61695</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPgetSolverDescIpopt</name>
      <anchorfile>nlpi__ipopt__dummy_8c.html</anchorfile>
      <anchor>aa80725c6aad875e2676e73ddc8a7eb58</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisIpoptAvailableIpopt</name>
      <anchorfile>nlpi__ipopt__dummy_8c.html</anchorfile>
      <anchor>ade74e40bc07334d652c4838a79a721c9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPgetIpoptApplicationPointerIpopt</name>
      <anchorfile>nlpi__ipopt__dummy_8c.html</anchorfile>
      <anchor>af49296b500550dc219d4ca1996c2358b</anchor>
      <arglist>(SCIP_NLPIPROBLEM *nlpiproblem)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPgetNlpiOracleIpopt</name>
      <anchorfile>nlpi__ipopt__dummy_8c.html</anchorfile>
      <anchor>a0462ad0a5c02962e08454de050415fe4</anchor>
      <arglist>(SCIP_NLPIPROBLEM *nlpiproblem)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>LapackDsyev</name>
      <anchorfile>nlpi__ipopt__dummy_8c.html</anchorfile>
      <anchor>a77233f4a5b0792b207842fdc86e7dc44</anchor>
      <arglist>(SCIP_Bool computeeigenvectors, int N, SCIP_Real *a, SCIP_Real *w)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nodesel_bfs.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>nodesel__bfs_8c</filename>
    <includes id="nodesel__bfs_8h" name="nodesel_bfs.h" local="yes" imported="no">scip/nodesel_bfs.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_NAME</name>
      <anchorfile>nodesel__bfs_8c.html</anchorfile>
      <anchor>a424d0f473e269d82891f55dca81d4bce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_DESC</name>
      <anchorfile>nodesel__bfs_8c.html</anchorfile>
      <anchor>ab7167b2f61b1becd7f517fe70cc928b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_STDPRIORITY</name>
      <anchorfile>nodesel__bfs_8c.html</anchorfile>
      <anchor>ab3388679aa9a7ac88dfd3239271fef93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_MEMSAVEPRIORITY</name>
      <anchorfile>nodesel__bfs_8c.html</anchorfile>
      <anchor>aa32e8359d27f1dd35c67eef8d4a7a900</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINPLUNGEDEPTH</name>
      <anchorfile>nodesel__bfs_8c.html</anchorfile>
      <anchor>ac296559c3d6ffa2427e869f3d295c153</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXPLUNGEDEPTH</name>
      <anchorfile>nodesel__bfs_8c.html</anchorfile>
      <anchor>af7307445097333223ca02c1141894718</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXPLUNGEQUOT</name>
      <anchorfile>nodesel__bfs_8c.html</anchorfile>
      <anchor>a54aacd7e3580d9c4603de390af802c14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselInitBfs</name>
      <anchorfile>nodesel__bfs_8c.html</anchorfile>
      <anchor>afa74528dccd3ba5ebbb5b79af79e44db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselExitBfs</name>
      <anchorfile>nodesel__bfs_8c.html</anchorfile>
      <anchor>a3315a627f164510c3e7e9ee0f6ca9aab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselInitsolBfs</name>
      <anchorfile>nodesel__bfs_8c.html</anchorfile>
      <anchor>a24f85c9d0f92e703fafcc6933cb3a7e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselExitsolBfs</name>
      <anchorfile>nodesel__bfs_8c.html</anchorfile>
      <anchor>ae84d9a14f76e6c1bbdb9e4b0497bfc43</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselBfs</name>
      <anchorfile>nodesel__bfs_8c.html</anchorfile>
      <anchor>aff9135930a9455940d30703aa412e2f6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nodesel_bfs.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>nodesel__bfs_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselBfs</name>
      <anchorfile>nodesel__bfs_8h.html</anchorfile>
      <anchor>aff9135930a9455940d30703aa412e2f6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nodesel_dfs.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>nodesel__dfs_8c</filename>
    <includes id="nodesel__dfs_8h" name="nodesel_dfs.h" local="yes" imported="no">scip/nodesel_dfs.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_NAME</name>
      <anchorfile>nodesel__dfs_8c.html</anchorfile>
      <anchor>a424d0f473e269d82891f55dca81d4bce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_DESC</name>
      <anchorfile>nodesel__dfs_8c.html</anchorfile>
      <anchor>ab7167b2f61b1becd7f517fe70cc928b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_STDPRIORITY</name>
      <anchorfile>nodesel__dfs_8c.html</anchorfile>
      <anchor>ab3388679aa9a7ac88dfd3239271fef93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_MEMSAVEPRIORITY</name>
      <anchorfile>nodesel__dfs_8c.html</anchorfile>
      <anchor>aa32e8359d27f1dd35c67eef8d4a7a900</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselFreeDfs</name>
      <anchorfile>nodesel__dfs_8c.html</anchorfile>
      <anchor>a398abb5340a883352a8bd4d732e30b9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselInitDfs</name>
      <anchorfile>nodesel__dfs_8c.html</anchorfile>
      <anchor>ace3e3bfcb95657269b562fa440a55fa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselExitDfs</name>
      <anchorfile>nodesel__dfs_8c.html</anchorfile>
      <anchor>a932bc437700f16ba441a0e383ccf7a38</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselInitsolDfs</name>
      <anchorfile>nodesel__dfs_8c.html</anchorfile>
      <anchor>af8257612d9b7e7f43c53784a09e7c38f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselExitsolDfs</name>
      <anchorfile>nodesel__dfs_8c.html</anchorfile>
      <anchor>a41163caa0dae3e8a3c554b2669276769</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselDfs</name>
      <anchorfile>nodesel__dfs_8c.html</anchorfile>
      <anchor>a1da85e975092847abb095859bc5f9b43</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nodesel_dfs.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>nodesel__dfs_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselDfs</name>
      <anchorfile>nodesel__dfs_8h.html</anchorfile>
      <anchor>a1da85e975092847abb095859bc5f9b43</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nodesel_estimate.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>nodesel__estimate_8c</filename>
    <includes id="nodesel__estimate_8h" name="nodesel_estimate.h" local="yes" imported="no">scip/nodesel_estimate.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_NAME</name>
      <anchorfile>nodesel__estimate_8c.html</anchorfile>
      <anchor>a424d0f473e269d82891f55dca81d4bce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_DESC</name>
      <anchorfile>nodesel__estimate_8c.html</anchorfile>
      <anchor>ab7167b2f61b1becd7f517fe70cc928b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_STDPRIORITY</name>
      <anchorfile>nodesel__estimate_8c.html</anchorfile>
      <anchor>ab3388679aa9a7ac88dfd3239271fef93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_MEMSAVEPRIORITY</name>
      <anchorfile>nodesel__estimate_8c.html</anchorfile>
      <anchor>aa32e8359d27f1dd35c67eef8d4a7a900</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINPLUNGEDEPTH</name>
      <anchorfile>nodesel__estimate_8c.html</anchorfile>
      <anchor>ac296559c3d6ffa2427e869f3d295c153</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXPLUNGEDEPTH</name>
      <anchorfile>nodesel__estimate_8c.html</anchorfile>
      <anchor>af7307445097333223ca02c1141894718</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXPLUNGEQUOT</name>
      <anchorfile>nodesel__estimate_8c.html</anchorfile>
      <anchor>a54aacd7e3580d9c4603de390af802c14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BESTNODEFREQ</name>
      <anchorfile>nodesel__estimate_8c.html</anchorfile>
      <anchor>a1b443b9a92d5d4c3c922ea713ea62cfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselInitEstimate</name>
      <anchorfile>nodesel__estimate_8c.html</anchorfile>
      <anchor>a4ed03fd410087088d5eef904100e7a32</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselExitEstimate</name>
      <anchorfile>nodesel__estimate_8c.html</anchorfile>
      <anchor>a7cdec76a0bebeedcb94999cdc66598cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselInitsolEstimate</name>
      <anchorfile>nodesel__estimate_8c.html</anchorfile>
      <anchor>a2145de8b6e738adcaa91dd401fa6617e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselExitsolEstimate</name>
      <anchorfile>nodesel__estimate_8c.html</anchorfile>
      <anchor>ac88cf6d262a611f4581ff25ad6c6c9f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselEstimate</name>
      <anchorfile>nodesel__estimate_8c.html</anchorfile>
      <anchor>a41df8cebd6b37634851b27c4e9afa6ec</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nodesel_estimate.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>nodesel__estimate_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselEstimate</name>
      <anchorfile>nodesel__estimate_8h.html</anchorfile>
      <anchor>a41df8cebd6b37634851b27c4e9afa6ec</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nodesel_hybridestim.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>nodesel__hybridestim_8c</filename>
    <includes id="nodesel__hybridestim_8h" name="nodesel_hybridestim.h" local="yes" imported="no">scip/nodesel_hybridestim.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_NAME</name>
      <anchorfile>nodesel__hybridestim_8c.html</anchorfile>
      <anchor>a424d0f473e269d82891f55dca81d4bce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_DESC</name>
      <anchorfile>nodesel__hybridestim_8c.html</anchorfile>
      <anchor>ab7167b2f61b1becd7f517fe70cc928b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_STDPRIORITY</name>
      <anchorfile>nodesel__hybridestim_8c.html</anchorfile>
      <anchor>ab3388679aa9a7ac88dfd3239271fef93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_MEMSAVEPRIORITY</name>
      <anchorfile>nodesel__hybridestim_8c.html</anchorfile>
      <anchor>aa32e8359d27f1dd35c67eef8d4a7a900</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINPLUNGEDEPTH</name>
      <anchorfile>nodesel__hybridestim_8c.html</anchorfile>
      <anchor>ac296559c3d6ffa2427e869f3d295c153</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXPLUNGEDEPTH</name>
      <anchorfile>nodesel__hybridestim_8c.html</anchorfile>
      <anchor>af7307445097333223ca02c1141894718</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXPLUNGEQUOT</name>
      <anchorfile>nodesel__hybridestim_8c.html</anchorfile>
      <anchor>a54aacd7e3580d9c4603de390af802c14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BESTNODEFREQ</name>
      <anchorfile>nodesel__hybridestim_8c.html</anchorfile>
      <anchor>a1b443b9a92d5d4c3c922ea713ea62cfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ESTIMWEIGHT</name>
      <anchorfile>nodesel__hybridestim_8c.html</anchorfile>
      <anchor>ab3cddd72645ae7e3ef36e02c9f079a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselInitHybridestim</name>
      <anchorfile>nodesel__hybridestim_8c.html</anchorfile>
      <anchor>a58b33fcac9af4fb77fcf49ea4e10072e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselExitHybridestim</name>
      <anchorfile>nodesel__hybridestim_8c.html</anchorfile>
      <anchor>a6cc5c0e3c3b14cd9980b1bdb07449ff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselInitsolHybridestim</name>
      <anchorfile>nodesel__hybridestim_8c.html</anchorfile>
      <anchor>a296568c3c3e46a21060fed88cde8fb50</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselExitsolHybridestim</name>
      <anchorfile>nodesel__hybridestim_8c.html</anchorfile>
      <anchor>ad2ef0957315d0c460c55ed0fcfaf5af3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselHybridestim</name>
      <anchorfile>nodesel__hybridestim_8c.html</anchorfile>
      <anchor>af69387a465ea4d66b62fd8283138e77e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nodesel_hybridestim.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>nodesel__hybridestim_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselHybridestim</name>
      <anchorfile>nodesel__hybridestim_8h.html</anchorfile>
      <anchor>af69387a465ea4d66b62fd8283138e77e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nodesel_restartdfs.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>nodesel__restartdfs_8c</filename>
    <includes id="nodesel__restartdfs_8h" name="nodesel_restartdfs.h" local="yes" imported="no">scip/nodesel_restartdfs.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_NAME</name>
      <anchorfile>nodesel__restartdfs_8c.html</anchorfile>
      <anchor>a424d0f473e269d82891f55dca81d4bce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_DESC</name>
      <anchorfile>nodesel__restartdfs_8c.html</anchorfile>
      <anchor>ab7167b2f61b1becd7f517fe70cc928b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_STDPRIORITY</name>
      <anchorfile>nodesel__restartdfs_8c.html</anchorfile>
      <anchor>ab3388679aa9a7ac88dfd3239271fef93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NODESEL_MEMSAVEPRIORITY</name>
      <anchorfile>nodesel__restartdfs_8c.html</anchorfile>
      <anchor>aa32e8359d27f1dd35c67eef8d4a7a900</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SELECTBESTFREQ</name>
      <anchorfile>nodesel__restartdfs_8c.html</anchorfile>
      <anchor>a2b3191da29c29a13a991a7aa67f4e1b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselInitRestartdfs</name>
      <anchorfile>nodesel__restartdfs_8c.html</anchorfile>
      <anchor>a24161edfdb81392c633e3193f77e43fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselExitRestartdfs</name>
      <anchorfile>nodesel__restartdfs_8c.html</anchorfile>
      <anchor>a4eca0ae31f118aba6633e009aecfcb40</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nodeselExitsolRestartdfs</name>
      <anchorfile>nodesel__restartdfs_8c.html</anchorfile>
      <anchor>a01ff2febb27e4f85d85971648faa34ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselRestartdfs</name>
      <anchorfile>nodesel__restartdfs_8c.html</anchorfile>
      <anchor>a91a31460d586f75b3f960e9ed7622290</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nodesel_restartdfs.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>nodesel__restartdfs_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodeselRestartdfs</name>
      <anchorfile>nodesel__restartdfs_8h.html</anchorfile>
      <anchor>a91a31460d586f75b3f960e9ed7622290</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objbranchrule.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objbranchrule_8cpp</filename>
    <includes id="objbranchrule_8h" name="objbranchrule.h" local="yes" imported="no">objbranchrule.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjBranchrule</name>
      <anchorfile>objbranchrule_8cpp.html</anchorfile>
      <anchor>a49b8d8910ae8e9896a830041ca3e046a</anchor>
      <arglist>(SCIP *scip, scip::ObjBranchrule *objbranchrule, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjBranchrule *</type>
      <name>SCIPfindObjBranchrule</name>
      <anchorfile>objbranchrule_8cpp.html</anchorfile>
      <anchor>a1af86d66171d2c597153fe69ca66ed4f</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjBranchrule *</type>
      <name>SCIPgetObjBranchrule</name>
      <anchorfile>objbranchrule_8cpp.html</anchorfile>
      <anchor>ad0e4efbd88ad7c10a2e51c6d4654e7e3</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objbranchrule.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objbranchrule_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjBranchrule</name>
      <anchorfile>objbranchrule_8h.html</anchorfile>
      <anchor>a49b8d8910ae8e9896a830041ca3e046a</anchor>
      <arglist>(SCIP *scip, scip::ObjBranchrule *objbranchrule, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjBranchrule *</type>
      <name>SCIPfindObjBranchrule</name>
      <anchorfile>objbranchrule_8h.html</anchorfile>
      <anchor>a1af86d66171d2c597153fe69ca66ed4f</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjBranchrule *</type>
      <name>SCIPgetObjBranchrule</name>
      <anchorfile>objbranchrule_8h.html</anchorfile>
      <anchor>ad0e4efbd88ad7c10a2e51c6d4654e7e3</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objcloneable.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objcloneable_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
  </compound>
  <compound kind="file">
    <name>objconshdlr.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objconshdlr_8cpp</filename>
    <includes id="objconshdlr_8h" name="objconshdlr.h" local="yes" imported="no">objconshdlr.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjConshdlr</name>
      <anchorfile>objconshdlr_8cpp.html</anchorfile>
      <anchor>ab1d721734a93a449c1c4d50e0e285824</anchor>
      <arglist>(SCIP *scip, scip::ObjConshdlr *objconshdlr, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjConshdlr *</type>
      <name>SCIPfindObjConshdlr</name>
      <anchorfile>objconshdlr_8cpp.html</anchorfile>
      <anchor>aad2f76b564408a5418a355df34644ff4</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjConshdlr *</type>
      <name>SCIPgetObjConshdlr</name>
      <anchorfile>objconshdlr_8cpp.html</anchorfile>
      <anchor>ab5fc1b1c7ad83e2bf42904d70cea432d</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objconshdlr.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objconshdlr_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objprobcloneable_8h" name="objprobcloneable.h" local="yes" imported="no">objscip/objprobcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjConshdlr</name>
      <anchorfile>objconshdlr_8h.html</anchorfile>
      <anchor>ab1d721734a93a449c1c4d50e0e285824</anchor>
      <arglist>(SCIP *scip, scip::ObjConshdlr *objconshdlr, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjConshdlr *</type>
      <name>SCIPfindObjConshdlr</name>
      <anchorfile>objconshdlr_8h.html</anchorfile>
      <anchor>aad2f76b564408a5418a355df34644ff4</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjConshdlr *</type>
      <name>SCIPgetObjConshdlr</name>
      <anchorfile>objconshdlr_8h.html</anchorfile>
      <anchor>ab5fc1b1c7ad83e2bf42904d70cea432d</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objdialog.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objdialog_8cpp</filename>
    <includes id="objdialog_8h" name="objdialog.h" local="yes" imported="no">objdialog.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjDialog</name>
      <anchorfile>objdialog_8cpp.html</anchorfile>
      <anchor>a6f316314b87f8da74c9717c559190b73</anchor>
      <arglist>(SCIP *scip, scip::ObjDialog *objdialog, SCIP_Bool deleteobject)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objdialog.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objdialog_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjDialog</name>
      <anchorfile>objdialog_8h.html</anchorfile>
      <anchor>a6f316314b87f8da74c9717c559190b73</anchor>
      <arglist>(SCIP *scip, scip::ObjDialog *objdialog, SCIP_Bool deleteobject)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objdisp.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objdisp_8cpp</filename>
    <includes id="objdisp_8h" name="objdisp.h" local="yes" imported="no">objdisp.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjDisp</name>
      <anchorfile>objdisp_8cpp.html</anchorfile>
      <anchor>a3e76b624704cbc16e4afa074d4c7f14b</anchor>
      <arglist>(SCIP *scip, scip::ObjDisp *objdisp, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjDisp *</type>
      <name>SCIPfindObjDisp</name>
      <anchorfile>objdisp_8cpp.html</anchorfile>
      <anchor>a62aae37638df35bffe340fb523dff6a1</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjDisp *</type>
      <name>SCIPgetObjDisp</name>
      <anchorfile>objdisp_8cpp.html</anchorfile>
      <anchor>a592a269aced825020fd852a5629454f4</anchor>
      <arglist>(SCIP *scip, SCIP_DISP *disp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objdisp.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objdisp_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjDisp</name>
      <anchorfile>objdisp_8h.html</anchorfile>
      <anchor>a3e76b624704cbc16e4afa074d4c7f14b</anchor>
      <arglist>(SCIP *scip, scip::ObjDisp *objdisp, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjDisp *</type>
      <name>SCIPfindObjDisp</name>
      <anchorfile>objdisp_8h.html</anchorfile>
      <anchor>a62aae37638df35bffe340fb523dff6a1</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjDisp *</type>
      <name>SCIPgetObjDisp</name>
      <anchorfile>objdisp_8h.html</anchorfile>
      <anchor>a592a269aced825020fd852a5629454f4</anchor>
      <arglist>(SCIP *scip, SCIP_DISP *disp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objeventhdlr.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objeventhdlr_8cpp</filename>
    <includes id="objeventhdlr_8h" name="objeventhdlr.h" local="yes" imported="no">objeventhdlr.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjEventhdlr</name>
      <anchorfile>objeventhdlr_8cpp.html</anchorfile>
      <anchor>acc6a8eb5be5161942f87172c1a81ca40</anchor>
      <arglist>(SCIP *scip, scip::ObjEventhdlr *objeventhdlr, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjEventhdlr *</type>
      <name>SCIPfindObjEventhdlr</name>
      <anchorfile>objeventhdlr_8cpp.html</anchorfile>
      <anchor>af5b930ba613debdc60b4e740296b08d8</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjEventhdlr *</type>
      <name>SCIPgetObjEventhdlr</name>
      <anchorfile>objeventhdlr_8cpp.html</anchorfile>
      <anchor>a3f6b1a35f35e58be2aa3a8a190294f14</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR *eventhdlr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objeventhdlr.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objeventhdlr_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjEventhdlr</name>
      <anchorfile>objeventhdlr_8h.html</anchorfile>
      <anchor>acc6a8eb5be5161942f87172c1a81ca40</anchor>
      <arglist>(SCIP *scip, scip::ObjEventhdlr *objeventhdlr, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjEventhdlr *</type>
      <name>SCIPfindObjEventhdlr</name>
      <anchorfile>objeventhdlr_8h.html</anchorfile>
      <anchor>af5b930ba613debdc60b4e740296b08d8</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjEventhdlr *</type>
      <name>SCIPgetObjEventhdlr</name>
      <anchorfile>objeventhdlr_8h.html</anchorfile>
      <anchor>a3f6b1a35f35e58be2aa3a8a190294f14</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR *eventhdlr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objheur.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objheur_8cpp</filename>
    <includes id="objheur_8h" name="objheur.h" local="yes" imported="no">objheur.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjHeur</name>
      <anchorfile>objheur_8cpp.html</anchorfile>
      <anchor>a99c80d4853bbce089f58e440e539a0a5</anchor>
      <arglist>(SCIP *scip, scip::ObjHeur *objheur, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjHeur *</type>
      <name>SCIPfindObjHeur</name>
      <anchorfile>objheur_8cpp.html</anchorfile>
      <anchor>a5e27bd2d19c03bd87c20dbe61c6a812a</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjHeur *</type>
      <name>SCIPgetObjHeur</name>
      <anchorfile>objheur_8cpp.html</anchorfile>
      <anchor>af57515f8a997fb1846b5236ef90ff230</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objheur.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objheur_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjHeur</name>
      <anchorfile>objheur_8h.html</anchorfile>
      <anchor>a99c80d4853bbce089f58e440e539a0a5</anchor>
      <arglist>(SCIP *scip, scip::ObjHeur *objheur, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjHeur *</type>
      <name>SCIPfindObjHeur</name>
      <anchorfile>objheur_8h.html</anchorfile>
      <anchor>a5e27bd2d19c03bd87c20dbe61c6a812a</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjHeur *</type>
      <name>SCIPgetObjHeur</name>
      <anchorfile>objheur_8h.html</anchorfile>
      <anchor>af57515f8a997fb1846b5236ef90ff230</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objmessagehdlr.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objmessagehdlr_8cpp</filename>
    <includes id="objmessagehdlr_8h" name="objmessagehdlr.h" local="yes" imported="no">objmessagehdlr.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateObjMessagehdlr</name>
      <anchorfile>objmessagehdlr_8cpp.html</anchorfile>
      <anchor>a370817589b9d9746f9526971f9ce406d</anchor>
      <arglist>(SCIP_MESSAGEHDLR **messagehdlr, scip::ObjMessagehdlr *objmessagehdlr, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeObjMessagehdlr</name>
      <anchorfile>objmessagehdlr_8cpp.html</anchorfile>
      <anchor>a067114145cf5bcf2a85657e7bce3a237</anchor>
      <arglist>(SCIP_MESSAGEHDLR **messagehdlr)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjMessagehdlr *</type>
      <name>SCIPgetObjMessagehdlr</name>
      <anchorfile>objmessagehdlr_8cpp.html</anchorfile>
      <anchor>abe21594bc3a79b7fd67c6eb1a35ce5f6</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objmessagehdlr.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objmessagehdlr_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateObjMessagehdlr</name>
      <anchorfile>objmessagehdlr_8h.html</anchorfile>
      <anchor>a370817589b9d9746f9526971f9ce406d</anchor>
      <arglist>(SCIP_MESSAGEHDLR **messagehdlr, scip::ObjMessagehdlr *objmessagehdlr, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeObjMessagehdlr</name>
      <anchorfile>objmessagehdlr_8h.html</anchorfile>
      <anchor>a067114145cf5bcf2a85657e7bce3a237</anchor>
      <arglist>(SCIP_MESSAGEHDLR **messagehdlr)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjMessagehdlr *</type>
      <name>SCIPgetObjMessagehdlr</name>
      <anchorfile>objmessagehdlr_8h.html</anchorfile>
      <anchor>abe21594bc3a79b7fd67c6eb1a35ce5f6</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objnodesel.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objnodesel_8cpp</filename>
    <includes id="objnodesel_8h" name="objnodesel.h" local="yes" imported="no">objnodesel.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjNodesel</name>
      <anchorfile>objnodesel_8cpp.html</anchorfile>
      <anchor>a2544751321a056a87467f361e72ae0b1</anchor>
      <arglist>(SCIP *scip, scip::ObjNodesel *objnodesel, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjNodesel *</type>
      <name>SCIPfindObjNodesel</name>
      <anchorfile>objnodesel_8cpp.html</anchorfile>
      <anchor>acd7ffbca01a1861aeaa2bb128507ce52</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjNodesel *</type>
      <name>SCIPgetObjNodesel</name>
      <anchorfile>objnodesel_8cpp.html</anchorfile>
      <anchor>ae80ffc9d111d2acf79c8c775894ddbfc</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objnodesel.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objnodesel_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjNodesel</name>
      <anchorfile>objnodesel_8h.html</anchorfile>
      <anchor>a2544751321a056a87467f361e72ae0b1</anchor>
      <arglist>(SCIP *scip, scip::ObjNodesel *objnodesel, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjNodesel *</type>
      <name>SCIPfindObjNodesel</name>
      <anchorfile>objnodesel_8h.html</anchorfile>
      <anchor>acd7ffbca01a1861aeaa2bb128507ce52</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjNodesel *</type>
      <name>SCIPgetObjNodesel</name>
      <anchorfile>objnodesel_8h.html</anchorfile>
      <anchor>ae80ffc9d111d2acf79c8c775894ddbfc</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objpresol.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objpresol_8cpp</filename>
    <includes id="objpresol_8h" name="objpresol.h" local="yes" imported="no">objpresol.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjPresol</name>
      <anchorfile>objpresol_8cpp.html</anchorfile>
      <anchor>a3824c5e207f9b85c91e98a7b8ebe1e85</anchor>
      <arglist>(SCIP *scip, scip::ObjPresol *objpresol, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjPresol *</type>
      <name>SCIPfindObjPresol</name>
      <anchorfile>objpresol_8cpp.html</anchorfile>
      <anchor>a5b804d0c288c1980163998c081dfedf3</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjPresol *</type>
      <name>SCIPgetObjPresol</name>
      <anchorfile>objpresol_8cpp.html</anchorfile>
      <anchor>a8a21e1fe03d32d3cbb54aa36521d2899</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objpresol.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objpresol_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjPresol</name>
      <anchorfile>objpresol_8h.html</anchorfile>
      <anchor>a3824c5e207f9b85c91e98a7b8ebe1e85</anchor>
      <arglist>(SCIP *scip, scip::ObjPresol *objpresol, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjPresol *</type>
      <name>SCIPfindObjPresol</name>
      <anchorfile>objpresol_8h.html</anchorfile>
      <anchor>a5b804d0c288c1980163998c081dfedf3</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjPresol *</type>
      <name>SCIPgetObjPresol</name>
      <anchorfile>objpresol_8h.html</anchorfile>
      <anchor>a8a21e1fe03d32d3cbb54aa36521d2899</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objpricer.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objpricer_8cpp</filename>
    <includes id="objpricer_8h" name="objpricer.h" local="yes" imported="no">objpricer.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjPricer</name>
      <anchorfile>objpricer_8cpp.html</anchorfile>
      <anchor>a88f76e0e13837e3eac2ce52f257e1500</anchor>
      <arglist>(SCIP *scip, scip::ObjPricer *objpricer, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjPricer *</type>
      <name>SCIPfindObjPricer</name>
      <anchorfile>objpricer_8cpp.html</anchorfile>
      <anchor>a8d8af9bec638d02d2fca9e840c312537</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjPricer *</type>
      <name>SCIPgetObjPricer</name>
      <anchorfile>objpricer_8cpp.html</anchorfile>
      <anchor>a9ecf4582097b9448a7e6369f5036c98d</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objpricer.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objpricer_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objprobcloneable_8h" name="objprobcloneable.h" local="yes" imported="no">objscip/objprobcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjPricer</name>
      <anchorfile>objpricer_8h.html</anchorfile>
      <anchor>a88f76e0e13837e3eac2ce52f257e1500</anchor>
      <arglist>(SCIP *scip, scip::ObjPricer *objpricer, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjPricer *</type>
      <name>SCIPfindObjPricer</name>
      <anchorfile>objpricer_8h.html</anchorfile>
      <anchor>a8d8af9bec638d02d2fca9e840c312537</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjPricer *</type>
      <name>SCIPgetObjPricer</name>
      <anchorfile>objpricer_8h.html</anchorfile>
      <anchor>a9ecf4582097b9448a7e6369f5036c98d</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objprobcloneable.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objprobcloneable_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
  </compound>
  <compound kind="file">
    <name>objprobdata.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objprobdata_8cpp</filename>
    <includes id="objprobdata_8h" name="objprobdata.h" local="yes" imported="no">objprobdata.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateObjProb</name>
      <anchorfile>objprobdata_8cpp.html</anchorfile>
      <anchor>a51de006b2bd40f54b6948aaa7fe0aa75</anchor>
      <arglist>(SCIP *scip, const char *name, scip::ObjProbData *objprobdata, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjProbData *</type>
      <name>SCIPgetObjProbData</name>
      <anchorfile>objprobdata_8cpp.html</anchorfile>
      <anchor>a0ad43a5d2d4e403b9fe9b901f1d14950</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objprobdata.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objprobdata_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateObjProb</name>
      <anchorfile>objprobdata_8h.html</anchorfile>
      <anchor>a51de006b2bd40f54b6948aaa7fe0aa75</anchor>
      <arglist>(SCIP *scip, const char *name, scip::ObjProbData *objprobdata, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjProbData *</type>
      <name>SCIPgetObjProbData</name>
      <anchorfile>objprobdata_8h.html</anchorfile>
      <anchor>a0ad43a5d2d4e403b9fe9b901f1d14950</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objprop.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objprop_8cpp</filename>
    <includes id="objprop_8h" name="objprop.h" local="yes" imported="no">objprop.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjProp</name>
      <anchorfile>objprop_8cpp.html</anchorfile>
      <anchor>a32342d0b94105f60d450af54edb11fa0</anchor>
      <arglist>(SCIP *scip, scip::ObjProp *objprop, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjProp *</type>
      <name>SCIPfindObjProp</name>
      <anchorfile>objprop_8cpp.html</anchorfile>
      <anchor>a31389de74903c818c6be79fe3b799f75</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjProp *</type>
      <name>SCIPgetObjProp</name>
      <anchorfile>objprop_8cpp.html</anchorfile>
      <anchor>ad65292c7ba745b785bbe52d696490619</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objprop.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objprop_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjProp</name>
      <anchorfile>objprop_8h.html</anchorfile>
      <anchor>a32342d0b94105f60d450af54edb11fa0</anchor>
      <arglist>(SCIP *scip, scip::ObjProp *objprop, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjProp *</type>
      <name>SCIPfindObjProp</name>
      <anchorfile>objprop_8h.html</anchorfile>
      <anchor>a31389de74903c818c6be79fe3b799f75</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjProp *</type>
      <name>SCIPgetObjProp</name>
      <anchorfile>objprop_8h.html</anchorfile>
      <anchor>ad65292c7ba745b785bbe52d696490619</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objreader.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objreader_8cpp</filename>
    <includes id="objreader_8h" name="objreader.h" local="yes" imported="no">objreader.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjReader</name>
      <anchorfile>objreader_8cpp.html</anchorfile>
      <anchor>a054481946869034ab8701f4bfc58fbbe</anchor>
      <arglist>(SCIP *scip, scip::ObjReader *objreader, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjReader *</type>
      <name>SCIPfindObjReader</name>
      <anchorfile>objreader_8cpp.html</anchorfile>
      <anchor>aa518292577a6895eac762364317ac287</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjReader *</type>
      <name>SCIPgetObjReader</name>
      <anchorfile>objreader_8cpp.html</anchorfile>
      <anchor>a5a6b9915e6d4945c0a7d5ae6c3b3b2bd</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objreader.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objreader_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjReader</name>
      <anchorfile>objreader_8h.html</anchorfile>
      <anchor>a054481946869034ab8701f4bfc58fbbe</anchor>
      <arglist>(SCIP *scip, scip::ObjReader *objreader, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjReader *</type>
      <name>SCIPfindObjReader</name>
      <anchorfile>objreader_8h.html</anchorfile>
      <anchor>aa518292577a6895eac762364317ac287</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjReader *</type>
      <name>SCIPgetObjReader</name>
      <anchorfile>objreader_8h.html</anchorfile>
      <anchor>a5a6b9915e6d4945c0a7d5ae6c3b3b2bd</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objrelax.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objrelax_8cpp</filename>
    <includes id="objrelax_8h" name="objrelax.h" local="yes" imported="no">objrelax.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjRelax</name>
      <anchorfile>objrelax_8cpp.html</anchorfile>
      <anchor>a143fe864af1ce2f4181979071d239e68</anchor>
      <arglist>(SCIP *scip, scip::ObjRelax *objrelax, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjRelax *</type>
      <name>SCIPfindObjRelax</name>
      <anchorfile>objrelax_8cpp.html</anchorfile>
      <anchor>a6c15e6d30646bd160db22b74486c1358</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjRelax *</type>
      <name>SCIPgetObjRelax</name>
      <anchorfile>objrelax_8cpp.html</anchorfile>
      <anchor>ae23caa1a5846f6ce295d4ed0a02b977b</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objrelax.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objrelax_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjRelax</name>
      <anchorfile>objrelax_8h.html</anchorfile>
      <anchor>a143fe864af1ce2f4181979071d239e68</anchor>
      <arglist>(SCIP *scip, scip::ObjRelax *objrelax, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjRelax *</type>
      <name>SCIPfindObjRelax</name>
      <anchorfile>objrelax_8h.html</anchorfile>
      <anchor>a6c15e6d30646bd160db22b74486c1358</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjRelax *</type>
      <name>SCIPgetObjRelax</name>
      <anchorfile>objrelax_8h.html</anchorfile>
      <anchor>ae23caa1a5846f6ce295d4ed0a02b977b</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objscip.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objscip_8h</filename>
    <includes id="objbranchrule_8h" name="objbranchrule.h" local="yes" imported="no">objscip/objbranchrule.h</includes>
    <includes id="objconshdlr_8h" name="objconshdlr.h" local="yes" imported="no">objscip/objconshdlr.h</includes>
    <includes id="objdialog_8h" name="objdialog.h" local="yes" imported="no">objscip/objdialog.h</includes>
    <includes id="objdisp_8h" name="objdisp.h" local="yes" imported="no">objscip/objdisp.h</includes>
    <includes id="objeventhdlr_8h" name="objeventhdlr.h" local="yes" imported="no">objscip/objeventhdlr.h</includes>
    <includes id="objheur_8h" name="objheur.h" local="yes" imported="no">objscip/objheur.h</includes>
    <includes id="objmessagehdlr_8h" name="objmessagehdlr.h" local="yes" imported="no">objscip/objmessagehdlr.h</includes>
    <includes id="objnodesel_8h" name="objnodesel.h" local="yes" imported="no">objscip/objnodesel.h</includes>
    <includes id="objpresol_8h" name="objpresol.h" local="yes" imported="no">objscip/objpresol.h</includes>
    <includes id="objpricer_8h" name="objpricer.h" local="yes" imported="no">objscip/objpricer.h</includes>
    <includes id="objprobdata_8h" name="objprobdata.h" local="yes" imported="no">objscip/objprobdata.h</includes>
    <includes id="objprop_8h" name="objprop.h" local="yes" imported="no">objscip/objprop.h</includes>
    <includes id="objreader_8h" name="objreader.h" local="yes" imported="no">objscip/objreader.h</includes>
    <includes id="objrelax_8h" name="objrelax.h" local="yes" imported="no">objscip/objrelax.h</includes>
    <includes id="objsepa_8h" name="objsepa.h" local="yes" imported="no">objscip/objsepa.h</includes>
    <includes id="objvardata_8h" name="objvardata.h" local="yes" imported="no">objscip/objvardata.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
  </compound>
  <compound kind="file">
    <name>objscipdefplugins.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objscipdefplugins_8h</filename>
    <includes id="objscip_8h" name="objscip.h" local="yes" imported="no">objscip/objscip.h</includes>
  </compound>
  <compound kind="file">
    <name>objsepa.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objsepa_8cpp</filename>
    <includes id="objsepa_8h" name="objsepa.h" local="yes" imported="no">objsepa.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjSepa</name>
      <anchorfile>objsepa_8cpp.html</anchorfile>
      <anchor>a80635c0b2b52a6cb0adb565961aa7c9d</anchor>
      <arglist>(SCIP *scip, scip::ObjSepa *objsepa, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjSepa *</type>
      <name>SCIPfindObjSepa</name>
      <anchorfile>objsepa_8cpp.html</anchorfile>
      <anchor>a51f1cf2dfa2c17b69486f424142ec8e1</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjSepa *</type>
      <name>SCIPgetObjSepa</name>
      <anchorfile>objsepa_8cpp.html</anchorfile>
      <anchor>a73741e37ad81bf7649e91ed5e6923f8f</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objsepa.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objsepa_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeObjSepa</name>
      <anchorfile>objsepa_8h.html</anchorfile>
      <anchor>a80635c0b2b52a6cb0adb565961aa7c9d</anchor>
      <arglist>(SCIP *scip, scip::ObjSepa *objsepa, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjSepa *</type>
      <name>SCIPfindObjSepa</name>
      <anchorfile>objsepa_8h.html</anchorfile>
      <anchor>a51f1cf2dfa2c17b69486f424142ec8e1</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjSepa *</type>
      <name>SCIPgetObjSepa</name>
      <anchorfile>objsepa_8h.html</anchorfile>
      <anchor>a73741e37ad81bf7649e91ed5e6923f8f</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objvardata.cpp</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objvardata_8cpp</filename>
    <includes id="objvardata_8h" name="objvardata.h" local="yes" imported="no">objvardata.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateObjVar</name>
      <anchorfile>objvardata_8cpp.html</anchorfile>
      <anchor>a8c9be3e5b510487d59fdc065464e401b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **var, const char *name, SCIP_Real lb, SCIP_Real ub, SCIP_Real obj, SCIP_VARTYPE vartype, SCIP_Bool initial, SCIP_Bool removable, scip::ObjVardata *objvardata, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjVardata *</type>
      <name>SCIPgetObjVardata</name>
      <anchorfile>objvardata_8cpp.html</anchorfile>
      <anchor>ad9040be857586487508bb5740f493e19</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>objvardata.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/objscip/</path>
    <filename>objvardata_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="objcloneable_8h" name="objcloneable.h" local="yes" imported="no">objscip/objcloneable.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateObjVar</name>
      <anchorfile>objvardata_8h.html</anchorfile>
      <anchor>a8c9be3e5b510487d59fdc065464e401b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **var, const char *name, SCIP_Real lb, SCIP_Real ub, SCIP_Real obj, SCIP_VARTYPE vartype, SCIP_Bool initial, SCIP_Bool removable, scip::ObjVardata *objvardata, SCIP_Bool deleteobject)</arglist>
    </member>
    <member kind="function">
      <type>scip::ObjVardata *</type>
      <name>SCIPgetObjVardata</name>
      <anchorfile>objvardata_8h.html</anchorfile>
      <anchor>ad9040be857586487508bb5740f493e19</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_boundshift.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>presol__boundshift_8c</filename>
    <includes id="presol__boundshift_8h" name="presol_boundshift.h" local="yes" imported="no">scip/presol_boundshift.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_NAME</name>
      <anchorfile>presol__boundshift_8c.html</anchorfile>
      <anchor>a285550aa0594c4c2826a42f769de63cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_DESC</name>
      <anchorfile>presol__boundshift_8c.html</anchorfile>
      <anchor>afb9e88e58ce104f4d248c85983b37a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_PRIORITY</name>
      <anchorfile>presol__boundshift_8c.html</anchorfile>
      <anchor>a843930ba9a9b28a2392957fe9f554aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_MAXROUNDS</name>
      <anchorfile>presol__boundshift_8c.html</anchorfile>
      <anchor>ae2d39da34a44d64d7854b43b08434108</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_DELAY</name>
      <anchorfile>presol__boundshift_8c.html</anchorfile>
      <anchor>a897c2ad2a660e966992d98344041f5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSHIFT</name>
      <anchorfile>presol__boundshift_8c.html</anchorfile>
      <anchor>a99bd62e0e5e0095204c6fa3131c3b16a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_FLIPPING</name>
      <anchorfile>presol__boundshift_8c.html</anchorfile>
      <anchor>a35ec4ba795300c1d4c671a067b2b8fde</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_INTEGER</name>
      <anchorfile>presol__boundshift_8c.html</anchorfile>
      <anchor>a6d89e5441a8fcfd85fb96e7d9d434a0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolInitBoundshift</name>
      <anchorfile>presol__boundshift_8c.html</anchorfile>
      <anchor>aea013926018b4d1b8e733f2362b1f7a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolExitBoundshift</name>
      <anchorfile>presol__boundshift_8c.html</anchorfile>
      <anchor>a5b331902046bbd4820b36d40ce40e194</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolInitpreBoundshift</name>
      <anchorfile>presol__boundshift_8c.html</anchorfile>
      <anchor>aeb9f3563da64dcaa2b240939c965e90b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolExitpreBoundshift</name>
      <anchorfile>presol__boundshift_8c.html</anchorfile>
      <anchor>af499fdd5d74238de7fb6ca2b8912b7fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolBoundshift</name>
      <anchorfile>presol__boundshift_8c.html</anchorfile>
      <anchor>afa99ac24217cd1da1d17d7593a69d89f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_boundshift.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>presol__boundshift_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolBoundshift</name>
      <anchorfile>presol__boundshift_8h.html</anchorfile>
      <anchor>afa99ac24217cd1da1d17d7593a69d89f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_dualfix.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>presol__dualfix_8c</filename>
    <includes id="presol__dualfix_8h" name="presol_dualfix.h" local="yes" imported="no">scip/presol_dualfix.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_NAME</name>
      <anchorfile>presol__dualfix_8c.html</anchorfile>
      <anchor>a285550aa0594c4c2826a42f769de63cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_DESC</name>
      <anchorfile>presol__dualfix_8c.html</anchorfile>
      <anchor>afb9e88e58ce104f4d248c85983b37a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_PRIORITY</name>
      <anchorfile>presol__dualfix_8c.html</anchorfile>
      <anchor>a843930ba9a9b28a2392957fe9f554aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_MAXROUNDS</name>
      <anchorfile>presol__dualfix_8c.html</anchorfile>
      <anchor>ae2d39da34a44d64d7854b43b08434108</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_DELAY</name>
      <anchorfile>presol__dualfix_8c.html</anchorfile>
      <anchor>a897c2ad2a660e966992d98344041f5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolFreeDualfix</name>
      <anchorfile>presol__dualfix_8c.html</anchorfile>
      <anchor>aa355b39202c790e95cd675a6eb6ef559</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolInitDualfix</name>
      <anchorfile>presol__dualfix_8c.html</anchorfile>
      <anchor>a211593a53453c6075e00c8882b7e37d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolExitDualfix</name>
      <anchorfile>presol__dualfix_8c.html</anchorfile>
      <anchor>ae52efa232c213233246aebbaa08f676c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolInitpreDualfix</name>
      <anchorfile>presol__dualfix_8c.html</anchorfile>
      <anchor>aadd7c6d28daa6993e34720d3a2db72b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolExitpreDualfix</name>
      <anchorfile>presol__dualfix_8c.html</anchorfile>
      <anchor>aae3dd624f12573a287b45c6128c3ffec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolDualfix</name>
      <anchorfile>presol__dualfix_8c.html</anchorfile>
      <anchor>ad3f9d46847c7e71ccea350b56292e346</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_dualfix.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>presol__dualfix_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolDualfix</name>
      <anchorfile>presol__dualfix_8h.html</anchorfile>
      <anchor>ad3f9d46847c7e71ccea350b56292e346</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_implics.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>presol__implics_8c</filename>
    <includes id="presol__implics_8h" name="presol_implics.h" local="yes" imported="no">scip/presol_implics.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_NAME</name>
      <anchorfile>presol__implics_8c.html</anchorfile>
      <anchor>a285550aa0594c4c2826a42f769de63cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_DESC</name>
      <anchorfile>presol__implics_8c.html</anchorfile>
      <anchor>afb9e88e58ce104f4d248c85983b37a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_PRIORITY</name>
      <anchorfile>presol__implics_8c.html</anchorfile>
      <anchor>a843930ba9a9b28a2392957fe9f554aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_MAXROUNDS</name>
      <anchorfile>presol__implics_8c.html</anchorfile>
      <anchor>ae2d39da34a44d64d7854b43b08434108</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_DELAY</name>
      <anchorfile>presol__implics_8c.html</anchorfile>
      <anchor>a897c2ad2a660e966992d98344041f5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolFreeImplics</name>
      <anchorfile>presol__implics_8c.html</anchorfile>
      <anchor>adc31d7a9cc4c72a40379bbab743e3c9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolInitImplics</name>
      <anchorfile>presol__implics_8c.html</anchorfile>
      <anchor>afd111436053b92c7ed905d395b020a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolExitImplics</name>
      <anchorfile>presol__implics_8c.html</anchorfile>
      <anchor>ad8751f5bdd4cf4fab1412da5a516a2f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolInitpreImplics</name>
      <anchorfile>presol__implics_8c.html</anchorfile>
      <anchor>a5804562a59345203b5c1f487db8657ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolExitpreImplics</name>
      <anchorfile>presol__implics_8c.html</anchorfile>
      <anchor>ac0fe3d45b47ca5d8b252e2aac084777c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolImplics</name>
      <anchorfile>presol__implics_8c.html</anchorfile>
      <anchor>a643f7365c0a70f2e8026f9f18144bed2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_implics.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>presol__implics_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolImplics</name>
      <anchorfile>presol__implics_8h.html</anchorfile>
      <anchor>a643f7365c0a70f2e8026f9f18144bed2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_inttobinary.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>presol__inttobinary_8c</filename>
    <includes id="presol__inttobinary_8h" name="presol_inttobinary.h" local="yes" imported="no">scip/presol_inttobinary.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_NAME</name>
      <anchorfile>presol__inttobinary_8c.html</anchorfile>
      <anchor>a285550aa0594c4c2826a42f769de63cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_DESC</name>
      <anchorfile>presol__inttobinary_8c.html</anchorfile>
      <anchor>afb9e88e58ce104f4d248c85983b37a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_PRIORITY</name>
      <anchorfile>presol__inttobinary_8c.html</anchorfile>
      <anchor>a843930ba9a9b28a2392957fe9f554aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_MAXROUNDS</name>
      <anchorfile>presol__inttobinary_8c.html</anchorfile>
      <anchor>ae2d39da34a44d64d7854b43b08434108</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_DELAY</name>
      <anchorfile>presol__inttobinary_8c.html</anchorfile>
      <anchor>a897c2ad2a660e966992d98344041f5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolFreeInttobinary</name>
      <anchorfile>presol__inttobinary_8c.html</anchorfile>
      <anchor>a0fb17b8c600f799ea25b67539dc4ad36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolInitInttobinary</name>
      <anchorfile>presol__inttobinary_8c.html</anchorfile>
      <anchor>a47a53945e2f7f16a9de0623800cdadfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolExitInttobinary</name>
      <anchorfile>presol__inttobinary_8c.html</anchorfile>
      <anchor>abac6f88e425c15458ac44c9dc614427c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolInitpreInttobinary</name>
      <anchorfile>presol__inttobinary_8c.html</anchorfile>
      <anchor>a29f049d29e0de3e44bf00283d4010fc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolExitpreInttobinary</name>
      <anchorfile>presol__inttobinary_8c.html</anchorfile>
      <anchor>a7319d051841490de756c506d1c65480e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolInttobinary</name>
      <anchorfile>presol__inttobinary_8c.html</anchorfile>
      <anchor>a8f2ce50350284392a51a479d466f7291</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_inttobinary.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>presol__inttobinary_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolInttobinary</name>
      <anchorfile>presol__inttobinary_8h.html</anchorfile>
      <anchor>a8f2ce50350284392a51a479d466f7291</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_probing.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>presol__probing_8c</filename>
    <includes id="presol__probing_8h" name="presol_probing.h" local="yes" imported="no">scip/presol_probing.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_NAME</name>
      <anchorfile>presol__probing_8c.html</anchorfile>
      <anchor>a285550aa0594c4c2826a42f769de63cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_DESC</name>
      <anchorfile>presol__probing_8c.html</anchorfile>
      <anchor>afb9e88e58ce104f4d248c85983b37a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_PRIORITY</name>
      <anchorfile>presol__probing_8c.html</anchorfile>
      <anchor>a843930ba9a9b28a2392957fe9f554aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_MAXROUNDS</name>
      <anchorfile>presol__probing_8c.html</anchorfile>
      <anchor>ae2d39da34a44d64d7854b43b08434108</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_DELAY</name>
      <anchorfile>presol__probing_8c.html</anchorfile>
      <anchor>a897c2ad2a660e966992d98344041f5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXDNOM</name>
      <anchorfile>presol__probing_8c.html</anchorfile>
      <anchor>a15826381c8e8f7a1c28ffd6756f273db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXRUNS</name>
      <anchorfile>presol__probing_8c.html</anchorfile>
      <anchor>aeec1ba16085bb47a90d9b9c27b75a066</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PROPROUNDS</name>
      <anchorfile>presol__probing_8c.html</anchorfile>
      <anchor>a8a7a8af238b61fc8154fba6bdd8c97b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXFIXINGS</name>
      <anchorfile>presol__probing_8c.html</anchorfile>
      <anchor>affd33cb4dff90ccc997bfd561769c63d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXUSELESS</name>
      <anchorfile>presol__probing_8c.html</anchorfile>
      <anchor>a5123ecb0fa3931f7af56815363a68081</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXTOTALUSELESS</name>
      <anchorfile>presol__probing_8c.html</anchorfile>
      <anchor>a69f135ad7b7039b6d730a3e163a4faea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSUMUSELESS</name>
      <anchorfile>presol__probing_8c.html</anchorfile>
      <anchor>abbe7ed85bda4fee6f0c4b8b00b9d51ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolProbing</name>
      <anchorfile>presol__probing_8c.html</anchorfile>
      <anchor>a37301fa5cdff073cbf982b5d12b11aaf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_probing.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>presol__probing_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolProbing</name>
      <anchorfile>presol__probing_8h.html</anchorfile>
      <anchor>a37301fa5cdff073cbf982b5d12b11aaf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_trivial.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>presol__trivial_8c</filename>
    <includes id="presol__trivial_8h" name="presol_trivial.h" local="yes" imported="no">scip/presol_trivial.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_NAME</name>
      <anchorfile>presol__trivial_8c.html</anchorfile>
      <anchor>a285550aa0594c4c2826a42f769de63cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_DESC</name>
      <anchorfile>presol__trivial_8c.html</anchorfile>
      <anchor>afb9e88e58ce104f4d248c85983b37a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_PRIORITY</name>
      <anchorfile>presol__trivial_8c.html</anchorfile>
      <anchor>a843930ba9a9b28a2392957fe9f554aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_MAXROUNDS</name>
      <anchorfile>presol__trivial_8c.html</anchorfile>
      <anchor>ae2d39da34a44d64d7854b43b08434108</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRESOL_DELAY</name>
      <anchorfile>presol__trivial_8c.html</anchorfile>
      <anchor>a897c2ad2a660e966992d98344041f5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXDNOM</name>
      <anchorfile>presol__trivial_8c.html</anchorfile>
      <anchor>a15826381c8e8f7a1c28ffd6756f273db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolFreeTrivial</name>
      <anchorfile>presol__trivial_8c.html</anchorfile>
      <anchor>acc73b6bbc1d2ee2d6684cbdf93de1d2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolInitTrivial</name>
      <anchorfile>presol__trivial_8c.html</anchorfile>
      <anchor>aa8d820c0287df5359e3e259b9a16e2e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolExitTrivial</name>
      <anchorfile>presol__trivial_8c.html</anchorfile>
      <anchor>a89fa7e1a21b27d0ddfb96b24c5fe466a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolInitpreTrivial</name>
      <anchorfile>presol__trivial_8c.html</anchorfile>
      <anchor>addfc2fe1cc8710dd030a25690358ad27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>presolExitpreTrivial</name>
      <anchorfile>presol__trivial_8c.html</anchorfile>
      <anchor>ad5cd900439a927236b82140e32b17a5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolTrivial</name>
      <anchorfile>presol__trivial_8c.html</anchorfile>
      <anchor>a3bb715e49acef67d534513924c7238a6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>presol_trivial.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>presol__trivial_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresolTrivial</name>
      <anchorfile>presol__trivial_8h.html</anchorfile>
      <anchor>a3bb715e49acef67d534513924c7238a6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prop_pseudoobj.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>prop__pseudoobj_8c</filename>
    <includes id="prop__pseudoobj_8h" name="prop_pseudoobj.h" local="yes" imported="no">scip/prop_pseudoobj.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PROP_NAME</name>
      <anchorfile>prop__pseudoobj_8c.html</anchorfile>
      <anchor>a2062ba7b5292b2cb9456209022cbdac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROP_DESC</name>
      <anchorfile>prop__pseudoobj_8c.html</anchorfile>
      <anchor>a01f6c19c723e33bb044d0e466828ac80</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROP_PRIORITY</name>
      <anchorfile>prop__pseudoobj_8c.html</anchorfile>
      <anchor>af54d22d68dc88e0702c6387381260bdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROP_FREQ</name>
      <anchorfile>prop__pseudoobj_8c.html</anchorfile>
      <anchor>aef556cb12e7377f21103a6ffe5764c30</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROP_DELAY</name>
      <anchorfile>prop__pseudoobj_8c.html</anchorfile>
      <anchor>a7004d49c05d1b2473ff254d4c4d575fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_NAME</name>
      <anchorfile>prop__pseudoobj_8c.html</anchorfile>
      <anchor>aea7e068fd23523fb86409f7437f49851</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_DESC</name>
      <anchorfile>prop__pseudoobj_8c.html</anchorfile>
      <anchor>acd6ea343facf9430a46f3d1f3d6c675b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXCANDS</name>
      <anchorfile>prop__pseudoobj_8c.html</anchorfile>
      <anchor>a386b09a2365fae60148badc89d95a305</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>propInitPseudoobj</name>
      <anchorfile>prop__pseudoobj_8c.html</anchorfile>
      <anchor>adc650ba2e61789761ec7b0b02655b452</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>propExitPseudoobj</name>
      <anchorfile>prop__pseudoobj_8c.html</anchorfile>
      <anchor>a0fb46105c0b5a030c18394ace9a02eeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePropPseudoobj</name>
      <anchorfile>prop__pseudoobj_8c.html</anchorfile>
      <anchor>ad2270b1d3d9470588eed66d0c2370cf1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prop_pseudoobj.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>prop__pseudoobj_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePropPseudoobj</name>
      <anchorfile>prop__pseudoobj_8h.html</anchorfile>
      <anchor>ad2270b1d3d9470588eed66d0c2370cf1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prop_rootredcost.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>prop__rootredcost_8c</filename>
    <includes id="prop__rootredcost_8h" name="prop_rootredcost.h" local="yes" imported="no">scip/prop_rootredcost.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PROP_NAME</name>
      <anchorfile>prop__rootredcost_8c.html</anchorfile>
      <anchor>a2062ba7b5292b2cb9456209022cbdac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROP_DESC</name>
      <anchorfile>prop__rootredcost_8c.html</anchorfile>
      <anchor>a01f6c19c723e33bb044d0e466828ac80</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROP_PRIORITY</name>
      <anchorfile>prop__rootredcost_8c.html</anchorfile>
      <anchor>af54d22d68dc88e0702c6387381260bdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROP_FREQ</name>
      <anchorfile>prop__rootredcost_8c.html</anchorfile>
      <anchor>aef556cb12e7377f21103a6ffe5764c30</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROP_DELAY</name>
      <anchorfile>prop__rootredcost_8c.html</anchorfile>
      <anchor>a7004d49c05d1b2473ff254d4c4d575fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>propInitRootredcost</name>
      <anchorfile>prop__rootredcost_8c.html</anchorfile>
      <anchor>a91548df8f1061e54124dde3312f81c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>propExitRootredcost</name>
      <anchorfile>prop__rootredcost_8c.html</anchorfile>
      <anchor>ac2150a14cf68426bff93bf2963ba25e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>propExitsolRootredcost</name>
      <anchorfile>prop__rootredcost_8c.html</anchorfile>
      <anchor>abe7a562be4b3e97a9eeb81b78400fdc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePropRootredcost</name>
      <anchorfile>prop__rootredcost_8c.html</anchorfile>
      <anchor>ae3e56265adc56f60b88c8fbffd689bee</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prop_rootredcost.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>prop__rootredcost_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePropRootredcost</name>
      <anchorfile>prop__rootredcost_8h.html</anchorfile>
      <anchor>ae3e56265adc56f60b88c8fbffd689bee</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prop_vbounds.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>prop__vbounds_8c</filename>
    <includes id="prop__vbounds_8h" name="prop_vbounds.h" local="yes" imported="no">scip/prop_vbounds.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PROP_NAME</name>
      <anchorfile>prop__vbounds_8c.html</anchorfile>
      <anchor>a2062ba7b5292b2cb9456209022cbdac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROP_DESC</name>
      <anchorfile>prop__vbounds_8c.html</anchorfile>
      <anchor>a01f6c19c723e33bb044d0e466828ac80</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROP_PRIORITY</name>
      <anchorfile>prop__vbounds_8c.html</anchorfile>
      <anchor>af54d22d68dc88e0702c6387381260bdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROP_FREQ</name>
      <anchorfile>prop__vbounds_8c.html</anchorfile>
      <anchor>aef556cb12e7377f21103a6ffe5764c30</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROP_DELAY</name>
      <anchorfile>prop__vbounds_8c.html</anchorfile>
      <anchor>a7004d49c05d1b2473ff254d4c4d575fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_NAME</name>
      <anchorfile>prop__vbounds_8c.html</anchorfile>
      <anchor>aea7e068fd23523fb86409f7437f49851</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_DESC</name>
      <anchorfile>prop__vbounds_8c.html</anchorfile>
      <anchor>acd6ea343facf9430a46f3d1f3d6c675b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>propInitVbounds</name>
      <anchorfile>prop__vbounds_8c.html</anchorfile>
      <anchor>a192fa0d2169db6d00b0fe88fa0991e7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>propExitVbounds</name>
      <anchorfile>prop__vbounds_8c.html</anchorfile>
      <anchor>ac36e51da8d0f37ceab3c25b4fe3e1a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct InferInfo</type>
      <name>INFERINFO</name>
      <anchorfile>prop__vbounds_8c.html</anchorfile>
      <anchor>ad58287ccdbe599464c3583772c751b25</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePropVbounds</name>
      <anchorfile>prop__vbounds_8c.html</anchorfile>
      <anchor>a4b09503d4da9ae3c4b0de53e9b96d918</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateTopoSortedVars</name>
      <anchorfile>prop__vbounds_8c.html</anchorfile>
      <anchor>a28194feed8992097e2e275cc2cbc09df</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **vars, int nvars, SCIP_HASHMAP *varHashmap, SCIP_VAR **usedvars, int *nusedvars, SCIP_VAR **topovars, int *ntopovars, SCIP_Bool lowerbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisPropagatedVbounds</name>
      <anchorfile>prop__vbounds_8c.html</anchorfile>
      <anchor>a093dd0feb2891c368ed35a017635de35</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexecPropVbounds</name>
      <anchorfile>prop__vbounds_8c.html</anchorfile>
      <anchor>a880ada215b1e5801e313fe97e0a725c2</anchor>
      <arglist>(SCIP *scip, SCIP_Bool force, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prop_vbounds.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>prop__vbounds_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePropVbounds</name>
      <anchorfile>prop__vbounds_8h.html</anchorfile>
      <anchor>a4b09503d4da9ae3c4b0de53e9b96d918</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateTopoSortedVars</name>
      <anchorfile>prop__vbounds_8h.html</anchorfile>
      <anchor>a28194feed8992097e2e275cc2cbc09df</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **vars, int nvars, SCIP_HASHMAP *varHashmap, SCIP_VAR **usedvars, int *nusedvars, SCIP_VAR **topovars, int *ntopovars, SCIP_Bool lowerbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisPropagatedVbounds</name>
      <anchorfile>prop__vbounds_8h.html</anchorfile>
      <anchor>a093dd0feb2891c368ed35a017635de35</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexecPropVbounds</name>
      <anchorfile>prop__vbounds_8h.html</anchorfile>
      <anchor>a880ada215b1e5801e313fe97e0a725c2</anchor>
      <arglist>(SCIP *scip, SCIP_Bool force, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_branch.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__branch_8h</filename>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__branch_8h" name="type_branch.h" local="yes" imported="no">scip/type_branch.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>a51467dda0164a7ce5fa99811dfdbd092</anchor>
      <arglist>(SCIPbranchruleComp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BRANCHRULEDATA *</type>
      <name>SCIPbranchruleGetData</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>a1d1acdd018c5e82de3ef86059362a54b</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPbranchruleSetData</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>abbd7bf48bdd1e544d12104950b100bf9</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule, SCIP_BRANCHRULEDATA *branchruledata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPbranchruleGetName</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>a867b1582bb5edd9210eba06a78891481</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPbranchruleGetDesc</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>a304d4a0778fa9d6b0bcd622fccb4032d</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPbranchruleGetPriority</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>a96b82084e2b2a50019e5362a8555c0c4</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPbranchruleGetMaxdepth</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>a2d09f1e7ce8a5fee2d5e03df93257711</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPbranchruleGetMaxbounddist</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>aa8db0457258fc68301149b273a3f1db9</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPbranchruleGetTime</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>a6d5ae35942480e7a8ccc27ea62ac6e36</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPbranchruleGetNLPCalls</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>a57d161ea95484b1b24faaadd1398f047</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPbranchruleGetNExternCalls</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>ab7e5b0f9f396e8dd286b8106c8abefb2</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPbranchruleGetNPseudoCalls</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>a1357642831295ff65127e1cde89f6b15</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPbranchruleGetNCutoffs</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>ab0ee757329f55b319f070acf3dcd5eac</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPbranchruleGetNCutsFound</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>abf0a6eecd5ef04b248b3cc779ebfdac0</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPbranchruleGetNConssFound</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>a46dda31322521a4899b7e283702440ee</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPbranchruleGetNDomredsFound</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>a0b042ef26904df16452d98fff283ef30</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPbranchruleGetNChildren</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>a6791d8dcd0d7a3756bc3deb80121c7b8</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPbranchruleIsInitialized</name>
      <anchorfile>pub__branch_8h.html</anchorfile>
      <anchor>a03bcb9057685b9e9c4a8cc8df4b2d748</anchor>
      <arglist>(SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_conflict.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__conflict_8h</filename>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__conflict_8h" name="type_conflict.h" local="yes" imported="no">scip/type_conflict.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__conflict_8h.html</anchorfile>
      <anchor>a2ddbfa2b5a6b73e1b116392745783735</anchor>
      <arglist>(SCIPconflicthdlrComp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONFLICTHDLRDATA *</type>
      <name>SCIPconflicthdlrGetData</name>
      <anchorfile>pub__conflict_8h.html</anchorfile>
      <anchor>a80029a24ab0d3f29173c8d773f585805</anchor>
      <arglist>(SCIP_CONFLICTHDLR *conflicthdlr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPconflicthdlrSetData</name>
      <anchorfile>pub__conflict_8h.html</anchorfile>
      <anchor>a952210a82cef8b36201c0e54e73cff4d</anchor>
      <arglist>(SCIP_CONFLICTHDLR *conflicthdlr, SCIP_CONFLICTHDLRDATA *conflicthdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPconflicthdlrGetName</name>
      <anchorfile>pub__conflict_8h.html</anchorfile>
      <anchor>a8d6d52b72055153a672a85bdb9c77d62</anchor>
      <arglist>(SCIP_CONFLICTHDLR *conflicthdlr)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPconflicthdlrGetDesc</name>
      <anchorfile>pub__conflict_8h.html</anchorfile>
      <anchor>ab2df080d86ed46be164966ca252c8818</anchor>
      <arglist>(SCIP_CONFLICTHDLR *conflicthdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconflicthdlrGetPriority</name>
      <anchorfile>pub__conflict_8h.html</anchorfile>
      <anchor>a335a1bc28fc06285fee89ca56fc0ebea</anchor>
      <arglist>(SCIP_CONFLICTHDLR *conflicthdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconflicthdlrIsInitialized</name>
      <anchorfile>pub__conflict_8h.html</anchorfile>
      <anchor>ac17b7df5003c45e42fec1678082e4858</anchor>
      <arglist>(SCIP_CONFLICTHDLR *conflicthdlr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_cons.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__cons_8h</filename>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__cons_8h" name="type_cons.h" local="yes" imported="no">scip/type_cons.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a8a21ab214053df193d4ad8e051a27d33</anchor>
      <arglist>(SCIPconshdlrCompSepa)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>ad0c4f05cec5a4f3eb007d434ecba84e6</anchor>
      <arglist>(SCIPconshdlrCompEnfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a1e88ce36888a274998f3617e33904bbc</anchor>
      <arglist>(SCIPconshdlrCompCheck)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPconshdlrGetName</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a824604f44b687230945833c7c1da3dc1</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPconshdlrGetDesc</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>ad41462cc28040f243a136fb53b5ea7cb</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONSHDLRDATA *</type>
      <name>SCIPconshdlrGetData</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>ab9d92094900d984f602e9f3677ec6b6c</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPconshdlrSetData</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a08f8626d002982b7ac7f76ab6064b9b3</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr, SCIP_CONSHDLRDATA *conshdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS **</type>
      <name>SCIPconshdlrGetConss</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>af0cc6571e2fe52789e56044a59a436f3</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS **</type>
      <name>SCIPconshdlrGetEnfoConss</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>ace9f25e0149815eae4e056bb16cf068c</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNConss</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a78089729c20937b23026f7a3cf7016db</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNEnfoConss</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a9e65d489b0c60f033ddb6f27ea6e28c5</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNActiveConss</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>ad610bfb6d34ee998835d8b9bbbb9cf8c</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNEnabledConss</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a7df3fd402b8711ea06e2e14e1301f993</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconshdlrGetPresolTime</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a23d02e6beb2094a6b9607c86e330aff4</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconshdlrGetSepaTime</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>afa39e4aa1da53533eae8bbd8af0bf9b6</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconshdlrGetEnfoLPTime</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a3a0220cbc0c922b4c824fc02af9d9056</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconshdlrGetEnfoPSTime</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a71f122e94d029f05e8a633cb12aaff6b</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconshdlrGetPropTime</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a6eb475c8423ad26172f2640cf3a9c0d8</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconshdlrGetCheckTime</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a15fac15f279a0cfb09e51c5ee1e037c0</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNSepaCalls</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a889f25db97a810cf791a602bf7cd795c</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNEnfoLPCalls</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>adacead9b0df3dd3a3270818c24d6e639</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNEnfoPSCalls</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a97c52c2029b1e8b7203a42c7df2f8c85</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNPropCalls</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>adab894345b426192997ba78d31ba423b</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNCheckCalls</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a20611ff42d5c80a6be0594ba84bdf3cc</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNCutoffs</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a7879c5d4665202a1623875e4270b605c</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNCutsFound</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a5ec9421404578473470043fb4b31535d</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNConssFound</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>ad4a84ee871e66faa9544129296ea6101</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNDomredsFound</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a3f104bde267ff8125cccd52407c6bf16</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPconshdlrGetNChildren</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a8bd1c94d2a5164e065190638433d4994</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetMaxNActiveConss</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a13ff89cfe627ba18ac22775ff04d37c5</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetStartNActiveConss</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>aae02ae2a1b7b9761ae928b8532fc4407</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNFixedVars</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a33898ed9feb392c5323a9635d1af0265</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNAggrVars</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a94d14c1f7e7c2e4c5d4b852c7ad2395d</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNChgVarTypes</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>afb975ee320a98bb5f2d3d891e57abcd8</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNChgBds</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>ac1f9cf438f419f14bff777a9d4fabca1</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNAddHoles</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a9a0bfab3f71d49938c75b84d103de9a0</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNDelConss</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a88fb50a988e39daff7da3b1e12958afb</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNUpgdConss</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>aa6a274ce42b00b4fdc22900daf8521bb</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNChgCoefs</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a46450ef9764c3208af3c98417ca3d51e</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetNChgSides</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a2391e57b82a421700ab05cfe9df6c78a</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetSepaPriority</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a42d46bdbed068cdfba8fe5e908a8c2ea</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetEnfoPriority</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>aeb8209bcaa765e524a475f3876865624</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetCheckPriority</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>ad711182b4d05b1586088506552e74579</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetSepaFreq</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>ad90f28a4a6f1d365eca294a26711d9ce</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetPropFreq</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a763a4a1badc627e807dd4bdd979bd600</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconshdlrGetEagerFreq</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a2927a7bc598ad0999a7b6e414f517873</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrNeedsCons</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a9223f42551969b50f951cdff72abb8ee</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrDoesPresolve</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a3056443480ec0686ab02056a31755c71</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrIsSeparationDelayed</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a801c95e1171ac24cba10f0aef69e4316</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrIsPropagationDelayed</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a69d247cae177ff8e2809e2fbc4a1d7a5</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrIsPresolvingDelayed</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a49fc16a8c610aac2c1de61a98e9cfb00</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrWasLPSeparationDelayed</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a8a96a07282f40fa374e8c51e4d4cfd95</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrWasSolSeparationDelayed</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a1a00c691a1de3d804ab8ea918d8246be</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrWasPropagationDelayed</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>ab628efb1c8e990e90110189d7876932d</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrWasPresolvingDelayed</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a89f7246023fa680cfd591c7d40cf13fa</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrIsInitialized</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>aa18de49e2830177f7f3becd5e72b2add</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconshdlrIsClonable</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>afa4bde8c38ab00b0cc1bc84c83b30876</anchor>
      <arglist>(SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPconsGetName</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>af970144cfd0dcbfc2c876ad0ee62cc1c</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconsGetPos</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a1c2f15d2c7f87079b2d08ada27471837</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONSHDLR *</type>
      <name>SCIPconsGetHdlr</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>af67ca41e623b91b7a0a656dedbce12ef</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONSDATA *</type>
      <name>SCIPconsGetData</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>aff3396a6d8f4a6517d35021142093dfb</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconsGetNUses</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a97d7e7b2f14d3d9909335f48205dc3e8</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconsGetActiveDepth</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a2b162acf04d82acd438c13d9487e1078</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconsGetValidDepth</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a5803f4679a1b85236aa9100b871b5509</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsActive</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a8d003272514fb88ff433a01f0ef9729a</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsEnabled</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a9b22f631834598b8bd5b822490e0e9b1</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsSeparationEnabled</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>aa6b386f7652c3f31c180cc2c659e7273</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsPropagationEnabled</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a3352bb8501b69f7e13d96c1c76a0b73c</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsDeleted</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a650f1dec189da590ea0b79f8383b04fb</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsObsolete</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>ada62e4b9082a9fcb3647c493d8c355ac</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPconsGetAge</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a20c3a9c21a0eb3cda433cbe6e547e7fc</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsInitial</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a34ab728deb645a518189f92942bcff10</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsSeparated</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>af29eb07173441fe42bbc5ffb63644b0a</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsEnforced</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a7ff1cb55ce719bd1375ad7013bc79e06</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsChecked</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a6085288ebb61c8641f7492f02f79adc5</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsPropagated</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a8e9766c1a978d74e3250f8878c5b2e01</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsGlobal</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a86969d2af6ef18465428681e8397b579</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsLocal</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a920b332d777184223bac6899f4cf2d20</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsModifiable</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>ac3bcf67f5fa97e1f216a5cc6575915fe</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsDynamic</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a1ff0674d91de264c092adffb3c117bb6</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsRemovable</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>afb4b45a4eb3a6fa7d37b980da143037f</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsStickingAtNode</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>ada7be8fb9958c8bc658c1a1cf617da32</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsInProb</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a80dd4f1056e091659cd530225417bd4a</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsOriginal</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a5d363616c02c18751941252839ee0323</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsTransformed</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a7116e30a1a95e0f4bec55fe30f0e508f</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsLockedPos</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a2d0e009d35d39123b880f3818aaa96d2</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsLockedNeg</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a00a08fbd145e771f5d34c11435a8bade</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPconsIsLocked</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>aa2962642575b19db94c8cc6939a83020</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconsGetNLocksPos</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a717bbbaf77dc6178803aa04df35c998e</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPconsGetNLocksNeg</name>
      <anchorfile>pub__cons_8h.html</anchorfile>
      <anchor>a95beb50e731319083a54b8a8d0a966b8</anchor>
      <arglist>(SCIP_CONS *cons)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_cutpool.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__cutpool_8h</filename>
    <includes id="type__cutpool_8h" name="type_cutpool.h" local="yes" imported="no">scip/type_cutpool.h</includes>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPcutGetRow</name>
      <anchorfile>pub__cutpool_8h.html</anchorfile>
      <anchor>ab18cff123a4e20608deaafd94eeb1575</anchor>
      <arglist>(SCIP_CUT *cut)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcutGetAge</name>
      <anchorfile>pub__cutpool_8h.html</anchorfile>
      <anchor>ae860ead479f61bab6f909d260422c185</anchor>
      <arglist>(SCIP_CUT *cut)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CUT **</type>
      <name>SCIPcutpoolGetCuts</name>
      <anchorfile>pub__cutpool_8h.html</anchorfile>
      <anchor>a72e7672b5ce3582b886a919f8fa35ed3</anchor>
      <arglist>(SCIP_CUTPOOL *cutpool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcutpoolGetNCuts</name>
      <anchorfile>pub__cutpool_8h.html</anchorfile>
      <anchor>aa746b3ca90b58d330f1605d48b5ef0a7</anchor>
      <arglist>(SCIP_CUTPOOL *cutpool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcutpoolGetMaxNCuts</name>
      <anchorfile>pub__cutpool_8h.html</anchorfile>
      <anchor>a9e53b63d57806a90579d990cc6120de8</anchor>
      <arglist>(SCIP_CUTPOOL *cutpool)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcutpoolGetTime</name>
      <anchorfile>pub__cutpool_8h.html</anchorfile>
      <anchor>a7a7345387a7ac38671e62f1ce7250700</anchor>
      <arglist>(SCIP_CUTPOOL *cutpool)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPcutpoolGetNCalls</name>
      <anchorfile>pub__cutpool_8h.html</anchorfile>
      <anchor>add4aaa1577bfec85ccd8f23d6ba20eb1</anchor>
      <arglist>(SCIP_CUTPOOL *cutpool)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPcutpoolGetNCutsFound</name>
      <anchorfile>pub__cutpool_8h.html</anchorfile>
      <anchor>a3ebefd0dbe01e095ed40241ce2288d67</anchor>
      <arglist>(SCIP_CUTPOOL *cutpool)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_dialog.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__dialog_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <includes id="type__dialog_8h" name="type_dialog.h" local="yes" imported="no">scip/type_dialog.h</includes>
    <member kind="function">
      <type>SCIP_DIALOG *</type>
      <name>SCIPdialoghdlrGetRoot</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>aac5a6fadf175ca522bc31faf074d7e36</anchor>
      <arglist>(SCIP_DIALOGHDLR *dialoghdlr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdialoghdlrClearBuffer</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>a0686f8f57fcce6437e85719893a078e0</anchor>
      <arglist>(SCIP_DIALOGHDLR *dialoghdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPdialoghdlrIsBufferEmpty</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>a32e79f62cb25182c48d8badcf0c611e5</anchor>
      <arglist>(SCIP_DIALOGHDLR *dialoghdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdialoghdlrGetWord</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>a626c3b761f621b7f29746e45be35b547</anchor>
      <arglist>(SCIP_DIALOGHDLR *dialoghdlr, SCIP_DIALOG *dialog, const char *prompt, char **inputword, SCIP_Bool *endoffile)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdialoghdlrAddInputLine</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>a61914cd5db1159f63cc25c43221d2d9f</anchor>
      <arglist>(SCIP_DIALOGHDLR *dialoghdlr, const char *inputline)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdialoghdlrAddHistory</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>a1fa9745660f0b49af2a96c9f87a0699b</anchor>
      <arglist>(SCIP_DIALOGHDLR *dialoghdlr, SCIP_DIALOG *dialog, const char *command, SCIP_Bool escapecommand)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPdialogHasEntry</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>a1ba24ae4f103ddaf0c7ddd0b78d17d29</anchor>
      <arglist>(SCIP_DIALOG *dialog, const char *entryname)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdialogFindEntry</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>adfa618e011ea25bf33a1a16fdedd9f50</anchor>
      <arglist>(SCIP_DIALOG *dialog, const char *entryname, SCIP_DIALOG **subdialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdialogDisplayMenu</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>af3ed54af504c4efc38a1ffab9a312ca6</anchor>
      <arglist>(SCIP_DIALOG *dialog, SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdialogDisplayMenuEntry</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>a8a6b313a6d0adec0891b5da71dc419c5</anchor>
      <arglist>(SCIP_DIALOG *dialog, SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdialogDisplayCompletions</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>a782f843a91679cebf023bfaff1ad2ae1</anchor>
      <arglist>(SCIP_DIALOG *dialog, SCIP *scip, const char *entryname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdialogGetPath</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>afe22ca64f4629f6f84c3c1b0f53088ef</anchor>
      <arglist>(SCIP_DIALOG *dialog, const char sepchar, char *path)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPdialogGetName</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>ae2cc31e8a6459718053f29f139080667</anchor>
      <arglist>(SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPdialogGetDesc</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>ab35c290b0da8f1e1fcf6d66bc1179786</anchor>
      <arglist>(SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPdialogIsSubmenu</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>ae60882a8c5b80e7e4a59fa90c50caa10</anchor>
      <arglist>(SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DIALOG *</type>
      <name>SCIPdialogGetParent</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>a3b5f7cf8a751928a8e0e18d432e118d2</anchor>
      <arglist>(SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DIALOG **</type>
      <name>SCIPdialogGetSubdialogs</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>aff557ce8866612a9dce6f5c45792b1db</anchor>
      <arglist>(SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdialogGetNSubdialogs</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>a844c473ec4ed2081fa3f42c59294792b</anchor>
      <arglist>(SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DIALOGDATA *</type>
      <name>SCIPdialogGetData</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>aee7e7bb6f20c22a3e68fe1ee6a260959</anchor>
      <arglist>(SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdialogSetData</name>
      <anchorfile>pub__dialog_8h.html</anchorfile>
      <anchor>a41732c803a349f2e7201a9b60ae2501c</anchor>
      <arglist>(SCIP_DIALOG *dialog, SCIP_DIALOGDATA *dialogdata)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_disp.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__disp_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__disp_8h" name="type_disp.h" local="yes" imported="no">scip/type_disp.h</includes>
    <member kind="function">
      <type>SCIP_DISPDATA *</type>
      <name>SCIPdispGetData</name>
      <anchorfile>pub__disp_8h.html</anchorfile>
      <anchor>a200ee02655c17894718508d7f64434ae</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdispSetData</name>
      <anchorfile>pub__disp_8h.html</anchorfile>
      <anchor>a2b38de8987ee703b37325ef7d452220b</anchor>
      <arglist>(SCIP_DISP *disp, SCIP_DISPDATA *dispdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPdispGetName</name>
      <anchorfile>pub__disp_8h.html</anchorfile>
      <anchor>aab95d953a34ae3c1145cec6f49c266e8</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPdispGetDesc</name>
      <anchorfile>pub__disp_8h.html</anchorfile>
      <anchor>a336b0ad7e82717254e98c25580e11141</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPdispGetHeader</name>
      <anchorfile>pub__disp_8h.html</anchorfile>
      <anchor>ac36200f833ec9cc76c4b12d78e707584</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdispGetWidth</name>
      <anchorfile>pub__disp_8h.html</anchorfile>
      <anchor>adb8d4e8ad8b1d70a2c90ff7aeced6e16</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdispGetPriority</name>
      <anchorfile>pub__disp_8h.html</anchorfile>
      <anchor>ad04b0ef3f425ade105a34bd69bb9bfd0</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdispGetPosition</name>
      <anchorfile>pub__disp_8h.html</anchorfile>
      <anchor>aa4dfa896d5a0802e83752342d0b843c6</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DISPSTATUS</type>
      <name>SCIPdispGetStatus</name>
      <anchorfile>pub__disp_8h.html</anchorfile>
      <anchor>a466cbe754b38eeb06042eda0d0fb5fe4</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPdispIsInitialized</name>
      <anchorfile>pub__disp_8h.html</anchorfile>
      <anchor>a3af5f074816fcf5584d3217e75b12dd3</anchor>
      <arglist>(SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdispLongint</name>
      <anchorfile>pub__disp_8h.html</anchorfile>
      <anchor>a88bbf2669e5670b16f44e3204a5b5ca0</anchor>
      <arglist>(FILE *file, SCIP_Longint val, int width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdispInt</name>
      <anchorfile>pub__disp_8h.html</anchorfile>
      <anchor>a23dfc64d7e34eecc0ddd22dc16b2c272</anchor>
      <arglist>(FILE *file, int val, int width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdispTime</name>
      <anchorfile>pub__disp_8h.html</anchorfile>
      <anchor>a75ed7519a837aa961e9428ded294e592</anchor>
      <arglist>(FILE *file, SCIP_Real val, int width)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_event.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__event_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__event_8h" name="type_event.h" local="yes" imported="no">scip/type_event.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <includes id="type__sol_8h" name="type_sol.h" local="yes" imported="no">scip/type_sol.h</includes>
    <includes id="type__tree_8h" name="type_tree.h" local="yes" imported="no">scip/type_tree.h</includes>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPeventhdlrGetName</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>a80b3930a287820dd5122d5543180590a</anchor>
      <arglist>(SCIP_EVENTHDLR *eventhdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EVENTHDLRDATA *</type>
      <name>SCIPeventhdlrGetData</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>aef8adb1ec8f38014309c957472e732e6</anchor>
      <arglist>(SCIP_EVENTHDLR *eventhdlr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPeventhdlrSetData</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>ac8f6cc1f4cbc1c577be70262478bc37a</anchor>
      <arglist>(SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTHDLRDATA *eventhdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPeventhdlrIsInitialized</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>a2836464edb3b7c4e7f598b49dcd8319e</anchor>
      <arglist>(SCIP_EVENTHDLR *eventhdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EVENTTYPE</type>
      <name>SCIPeventGetType</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>a1d4e64ef60bc17c1c874b1c2fcfe15bd</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPeventGetVar</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>a994c9f31d38b755396de9c4cca9f3706</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetOldobj</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>a42e705b562857e9acf5fdb580046b729</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetNewobj</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>a780d53ddd452e28c08e49581df478154</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetOldbound</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>a483c59bb2077e53de4521b2cd9b4e869</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetNewbound</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>aad36fca258201c47feeb24fc4dc75e79</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPeventGetNode</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>ace6724e9c18bb3dff237ed96285263fb</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SOL *</type>
      <name>SCIPeventGetSol</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>afb4284a8eae4d861492dc9d5ecfb3910</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetHoleLeft</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>a42c60345bc77d0514dddf766fa9ce544</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetHoleRight</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>a3d7bb71788150710a1ebd04ca2b16b44</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW *</type>
      <name>SCIPeventGetRow</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>a4d340a4edfdadae8e71bb5f8d83e3533</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_COL *</type>
      <name>SCIPeventGetRowCol</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>a77c384793780a4bd761da05aad522e4a</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetRowOldCoefVal</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>a00acc4b3a45d7d00549bbeff5194289f</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetRowNewCoefVal</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>ad53a757c92eb33e738f4cad55520cb55</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetRowOldConstVal</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>ae7b7129440129173bc2ea4df5cf35ddf</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetRowNewConstVal</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>a59b6963c99aedfefdeb37c15b5df755d</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SIDETYPE</type>
      <name>SCIPeventGetRowSide</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>a8a65abbbd55fe09a06caa7fee1d135bd</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetRowOldSideVal</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>a8e9bb33f1fd84238ed840d123accc7f3</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPeventGetRowNewSideVal</name>
      <anchorfile>pub__event_8h.html</anchorfile>
      <anchor>ade1d100c787fda6e5e797f5fdb81bca8</anchor>
      <arglist>(SCIP_EVENT *event)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>scip/pub_expression.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>scip_2pub__expression_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <includes id="type__sol_8h" name="type_sol.h" local="yes" imported="no">scip/type_sol.h</includes>
    <includes id="nlpi_2pub__expression_8h" name="nlpi/pub_expression.h" local="yes" imported="no">nlpi/pub_expression.h</includes>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPexprtreeGetVars</name>
      <anchorfile>scip_2pub__expression_8h.html</anchorfile>
      <anchor>a8f53f40f9614373d84c0e93d654799df</anchor>
      <arglist>(SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeSetVars</name>
      <anchorfile>scip_2pub__expression_8h.html</anchorfile>
      <anchor>a5628774d690600a9dcb0907f4f6aa2bc</anchor>
      <arglist>(SCIP_EXPRTREE *tree, int nvars, SCIP_VAR **vars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeAddVars</name>
      <anchorfile>scip_2pub__expression_8h.html</anchorfile>
      <anchor>ab08a7398c48311738ffc27d6f949d4f4</anchor>
      <arglist>(SCIP_EXPRTREE *tree, int nvars, SCIP_VAR **vars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeEvalSol</name>
      <anchorfile>scip_2pub__expression_8h.html</anchorfile>
      <anchor>af9cb927dfa43ac977dc23dcd622d444b</anchor>
      <arglist>(SCIP *scip, SCIP_EXPRTREE *tree, SCIP_SOL *sol, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeEvalIntGlobalBounds</name>
      <anchorfile>scip_2pub__expression_8h.html</anchorfile>
      <anchor>af7d9b4be3449184fc528d92e10f8c0d8</anchor>
      <arglist>(SCIP *scip, SCIP_EXPRTREE *tree, SCIP_Real infinity, SCIP_INTERVAL *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeEvalIntLocalBounds</name>
      <anchorfile>scip_2pub__expression_8h.html</anchorfile>
      <anchor>a0193741c916711713836dd9f239cc155</anchor>
      <arglist>(SCIP *scip, SCIP_EXPRTREE *tree, SCIP_Real infinity, SCIP_INTERVAL *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreePrintWithNames</name>
      <anchorfile>scip_2pub__expression_8h.html</anchorfile>
      <anchor>abbc3128774088cf5649e6dadf02da9de</anchor>
      <arglist>(SCIP_EXPRTREE *tree, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprtreeFindVar</name>
      <anchorfile>scip_2pub__expression_8h.html</anchorfile>
      <anchor>abf30b7e88de6d8ccd7eee9273af32e4b</anchor>
      <arglist>(SCIP_EXPRTREE *tree, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeRemoveFixedVars</name>
      <anchorfile>scip_2pub__expression_8h.html</anchorfile>
      <anchor>a3c2e2af35abcd80fc1ea30116c38efb4</anchor>
      <arglist>(SCIP_EXPRTREE *tree, SCIP_Bool *changed)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nlpi/pub_expression.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/nlpi/</path>
    <filename>nlpi_2pub__expression_8h</filename>
    <includes id="type__expression_8h" name="type_expression.h" local="yes" imported="no">nlpi/type_expression.h</includes>
    <includes id="type__exprinterpret_8h" name="type_exprinterpret.h" local="yes" imported="no">nlpi/type_exprinterpret.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPR_DEGREEINFINITY</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>af2c49f6e823a4d26d3c442e5566285aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPexpropGetName</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>af1a80dd43d279ebabeb99a717a61efc7</anchor>
      <arglist>(SCIP_EXPROP op)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexpropGetNChildren</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a7e5dbcdd03aeed7eee8bd07fc2d44eb2</anchor>
      <arglist>(SCIP_EXPROP op)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprCreate</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>ab182312443de687163956ea5e879791b</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR **expr, SCIP_EXPROP op,...)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprCopyDeep</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a354f2c4744f18c6c621192558b434106</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR **targetexpr, SCIP_EXPR *sourceexpr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprFreeDeep</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a8a03414e3d699a303f5481810d115de4</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR **expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPROP</type>
      <name>SCIPexprGetOperator</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a0fc57c277df5a8999f286180f7d23552</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprGetNChildren</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a241d9fbdf133cf93d35215eb185ef7c8</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPR **</type>
      <name>SCIPexprGetChildren</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a5bf46444b29de80b56547c3ea29c2b32</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprGetOpIndex</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>af09996e9175416dae554e76427d3bb93</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprGetOpReal</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a30db4adf5a04ae548b55c27490a1a4b5</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPexprGetOpData</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a7d777c7ac53d49fe631f86f1039d1d7a</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprGetIntPowerExponent</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a4f54dbfc15691b82db07f76b33cd078f</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprCreateLinear</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a53ace65b92ef84094762513c03ac80fc</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR **expr, int nchildren, SCIP_EXPR **children, SCIP_Real *coefs, SCIP_Real constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPexprGetLinearCoefs</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a3622b0e8b3f42225474447d2a5d52452</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprGetLinearConstant</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a6d5b654b0f5d330ea5d95c308f545d19</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprCreateQuadratic</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a1f5ffb5b53e837bc203213a532834e84</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR **expr, int nchildren, SCIP_EXPR **children, int nquadelems, SCIP_QUADELEM *quadelems)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_QUADELEM *</type>
      <name>SCIPexprGetQuadElements</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a086c11beaf74e9b931286930ccc45d25</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprGetNQuadElements</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a95b96513dec722d7084d81b800511006</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprCreatePolynom</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a8ce8542de5eed087e691bee5e8785a0d</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR **expr, int nchildren, SCIP_EXPR **children, int nmonoms, SCIP_EXPRDATA_MONOM **monoms, SCIP_Real constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRDATA_MONOM **</type>
      <name>SCIPexprGetPolynomMonoms</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>ac9a4cfb004237c2ed75f9dea2e21adce</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprGetPolynomNMonoms</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a694132f89a100be83c40a85910fd46c8</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprGetPolynomConstant</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>acb901541f821949f92cf0725b8b9e562</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprAddPolynomMonoms</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>ac153390b491f3b4dac8bf8d04a73b581</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR *expr, int nmonoms, SCIP_EXPRDATA_MONOM **monoms)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprChgPolynomConstant</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>ad17cd374d2b0cebf6df09f2c87b840a4</anchor>
      <arglist>(SCIP_EXPR *expr, SCIP_Real constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprCreatePolynomMonom</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>ab21c3b88d77569bdc112232ab8236f61</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRDATA_MONOM **monom, SCIP_Real coef, int nfactors, int *childidxs, SCIP_Real *exponents)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPexprGetPolynomMonomCoef</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a8d7ffa2c4158b1ab59044a394d045261</anchor>
      <arglist>(SCIP_EXPRDATA_MONOM *monom)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprGetPolynomMonomNFactors</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>ad471c91be1e35f370b8e4ea3fb70f952</anchor>
      <arglist>(SCIP_EXPRDATA_MONOM *monom)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>SCIPexprGetPolynomMonomChildIndices</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a141642f859f905bf43478187df660bcf</anchor>
      <arglist>(SCIP_EXPRDATA_MONOM *monom)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPexprGetPolynomMonomExponents</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>ad5aee5f479ea84704cbe5938d21efb00</anchor>
      <arglist>(SCIP_EXPRDATA_MONOM *monom)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexprHasParam</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a78cd27ed57cd9c239e1bbc5d304bf7e1</anchor>
      <arglist>(SCIP_EXPR *expr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprGetMaxDegree</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a433024bed75a9372ce8b30d82ec97dc3</anchor>
      <arglist>(SCIP_EXPR *expr, int *maxdegree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprEval</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>ae99abdd201bbeec826ad42e4627e64f6</anchor>
      <arglist>(SCIP_EXPR *expr, SCIP_Real *varvals, SCIP_Real *param, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprEvalInt</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>abbbedd9621e4e33d41f1af820d46fea3</anchor>
      <arglist>(SCIP_EXPR *expr, SCIP_Real infinity, SCIP_INTERVAL *varvals, SCIP_Real *param, SCIP_INTERVAL *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprSubstituteVars</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a58b1843bd0262ed5b6c92fc23156cf75</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPR *expr, SCIP_EXPR **substexprs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprReindexVars</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a4278cafac2823cd273a81007f7a209d3</anchor>
      <arglist>(SCIP_EXPR *expr, int *newindices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprPrint</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a07214bd32bbf4ea9d9e761f0cffba331</anchor>
      <arglist>(SCIP_EXPR *expr, FILE *file, const char **varnames, const char **paramnames)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeCreate</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a91157b91fbe21ecb2ba61442ec33d648</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRTREE **tree, SCIP_EXPR *root, int nvars, int nparams, SCIP_Real *params)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeCopy</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a8f39cbb2c6678b8a466ed16a904b53d5</anchor>
      <arglist>(BMS_BLKMEM *blkmem, SCIP_EXPRTREE **targettree, SCIP_EXPRTREE *sourcetree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeFree</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>ae32ebbf22e95f5c28c9baaa7a67bc2e0</anchor>
      <arglist>(SCIP_EXPRTREE **tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPR *</type>
      <name>SCIPexprtreeGetRoot</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a00b319aec4404887ce8a1cc860a83442</anchor>
      <arglist>(SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprtreeGetNVars</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a87f1b85b75cd0b5bd9107d5bc410d8f4</anchor>
      <arglist>(SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPexprtreeGetNParams</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a1a64d598f310ea0d33330aa96ed6181d</anchor>
      <arglist>(SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPexprtreeGetParamVals</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a0299ad304998c7041fb4f246844ed119</anchor>
      <arglist>(SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprtreeSetParamVal</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a02aadd64240b0aea7ba835880e8de80e</anchor>
      <arglist>(SCIP_EXPRTREE *tree, int paramidx, SCIP_Real paramval)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprtreeSetParamVals</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a2f834bce1aaddb53170d11e678afb3e1</anchor>
      <arglist>(SCIP_EXPRTREE *tree, SCIP_Real *paramvals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRINTDATA *</type>
      <name>SCIPexprtreeGetInterpreterData</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a7831d239faec0b27883ae026e85d7331</anchor>
      <arglist>(SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexprtreeHasParam</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>ab180ce02b20b12f02906dcdbcf30c861</anchor>
      <arglist>(SCIP_EXPRTREE *tree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeGetMaxDegree</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a3fd7870d751277732ff2bb76b0fcb230</anchor>
      <arglist>(SCIP_EXPRTREE *tree, int *maxdegree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprtreeSetInterpreterData</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>ad174e4bfd56c2532e0c037f9f8443aef</anchor>
      <arglist>(SCIP_EXPRTREE *tree, SCIP_EXPRINTDATA *interpreterdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeEval</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a0c4ad161b828120f5c16d3df89bfc574</anchor>
      <arglist>(SCIP_EXPRTREE *tree, SCIP_Real *varvals, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeEvalInt</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a6651f0a87111d63aff16d7d5a3388920</anchor>
      <arglist>(SCIP_EXPRTREE *tree, SCIP_Real infinity, SCIP_INTERVAL *varvals, SCIP_INTERVAL *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPexprtreeSubstituteVars</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a709213a9aa36499fd93e8468affb7ea7</anchor>
      <arglist>(SCIP_EXPRTREE *tree, SCIP_EXPR **substexprs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPexprtreePrint</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a1097f2add7edfd199199f2344ba56f7c</anchor>
      <arglist>(SCIP_EXPRTREE *tree, FILE *file, const char **varnames, const char **paramnames)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPquadelemSort</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>ad040344df322da549bb1083629632a44</anchor>
      <arglist>(SCIP_QUADELEM *quadelems, int nquadelems)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPquadelemSortedFind</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>a3fdd0ef020607681df3407d9514b8ec7</anchor>
      <arglist>(SCIP_QUADELEM *quadelems, int idx1, int idx2, int nquadelems, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPquadelemSqueeze</name>
      <anchorfile>nlpi_2pub__expression_8h.html</anchorfile>
      <anchor>aacce929a223789177fbbe238b57dbcb0</anchor>
      <arglist>(SCIP_QUADELEM *quadelems, int nquadelems, int *nquadelemsnew)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_fileio.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__fileio_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_File</type>
      <name>SCIP_FILE</name>
      <anchorfile>pub__fileio_8h.html</anchorfile>
      <anchor>a22f13c2f5424a536d50598c1d4a120a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_FILE *</type>
      <name>SCIPfopen</name>
      <anchorfile>pub__fileio_8h.html</anchorfile>
      <anchor>aa705f16396bcd565dda5d84e97285a25</anchor>
      <arglist>(const char *path, const char *mode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_FILE *</type>
      <name>SCIPfdopen</name>
      <anchorfile>pub__fileio_8h.html</anchorfile>
      <anchor>aab865d273d72a5d7d5880cd9a97b6192</anchor>
      <arglist>(int fildes, const char *mode)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>SCIPfread</name>
      <anchorfile>pub__fileio_8h.html</anchorfile>
      <anchor>a8f323395916ea7c152cbb633718ba031</anchor>
      <arglist>(void *ptr, size_t size, size_t nmemb, SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>SCIPfwrite</name>
      <anchorfile>pub__fileio_8h.html</anchorfile>
      <anchor>a09750b4f9ad56902f97600b0110021a7</anchor>
      <arglist>(const void *ptr, size_t size, size_t nmemb, SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPfprintf</name>
      <anchorfile>pub__fileio_8h.html</anchorfile>
      <anchor>a15237fdcc08a349c61d408b90874a16a</anchor>
      <arglist>(SCIP_FILE *stream, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPfputc</name>
      <anchorfile>pub__fileio_8h.html</anchorfile>
      <anchor>aa25121aa9afd7b87908e3fc3b520263b</anchor>
      <arglist>(int c, SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPfputs</name>
      <anchorfile>pub__fileio_8h.html</anchorfile>
      <anchor>adc525c50bda842fef26db888914e5916</anchor>
      <arglist>(const char *s, SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPfgetc</name>
      <anchorfile>pub__fileio_8h.html</anchorfile>
      <anchor>a0f22cdf0a95c7813ae1acf754883ada9</anchor>
      <arglist>(SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>SCIPfgets</name>
      <anchorfile>pub__fileio_8h.html</anchorfile>
      <anchor>ac24cb515fe956a000f4d0e400dc240d2</anchor>
      <arglist>(char *s, int size, SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPfflush</name>
      <anchorfile>pub__fileio_8h.html</anchorfile>
      <anchor>ae6d7f74418402fb4c96de4fbeced99e1</anchor>
      <arglist>(SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPfseek</name>
      <anchorfile>pub__fileio_8h.html</anchorfile>
      <anchor>a28650dfa136a2b969a20e587e9765d49</anchor>
      <arglist>(SCIP_FILE *stream, long offset, int whence)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPrewind</name>
      <anchorfile>pub__fileio_8h.html</anchorfile>
      <anchor>a6259fca58346c33e7ee60d0ede20e9db</anchor>
      <arglist>(SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>SCIPftell</name>
      <anchorfile>pub__fileio_8h.html</anchorfile>
      <anchor>a92eba865f4b5ba8880c77a68e9e8b34d</anchor>
      <arglist>(SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPfeof</name>
      <anchorfile>pub__fileio_8h.html</anchorfile>
      <anchor>a5bc1b4e97ce7f3253e961eabcf6fca33</anchor>
      <arglist>(SCIP_FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPfclose</name>
      <anchorfile>pub__fileio_8h.html</anchorfile>
      <anchor>ac6526bcd675ad869828ac1fdba82d50e</anchor>
      <arglist>(SCIP_FILE *fp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_heur.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__heur_8h</filename>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__heur_8h" name="type_heur.h" local="yes" imported="no">scip/type_heur.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>a90df30a2ea3b521c210f2a7e640b7fb7</anchor>
      <arglist>(SCIPheurComp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HEURDATA *</type>
      <name>SCIPheurGetData</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>a479444450c1bf328ef836a74ca7dc460</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPheurSetData</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>afbf429f4901517effecef3e1a66ef7ae</anchor>
      <arglist>(SCIP_HEUR *heur, SCIP_HEURDATA *heurdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPheurGetName</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>af66670fec7730f447b1569c409003f8d</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPheurGetDesc</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>a6b313da40f29c3b8875852f467f5df6e</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>SCIPheurGetDispchar</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>a0ead93f69ea40d1f3c6148eed16bf696</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HEURTIMING</type>
      <name>SCIPheurGetTimingmask</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>a495559ddb215f9c1b10f78e627acc078</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPheurSetTimingmask</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>a77d658c96f7455e763043e51393e3aca</anchor>
      <arglist>(SCIP_HEUR *heur, SCIP_HEURTIMING timingmask)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPheurUsesSubscip</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>a64bdd128970d006bc17c83db9eada0bd</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPheurGetPriority</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>a607e35734789103926b0cb3a443be45d</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPheurGetFreq</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>aba90dda6264c94e48ef142d9aacd90fd</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPheurSetFreq</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>a6ee4ec3fb26995f2b0c3c61b8b0cbe0a</anchor>
      <arglist>(SCIP_HEUR *heur, int freq)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPheurGetFreqofs</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>a873c5e55c00ae21950c6959cac37c323</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPheurGetMaxdepth</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>aa62127ccb7962dd376bf9659269ebd52</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPheurGetNCalls</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>a8039e238a7af4384155fed438b67f1ca</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPheurGetNSolsFound</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>a57690e03961390238b2ac914214beaad</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPheurGetNBestSolsFound</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>a657363116364c13415beeca97c0d58fe</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPheurIsInitialized</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>af24edbc2ad60dacb52a1eeef868e7350</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPheurGetTime</name>
      <anchorfile>pub__heur_8h.html</anchorfile>
      <anchor>ad2b70dc6374ce038b604cdade296ebc4</anchor>
      <arglist>(SCIP_HEUR *heur)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_implics.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__implics_8h</filename>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <includes id="type__implics_8h" name="type_implics.h" local="yes" imported="no">scip/type_implics.h</includes>
    <member kind="function">
      <type>int</type>
      <name>SCIPcliqueSearchVar</name>
      <anchorfile>pub__implics_8h.html</anchorfile>
      <anchor>ae7ddba099889aa42a852089b5e3d39b0</anchor>
      <arglist>(SCIP_CLIQUE *clique, SCIP_VAR *var, SCIP_Bool value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPcliqueHasVar</name>
      <anchorfile>pub__implics_8h.html</anchorfile>
      <anchor>a918b116bd0572f2f5328a127d9c4e02e</anchor>
      <arglist>(SCIP_CLIQUE *clique, SCIP_VAR *var, SCIP_Bool value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcliqueGetNVars</name>
      <anchorfile>pub__implics_8h.html</anchorfile>
      <anchor>a5ca4e2f84e7829eeaffdf43d018ff568</anchor>
      <arglist>(SCIP_CLIQUE *clique)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPcliqueGetVars</name>
      <anchorfile>pub__implics_8h.html</anchorfile>
      <anchor>a9412a1de52bdfcb107ccfefb555bf680</anchor>
      <arglist>(SCIP_CLIQUE *clique)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool *</type>
      <name>SCIPcliqueGetValues</name>
      <anchorfile>pub__implics_8h.html</anchorfile>
      <anchor>acefba0ff4e87e189f6356124090ab786</anchor>
      <arglist>(SCIP_CLIQUE *clique)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcliqueGetId</name>
      <anchorfile>pub__implics_8h.html</anchorfile>
      <anchor>a1a4c7d99f653e844d617243114a38086</anchor>
      <arglist>(SCIP_CLIQUE *clique)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_lp.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__lp_8h</filename>
    <includes id="type__set_8h" name="type_set.h" local="yes" imported="no">scip/type_set.h</includes>
    <includes id="type__stat_8h" name="type_stat.h" local="yes" imported="no">scip/type_stat.h</includes>
    <includes id="type__lpi_8h" name="type_lpi.h" local="yes" imported="no">scip/type_lpi.h</includes>
    <includes id="type__lp_8h" name="type_lp.h" local="yes" imported="no">scip/type_lp.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <includes id="type__sol_8h" name="type_sol.h" local="yes" imported="no">scip/type_sol.h</includes>
    <member kind="function">
      <type>void</type>
      <name>SCIPcolPrint</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a6a539212b0ee6a055241e6efbbffd01f</anchor>
      <arglist>(SCIP_COL *col, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPcolSort</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a9280fc67dc5f3384c3fb2b609cba1f49</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcolGetObj</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a60e8cc2149d3713998ce665e7ab26dba</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcolGetLb</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>aa52fb121ea929652cabd1f106bc237b8</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcolGetUb</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>aae55f446379f772ff2fde480b16d4fe3</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcolGetBestBound</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a99493443fa15a7e69b29de402f83ef65</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcolGetPrimsol</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>aad8dfe4530e50dcace40973f53bcb2d8</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcolGetMinPrimsol</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a1b82154dd7c59d7e86ab15230291a30f</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcolGetMaxPrimsol</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>af388065f45fe597b72454523efb2587d</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BASESTAT</type>
      <name>SCIPcolGetBasisStatus</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>adb8546b57618b5cca7c70b7fa1d32192</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPcolGetVar</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>ae94430cb664027be0dd4534f2dc87147</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcolGetIndex</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a9794af9c00858606285e18b8b5085cbc</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPcolIsIntegral</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a3e350bcbe852993a8d166d66a15fcd81</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPcolIsRemovable</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a2e6a046236d3af0b0d4752114d89888b</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcolGetLPPos</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a26d319bbff50575ce36abf598f108a35</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcolGetLPDepth</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>ad0233da25643a27180d04e1568655d48</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPcolIsInLP</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>ac396a6cdc07f780aa8132555922778a5</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcolGetNNonz</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a68a6d090a09fb49728514c911c9a0f42</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcolGetNLPNonz</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>abe411088770afcdc19a58b78e7cab426</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW **</type>
      <name>SCIPcolGetRows</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a78725376bb4d4742fd6e10387d745e88</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPcolGetVals</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>aaae6a87005ee5bc57e4d0d413148243d</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPcolGetStrongbranchNode</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>ab484986a7593c61bc7fb72968e80c3a9</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcolGetNStrongbranchs</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>ac0ef7353bffa2053bd47d84d5bbd521a</anchor>
      <arglist>(SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDTYPE</type>
      <name>SCIPboundtypeOpposite</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>aeffe67ec8bab6c3e621f75c616042ea5</anchor>
      <arglist>(SCIP_BOUNDTYPE boundtype)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>ab2d1441c7477d08b18fc922b91178256</anchor>
      <arglist>(SCIProwComp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIProwLock</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>aa35d3025a3738c05ccdb24032fe83506</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIProwUnlock</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>aab40ea4ee2b87d8669176b7c78832447</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetScalarProduct</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a210e47e1ef0847b71ed99bef762aac94</anchor>
      <arglist>(SCIP_ROW *row1, SCIP_ROW *row2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetParallelism</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a3e6d355bb8bcca14c6cfd5a3c5c2194e</anchor>
      <arglist>(SCIP_ROW *row1, SCIP_ROW *row2, char orthofunc)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetOrthogonality</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a1da290281a2143a814cec5a36b439417</anchor>
      <arglist>(SCIP_ROW *row1, SCIP_ROW *row2, char orthofunc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIProwPrint</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a3ebb077e0c2b1d03320f406441b1fdfc</anchor>
      <arglist>(SCIP_ROW *row, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIProwSort</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a01e2f5babc7d250aab1d195b228af56b</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIProwGetNNonz</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a4bbbf624eade774dee24d0c489c7d435</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIProwGetNLPNonz</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a7b035934338a39447a0612291d389a4c</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_COL **</type>
      <name>SCIProwGetCols</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>ae7bce0efc6e4a007f7d50f6f93b38c69</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIProwGetVals</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a6bdc0a46ccec39f94e8d09f205dc0191</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetConstant</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>acf6752903a7ed39e049f259957433f0e</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetNorm</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a7d29e684cea78b9ef37bd56ec1b14ae8</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetSumNorm</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>aab46833330d62c0e6daa82eb1566c27f</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetLhs</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a0a8911ae1d2af432cef8e29e794d3c3c</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetRhs</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a68fba35b3a070fe4b08d39dde3e44f20</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetDualsol</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>ae8bbb1d51edf13ff67d505b95f1bb0e3</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIProwGetDualfarkas</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>ac28481db594a2070bf9e9b0cb72dc23d</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BASESTAT</type>
      <name>SCIProwGetBasisStatus</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>af3c45c4b08cb081f56efc7b125368517</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIProwGetName</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a221966d7fe396296f24e35e85d2a43b9</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIProwGetIndex</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>ac7cab1ce5f56af4a19f945b8471d151f</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIProwIsIntegral</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a01bc0fcf1d610b60e8a241521bc74697</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIProwIsLocal</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a8d12128cf2298b27d57bcaaa07f261fc</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIProwIsModifiable</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a0efbf798e1b4612a152c201575ec2b0f</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIProwIsRemovable</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>aa6d02abf025be8ccd574bddae53fffa2</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIProwIsInGlobalCutpool</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a54571516b18483fe94128e3e4e4fe77f</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIProwGetLPPos</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a801782a69e9e78029d8cd98698557c3b</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIProwGetLPDepth</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>a28d5a7bf188451877d64571b9cb43fd5</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIProwIsInLP</name>
      <anchorfile>pub__lp_8h.html</anchorfile>
      <anchor>ae0a474274028cc639f4e5d647f286613</anchor>
      <arglist>(SCIP_ROW *row)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_message.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__message_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>SCIPerrorMessage</name>
      <anchorfile>pub__message_8h.html</anchorfile>
      <anchor>a354566c209c3a7fe5c870d4ee8c07bc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPwarningMessage</name>
      <anchorfile>pub__message_8h.html</anchorfile>
      <anchor>ab52c354bd36df63bc421135eebcc0cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPdebug</name>
      <anchorfile>pub__message_8h.html</anchorfile>
      <anchor>a546d1e7b57d2c434d452c1d755a44b2c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPdebugMessage</name>
      <anchorfile>pub__message_8h.html</anchorfile>
      <anchor>a827dc20f17fd394bf206451a2289292e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPdebugPrintf</name>
      <anchorfile>pub__message_8h.html</anchorfile>
      <anchor>abcfed97d6962c490af7c0a9a53c2f2b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPerrorMessage</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a354566c209c3a7fe5c870d4ee8c07bc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPwarningMessage</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>ab52c354bd36df63bc421135eebcc0cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPdebug</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a546d1e7b57d2c434d452c1d755a44b2c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPdebugMessage</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a827dc20f17fd394bf206451a2289292e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPdebugPrintf</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>abcfed97d6962c490af7c0a9a53c2f2b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmessagehdlrSetData</name>
      <anchorfile>pub__message_8h.html</anchorfile>
      <anchor>acf969c1804b7aa63cd2582b4e8bd538e</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, SCIP_MESSAGEHDLRDATA *messagehdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_MESSAGEHDLRDATA *</type>
      <name>SCIPmessagehdlrGetData</name>
      <anchorfile>pub__message_8h.html</anchorfile>
      <anchor>ad0bfa8fde9490ff208e6f399ea5ad949</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessagePrintErrorHeader</name>
      <anchorfile>pub__message_8h.html</anchorfile>
      <anchor>afeb0523e667af37548cc96ffafa392fd</anchor>
      <arglist>(const char *sourcefile, int sourceline)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessagePrintError</name>
      <anchorfile>pub__message_8h.html</anchorfile>
      <anchor>a055450874acdb78d17cc5292ba833919</anchor>
      <arglist>(const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessagePrintWarningHeader</name>
      <anchorfile>pub__message_8h.html</anchorfile>
      <anchor>a3dcf610e5d6adcd3422629c0f91b57ab</anchor>
      <arglist>(const char *sourcefile, int sourceline)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmessagePrintWarning</name>
      <anchorfile>pub__message_8h.html</anchorfile>
      <anchor>ab64f3577a45cd7b3eda856c15b745769</anchor>
      <arglist>(const char *formatstr,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_misc.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__misc_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpqueueCreate</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a0ff8c437c92612853adabb903362fe17</anchor>
      <arglist>(SCIP_PQUEUE **pqueue, int initsize, SCIP_Real sizefac, SCIP_DECL_SORTPTRCOMP((*ptrcomp)))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPpqueueFree</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>abc7da0a14aba48a1906ab62c872ca062</anchor>
      <arglist>(SCIP_PQUEUE **pqueue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPpqueueClear</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a7eb08f5cc4ffe7845de3433b892e632e</anchor>
      <arglist>(SCIP_PQUEUE *pqueue)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpqueueInsert</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ad786b28e3b3f418aeaf93bd43dae8d8c</anchor>
      <arglist>(SCIP_PQUEUE *pqueue, void *elem)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPpqueueRemove</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>adfc279ce0751db7702262ffe6e45f911</anchor>
      <arglist>(SCIP_PQUEUE *pqueue)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPpqueueFirst</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a52edb6c94c11d3a4bae5d7ce9449ed9d</anchor>
      <arglist>(SCIP_PQUEUE *pqueue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpqueueNElems</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ade8f0e94c24f95e49768652303f6cd64</anchor>
      <arglist>(SCIP_PQUEUE *pqueue)</arglist>
    </member>
    <member kind="function">
      <type>void **</type>
      <name>SCIPpqueueElems</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a3233b5a2a37b51a962e2bfdd9339bd3a</anchor>
      <arglist>(SCIP_PQUEUE *pqueue)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcalcHashtableSize</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a88998585e83f8b9634e3de30c0064b24</anchor>
      <arglist>(int minsize)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashtableCreate</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a710093a3fde556c004b45e027fc95544</anchor>
      <arglist>(SCIP_HASHTABLE **hashtable, BMS_BLKMEM *blkmem, int tablesize, SCIP_DECL_HASHGETKEY((*hashgetkey)), SCIP_DECL_HASHKEYEQ((*hashkeyeq)), SCIP_DECL_HASHKEYVAL((*hashkeyval)), void *userptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPhashtableFree</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a196b167ef57e488adbf52344f6230285</anchor>
      <arglist>(SCIP_HASHTABLE **hashtable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashtableInsert</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ad499ca1ae44ec958411757d0cb8c2f74</anchor>
      <arglist>(SCIP_HASHTABLE *hashtable, void *element)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashtableSafeInsert</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a52179ec979e131317ffb07c9c9579ccb</anchor>
      <arglist>(SCIP_HASHTABLE *hashtable, void *element)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPhashtableRetrieve</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a38af5e199e72c2d1e9e30a50b92f02de</anchor>
      <arglist>(SCIP_HASHTABLE *hashtable, void *key)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhashtableExists</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a21e69c964ab3785e1aaa36b2af74c720</anchor>
      <arglist>(SCIP_HASHTABLE *hashtable, void *element)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashtableRemove</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ad1088f82af9c0d3c1768e40aff2eb588</anchor>
      <arglist>(SCIP_HASHTABLE *hashtable, void *element)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPhashtablePrintStatistics</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a46f9738ab0b5c1a2039d5183224dbd67</anchor>
      <arglist>(SCIP_HASHTABLE *hashtable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_HASHKEYEQ</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a52b1c0d0843ed79188f9372f1a5a6965</anchor>
      <arglist>(SCIPhashKeyEqString)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_HASHKEYVAL</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a8c05b46e1e9846136e6db221a663ae91</anchor>
      <arglist>(SCIPhashKeyValString)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashmapCreate</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aa89c4efb224675b9eb02d8077d66b589</anchor>
      <arglist>(SCIP_HASHMAP **hashmap, BMS_BLKMEM *blkmem, int mapsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPhashmapFree</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a0608b946119ee33eddccdc7e11b536a5</anchor>
      <arglist>(SCIP_HASHMAP **hashmap)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashmapInsert</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a6c5891f54d8ad4b6687fbf656f7c790a</anchor>
      <arglist>(SCIP_HASHMAP *hashmap, void *origin, void *image)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPhashmapGetImage</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a94d0a3d1317bd2c826aec734dfe7a578</anchor>
      <arglist>(SCIP_HASHMAP *hashmap, void *origin)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashmapSetImage</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a775b2bba1e36c6d7a6a88bad540cd829</anchor>
      <arglist>(SCIP_HASHMAP *hashmap, void *origin, void *image)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhashmapExists</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aabc086ffe2d5d7a30c78fb6801d9824d</anchor>
      <arglist>(SCIP_HASHMAP *hashmap, void *origin)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashmapRemove</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>add88c803cd5317b9dd4d3cb67356c697</anchor>
      <arglist>(SCIP_HASHMAP *hashmap, void *origin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPhashmapPrintStatistics</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a48965691c4aec75bddaadc03c3d1aabc</anchor>
      <arglist>(SCIP_HASHMAP *hashmap)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhashmapIsEmpty</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aaf786e6a1c5f570160cfbf980712ec97</anchor>
      <arglist>(SCIP_HASHMAP *hashmap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPhashmapGetNEntries</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aa42e2b5696030d88b617b59635bca41c</anchor>
      <arglist>(SCIP_HASHMAP *hashmap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPhashmapGetNLists</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a1c23f5d8b09596f36095c538a3ca8b90</anchor>
      <arglist>(SCIP_HASHMAP *hashmap)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HASHMAPLIST *</type>
      <name>SCIPhashmapGetList</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a1b4928cccf29294eb7a0eef8d513eaf0</anchor>
      <arglist>(SCIP_HASHMAP *hashmap, int listindex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPhashmapListGetNEntries</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ae5407947043ae5775285811aaca21ccd</anchor>
      <arglist>(SCIP_HASHMAPLIST *hashmaplist)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPhashmapListGetOrigin</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ae36533115853982dbe9abf07a66dbf4c</anchor>
      <arglist>(SCIP_HASHMAPLIST *hashmaplist)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPhashmapListGetImage</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ae6e3eb18475b04851577aafe1be61b41</anchor>
      <arglist>(SCIP_HASHMAPLIST *hashmaplist)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HASHMAPLIST *</type>
      <name>SCIPhashmapListGetNext</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ad112643475175485603d47d85a9a5839</anchor>
      <arglist>(SCIP_HASHMAPLIST *hashmaplist)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPhashmapRemoveAll</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>abe91bd21dcc1028a65d2dcde3566ec61</anchor>
      <arglist>(SCIP_HASHMAP *hashmap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsort</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aac0e97a29d3007027bb1b4b9ef9b0ac2</anchor>
      <arglist>(int *perm, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortInd</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a0c1fe0f152d7e0b502d39b0425bd9f32</anchor>
      <arglist>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a103836cd14d6a053128195fc7c845cce</anchor>
      <arglist>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a6a2f7719f1552e87bf42aba67f1864a7</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>adcf9f22a04f1a2b4a18cedc2c6ef6300</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aaea12378fbf19d942f8aeea2617db398</anchor>
      <arglist>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrBool</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ac2e61a64b363fc56dff42ea3d416f903</anchor>
      <arglist>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aa03ed019c7693a292dcaf8870876262b</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ab093c601bdf585ac1dc6f592559335b3</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a0e990464910f3ec7e9177d318d8a13d4</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrPtrReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a04fef28d6d8b510f279cdba0402c4835</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrRealIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ab09640f84657f886cc841369c980e9e5</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrPtrLongInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aaece7fe23fb40bde9c03a4bae2015152</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortPtrPtrLongIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a4adc99570f578746a1494d919e112117</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ada40be5d3ae456b7661463fc5fe649c9</anchor>
      <arglist>(SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a3aefb5a6ae0b10e1cea32b684aa0269c</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a895f33e4a5924acc56132a476aa1e72f</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ae38ed4f13a26993f24d9e019c0414329</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a509c605bf0b52a1a8f4bf4ecf51193c6</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealLongRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a9666bab28bc49463557807e12b67b3d9</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealRealRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>af7117ac571f15acd749a3a29690bb23c</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealRealRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aaa964d0415f1bf73405a1b2a292c60a2</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortRealRealRealBoolPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a50fda9c79356fc79b71598db49c9fe27</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>afebedfcb716eaaa657216bda67d301b6</anchor>
      <arglist>(int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a1459c044f3f78d257a8ec7aee731d5c9</anchor>
      <arglist>(int *intarray1, int *intarray2, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a61f5e6c0d4b1bc21d024e32537741509</anchor>
      <arglist>(int *intarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a8869d8fe40a7dd7e977d70265dda0431</anchor>
      <arglist>(int *intarray, SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntIntLong</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a4d46cb7f885bc61f09266f59be88615e</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a0677776b4caf087af2b2fce521926088</anchor>
      <arglist>(int *intarray1, int *intarray2, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aebfffc0e592706e78299db4a6b2adc7f</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntPtrReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a6a126e14098adc085f3ee9f55b9c8c8d</anchor>
      <arglist>(int *intarray, void **ptrarray, SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortIntPtrIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ae15ccdf62d59b3384f72656ed0848069</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortLong</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a9538fe598b57ec44a3d80cfb18094440</anchor>
      <arglist>(SCIP_Longint *longarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortLongPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aa12c12f4875f5297607b53fcce5078c0</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortLongPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a7e4919b0b7d0459d9d7a04ca40541bce</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortLongPtrPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a8e73c014a70752547f7aed211f268b20</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortLongPtrPtrIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a22eff78752d127b97492bbcb70b66c43</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortLongPtrPtrBoolInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a3bc9e484cf827b8061b60bb5723a4278</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDown</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a0d7c86da256aedb5fa4773376ac73e54</anchor>
      <arglist>(int *perm, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownInd</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>afb82dba8399e90104928045d683f3b48</anchor>
      <arglist>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a1d8fe6915a069a8c1e9af1fa18be54a9</anchor>
      <arglist>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ae3e65d3151ef6438ec2e75ae5eac544f</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a411d1af78dca509d0341f297f13526d0</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a4d581268144e15363728a08b90a1d124</anchor>
      <arglist>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrBool</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ae14243bcbee05b69985fb4f53a57eb14</anchor>
      <arglist>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ad961a8f2a993686f622cc54779c1dbb7</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a9c82a6ec22c88c581fe469d62d7bbff9</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a186399601a8f141b3fa80daa86325044</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrPtrReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a3f4625f35544d81cf6dd9caace7290ff</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrRealIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a43b302ebc8ac0ebe0f63ea157d26a51b</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrPtrLongInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ab43cef21fdbf1c9c17dfde17598c0c4a</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownPtrPtrLongIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a1db3f9de34af7bd405cbf5c50f74346d</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aa623c01168142d857c65130066ba26ff</anchor>
      <arglist>(SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a84840a187b87bd89c6fd1c7884013b99</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>add4f5e75a6b3302b8f95684bd73a8889</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a2e907842a928670151b66d0dd0e3bcc8</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a9479fd1bd7c85ee7fc8edc1c3f938e53</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealLongRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aadec0881bdfa6a228e0e666a7490a0c2</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealRealRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a50532e082cb45f17fd5bccf1b242e785</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealRealRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a4052498e105a5fd110f63d9fff7cbf0a</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownRealRealRealBoolPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aa98f80c21490cc4751fd2032348a0f0f</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>afc2c490292d72a2c0bba1643fcf327a5</anchor>
      <arglist>(int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a01925789e2248eb75d8285ef887e0640</anchor>
      <arglist>(int *intarray1, int *intarray2, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a55b71add7fd01d9b377f78a42d16cc64</anchor>
      <arglist>(int *intarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>afe3012bbb5eb43bc8757afccafb82d03</anchor>
      <arglist>(int *intarray, SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntIntLong</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aea667c42803705ecdbcee0f5a8248540</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a775d4027f044f54761709621a1efb26a</anchor>
      <arglist>(int *intarray1, int *intarray2, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a3264e0be63d9cc1179183ff0185057c7</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownIntPtrIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a31c092ded149d84097c1b16b6a5190a5</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownLong</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a65b6dcbe8e2a19882877f75ca0b3bf7a</anchor>
      <arglist>(SCIP_Longint *longarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownLongPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a02c0c212fcce997d7fd828cba495cbbf</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownLongPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>afbe313d646e84532917af8565963b57d</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownLongPtrPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a5472b21dca58ff8bb22c87182ab9644b</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownLongPtrPtrIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a643e99ceae9a6dc322f115c435dd9af5</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortDownLongPtrPtrBoolInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aabf37c20afcb335e4ef35d12e955804a</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertInd</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ae2064b5cd92cc45fb9d510104589cee4</anchor>
      <arglist>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int keyval, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a4427b0480b1828fbb147f4f1fd076e0a</anchor>
      <arglist>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a7c649bab2063a9ec9d2508ca8a3a8e11</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a715b19d173cfebf588b51d5d1cbc79b1</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a364c458d4fa0b783a0452263b07c5bff</anchor>
      <arglist>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrBool</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ab11b964de36bc6b822a16004f045f874</anchor>
      <arglist>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Bool field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aad8a60c4001e74ffb4f7d64b10eae857</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int field1val, int field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a23e1ad4bea472fe6dcaed221695c5282</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a5539ff2458b55ec32187fe533b573271</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, int field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrPtrReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ace35c49d87a9b2e01ef95a8a6d31b3da</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Real field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrRealIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>acdfc5d5a53724ac57f4ecc5c3eae0010</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int field2val, int field3val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrPtrLongInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a2ce820972c1593f60395478972d757db</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Longint field2val, int field3val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertPtrPtrLongIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>adfbd70fbd64699c00ff8b8091a20f04b</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Longint field2val, int field3val, int field4val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a3154f2e82922e7b8c0045e352a85a64d</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray, SCIP_Real keyval, void *field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a10993c4c2e11603bb26ffd22f1365214</anchor>
      <arglist>(SCIP_Real *realarray, SCIP_Real keyval, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a846a6722fb2d7272ff181ddbc8a9e0ee</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, SCIP_Real keyval, int field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a164916096b95ee0d0f23a8bd0188f0ad</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, void **ptrarray, SCIP_Real keyval, int field1val, void *field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ad79f5f642c1dc1628db82b4f433970bb</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, void *field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealLongRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>acab09b59ea880771f512a232bd0e39cb</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, SCIP_Real keyval, SCIP_Longint field1val, SCIP_Real field2val, int field3val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealRealRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ab3aea21f74922e2398ddc91bc36b2937</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, int field3val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealRealRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a8cb2d1b5a3929b7eb7e5e0a092060212</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, void *field3val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertRealRealRealBoolPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a7842b32bc93d03aab591c73c20a4eeae</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, SCIP_Bool field3val, void *field4val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ab35b6ab1aa1afacb639645cbd3d6da2a</anchor>
      <arglist>(int *intarray, int keyval, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a4ce997cb25feb88b99e49af8d4179e03</anchor>
      <arglist>(int *intarray1, int *intarray2, int keyval, int field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a8b049ec155175cd33ddc2ba256f48bec</anchor>
      <arglist>(int *intarray, void **ptrarray, int keyval, void *field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a1a7d7113bd4f879067bb46dce2c4569f</anchor>
      <arglist>(int *intarray, SCIP_Real *realarray, int keyval, SCIP_Real field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntIntLong</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a97c11f2492ad48afda60c7225ddcdc73</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int keyval, int field1val, SCIP_Longint field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a45e75a7859f5cc4914c7fcce76a6ba31</anchor>
      <arglist>(int *intarray1, int *intarray2, void **ptrarray, int keyval, int field1val, void *field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ac7aca851da56d59c9aaa48419fa017de</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Real *realarray, int keyval, int field1val, SCIP_Real field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntPtrReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ab65dc0d69d417cc5e5e9edf28878bb00</anchor>
      <arglist>(int *intarray, void **ptrarray, SCIP_Real *realarray, int keyval, void *field1val, SCIP_Real field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertIntPtrIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aaee99553fcd8778778b968d059570ff6</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int keyval, void *field1val, int field2val, SCIP_Real field3val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertLong</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>afa2a6cc05179d749bf98bb641dad8fa7</anchor>
      <arglist>(SCIP_Longint *longarray, SCIP_Longint keyval, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertLongPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a1350bbcdb10e95602be3eeef841e8c73</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Longint keyval, void *field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertLongPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a3f6b4096d58ce52a04019553ecfabc2f</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int *intarray, SCIP_Longint keyval, void *field1val, int field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertLongPtrPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a005253dca42abf1d49a528972340b8f7</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, SCIP_Longint keyval, void *field1val, void *field2val, int field3val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertLongPtrPtrIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a6504f5c8288147bf395b3144e509f534</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_Longint keyval, void *field1val, void *field2val, int field3val, int field4val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertLongPtrPtrBoolInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ae684911dd4bd6d357cf190299b7bbb2f</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, SCIP_Longint keyval, void *field1val, void *field2val, SCIP_Bool field3val, int field4val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownInd</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a008f8e62fc22753bf15427599249f60f</anchor>
      <arglist>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int keyval, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a06ca299d54e4d080990b857c59c059aa</anchor>
      <arglist>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a43e459e8ab6e1dfae82507137af90e7f</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ad8c36ebb5fc8207a5224cffafa3a9da2</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ab529e3bda5a7ebe42fad984cdf02f876</anchor>
      <arglist>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrBool</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a5d4f504a6c47c4b8acc33c34d89807e0</anchor>
      <arglist>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Bool field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a731575b28af6efc5bae9a5197e125b95</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int field1val, int field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a21c0c31330a729872c2c56f37a332e34</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ae0c0f57adbe5a2e374a2fad2dfbda29a</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, int field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrPtrReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aa012d481a03804205adb52ea2e92fe69</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Real field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrRealIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a48eb3f36880bfdd964eae293c40393f2</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int field2val, int field3val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrPtrLongInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>accdca459181c5ae513e03c852ea308af</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Longint field2val, int field3val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownPtrPtrLongIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a56ed58fae1a3892280220c739e0b18d2</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Longint field2val, int field3val, int field4val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a6b82d2f8d9709ee29bf786afccc9ba03</anchor>
      <arglist>(SCIP_Real *realarray, SCIP_Real keyval, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a8c8975eb7e76aabb09c4fa382e111469</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray, SCIP_Real keyval, void *field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a49874f1a4ce14a05c9cfd0ee198174ea</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, SCIP_Real keyval, int field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aff0d11ec85379b1964fb778edd622af2</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, void **ptrarray, SCIP_Real keyval, int field1val, void *field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a4e0a8f9745d49f7a8d5c92b4fecfd531</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, void *field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealLongRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>af415ddb27848e898113b09e865982a6c</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, SCIP_Real keyval, SCIP_Longint field1val, SCIP_Real field2val, int field3val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealRealRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a201c0fdfec1485af58db347f666bd096</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, int field3val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealRealRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aae793e2c16634d76c82650b202ca2215</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, void *field3val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownRealRealRealBoolPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ae76555a140ac8176b062a20b3f058c71</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, SCIP_Bool field3val, void *field4val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a12ccea8d7b3eef8b1c72088d63d34bb6</anchor>
      <arglist>(int *intarray, int keyval, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aa7ba18b0c557a0a916b30307719da801</anchor>
      <arglist>(int *intarray1, int *intarray2, int keyval, int field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a4600bde45b459d74bc90ec24906a66bc</anchor>
      <arglist>(int *intarray, SCIP_Real *realarray, int keyval, SCIP_Real field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntIntLong</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a1a0401e9c62a7e1a1685ad8ced647f5f</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int keyval, int field1val, SCIP_Longint field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a716bb18137d3627ba9f1d5d670326559</anchor>
      <arglist>(int *intarray1, int *intarray2, void **ptrarray, int keyval, int field1val, void *field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aa888aa5ffec74c2428eacb14172dafdb</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Real *realarray, int keyval, int field1val, SCIP_Real field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ae27321f989a98ddbfb071c4a4c6a3d3e</anchor>
      <arglist>(int *intarray, void **ptrarray, int keyval, void *field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownIntPtrIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>af3b175615b292b360b0dfc6c2fcbf22b</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int keyval, void *field1val, int field2val, SCIP_Real field3val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownLong</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a7260df9b7b18c98ba80b09cf98b90fa9</anchor>
      <arglist>(SCIP_Longint *longarray, SCIP_Longint keyval, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownLongPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a280ec5fad10c6610bc32cdb3c694823c</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, SCIP_Longint keyval, void *field1val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownLongPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a0eecc3fe8bebf50d77e501dffaeae96e</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int *intarray, SCIP_Longint keyval, void *field1val, int field2val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownLongPtrPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a6fee7c5788675cfdf28892c95dc62269</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, SCIP_Longint keyval, void *field1val, void *field2val, int field3val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownLongPtrPtrIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aa418fc863fce34e687c51e704f584143</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_Longint keyval, void *field1val, void *field2val, int field3val, int field4val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecInsertDownLongPtrPtrBoolInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a02d46435eb2e3be3b97791542db9e5a5</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, SCIP_Longint keyval, void *field1val, void *field2val, SCIP_Bool field3val, int field4val, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosInd</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a1ba6bf2635678490757beddc4f0bddc2</anchor>
      <arglist>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>af6dc99f91f5c829fa749a7a997312b22</anchor>
      <arglist>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a0e84353cc889e5f4ecf7e462e7df81ca</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a3ac75cc1ed130558bf1bb5e00b84b512</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ad40dee1c116e8b6a50dcfa934c474702</anchor>
      <arglist>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrBool</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ad92cce5a5af6dfde39eccb9c7bff7358</anchor>
      <arglist>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aedc1ba8d1e287bfee8f327b46e1bf78b</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>afea706371cf2046c34058e9f1c81b4d8</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a6a605a457ed0de0f66ca95ca5c270a0d</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrPtrReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a2bbd853fd6e2651a7f61b00833b5873b</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrRealIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a019adafef0cb45339a5f171d0a0fc547</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrPtrLongInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a8a8d0602f705d27204adcf898d5e77cc</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosPtrPtrLongIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ade80bc2016ec8a9c584744cae523c856</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a898b63b8acd39bf2a668058fe5c9778e</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ad213474e1a49139686bba95381f7d97f</anchor>
      <arglist>(SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aa1847c5736a91aea66b0f1f0baf996fb</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a86f1334392ac82a6379392e6a6e5d0d0</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a09ca0b7aafd09cbb1f1e09fd1249615d</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealLongRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ad2c530ed9592706e68bf3f7be4783971</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealRealRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a9a4907c0ea7cf6def5583fc2bc974448</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealRealRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a933e721d0a2519df9080cb441e4bbc0f</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosRealRealRealBoolPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>af27dab7c724c9497338bac04b1f076af</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>afe873202aca60be08d4fb19542ef89c9</anchor>
      <arglist>(int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a8a710d458fa14f7c263497abfc82c6ba</anchor>
      <arglist>(int *intarray1, int *intarray2, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ae8864d8fae67aa06173a7b2ed7292806</anchor>
      <arglist>(int *intarray, SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntIntLong</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a077cfe1b5b9e2d490d67df8fe1eb280c</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aef5e46a1e943300fc1a8c26a6aa2841f</anchor>
      <arglist>(int *intarray1, int *intarray2, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aafd698c3897a06e8782bb8f6ac6bb388</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a12bc163a41c4f16603e4462d0c6bfc31</anchor>
      <arglist>(int *intarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntPtrReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aeb4c1cf463b06c90f3f637997755d6c4</anchor>
      <arglist>(int *intarray, void **ptrarray, SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosIntPtrIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>afba6dd480f1e08b7bd8c386fd43e9fcb</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosLong</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a761d8b092913e063d05b543434013e89</anchor>
      <arglist>(SCIP_Longint *longarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosLongPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a97ffb8d73904d1427da32adb9b2be1c9</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosLongPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ae4bdf5ad1bc8297b852357cda0e9736c</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosLongPtrPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aae3667acc4ee15633552653bd26c8960</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosLongPtrPtrIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>af6b4e245d8095e5721dfa66d5a28a76a</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosLongPtrPtrBoolInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a3943216cbc8a77f7e25e4924498f1ba2</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownInd</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ab783363ddf2ba340e97bf6747f264dde</anchor>
      <arglist>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ab0954e7426d6d10c3a5ae9401523fb55</anchor>
      <arglist>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a85ca287644b79a49fd3c8a51610df492</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ad91c1063417430d845afef76d5287057</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a284ff994769f2202645978072574e8ce</anchor>
      <arglist>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrBool</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a5d4e68ac26b60202866d7ccf87fd144c</anchor>
      <arglist>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a59e24d77be67e1c6f8147686e5920360</anchor>
      <arglist>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>af9cef7d7ef0f503ef0a99b7a6af9afb6</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a4f310645c6e36ec1a873e090ddeedd8e</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrPtrReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a5136ee892cbf64cdaf587243acf04430</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrRealIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ac418640b93b72ae5f6249b6a7e821f1b</anchor>
      <arglist>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrPtrLongInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a0d4a5c63ce487d4237616a7f77e14730</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownPtrPtrLongIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a1293a56a9f59fb3d419ccc2f75ac8c47</anchor>
      <arglist>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a3b259b7163bc48bca1b03bd99fb9c3a8</anchor>
      <arglist>(SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a659358a62bec9f196791c85aa7eb026a</anchor>
      <arglist>(SCIP_Real *realarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a8c4fca4d4cfd5894ee201ad690294394</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a58e1b790be0356015955b4be5093ae20</anchor>
      <arglist>(SCIP_Real *realarray, int *intarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ac28bdb363223134c1dd0652f26658bd3</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealLongRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a9bad1c8df3ac1ff3a8b3ebc1033e5e16</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealRealRealInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ad6163d61719090374bfe1f7f067e52e8</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealRealRealPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>abd2ab8586c5415a8eef0dd81c950b2c6</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownRealRealRealBoolPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a19aef1e3777aaad1d2231f56c94754d5</anchor>
      <arglist>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ad1145e63c8125a365012cb005d6daec2</anchor>
      <arglist>(int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a3592137191739688773e68ecb92a2954</anchor>
      <arglist>(int *intarray1, int *intarray2, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ae23a3861de091f32d8f30df8ef96a245</anchor>
      <arglist>(int *intarray, SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntIntLong</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a13dbc7faac98878278a7d82f147ae93c</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ab8d853b7506c426d34ca9d56034c4f2b</anchor>
      <arglist>(int *intarray1, int *intarray2, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aec60c0c53ee333c2d365c982ca59bad0</anchor>
      <arglist>(int *intarray1, int *intarray2, SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a43df436ace6011a7568d959d68f9d0a7</anchor>
      <arglist>(int *intarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownIntPtrIntReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a60d56d852e33355b7b33ed3b09739504</anchor>
      <arglist>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownLong</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a1f509f41f8dc50da314caa05b8f5b6fe</anchor>
      <arglist>(SCIP_Longint *longarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownLongPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a82a0420979b32a33d0ac2ed1f936d82c</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownLongPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a05c6ee6ce0784c5cb7171953c91fa2e0</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownLongPtrPtrInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a4bce001ffc72bbaececc5211f8c8accb</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownLongPtrPtrIntInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a5229fc6dcac1bbb54697cb6584392f24</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsortedvecDelPosDownLongPtrPtrBoolInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a7ca8f3db0c84ecd952055c2987013bf3</anchor>
      <arglist>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, int pos, int *len)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindInd</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a26d36bcbe4eb5695c83275f632b520e2</anchor>
      <arglist>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a0a1d3f8656491206c546d51d7d3bf984</anchor>
      <arglist>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a2df22126338d4b1c7383e3b5818e8e3f</anchor>
      <arglist>(SCIP_Real *realarray, SCIP_Real val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a4aae1f2e7c28d053b18974a066f03f2e</anchor>
      <arglist>(int *intarray, int val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindLong</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a64379740155859235c21b655fc601f6f</anchor>
      <arglist>(SCIP_Longint *longarray, SCIP_Longint val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindDownInd</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a12f9bdff6d3008f30b5a176c72ad50df</anchor>
      <arglist>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindDownPtr</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a5f10914e9b9b12db9d286b1ea25a5ed5</anchor>
      <arglist>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindDownReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a962f1cd31b5d4b6dd60032d3c3a191c7</anchor>
      <arglist>(SCIP_Real *realarray, SCIP_Real val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindDownInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a224ecda311a4771fa0a7e0d603e47710</anchor>
      <arglist>(int *intarray, int val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsortedvecFindDownLong</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a5cbfdcdfa4689c936ea0ee4d5df9f0cf</anchor>
      <arglist>(SCIP_Longint *longarray, SCIP_Longint val, int len, int *pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcalcMachineEpsilon</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ac6ef1b59cbfcd67e6d93d530b78e7b05</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPcalcGreComDiv</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a09c76e8d696f37681aa4bd6d96618488</anchor>
      <arglist>(SCIP_Longint val1, SCIP_Longint val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPcalcSmaComMul</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a36422f92e6fe8eaed14484b069529f57</anchor>
      <arglist>(SCIP_Longint val1, SCIP_Longint val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPrealToRational</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a7af717ac8e971d41e58aac8c395c73b5</anchor>
      <arglist>(SCIP_Real val, SCIP_Real mindelta, SCIP_Real maxdelta, SCIP_Longint maxdnom, SCIP_Longint *nominator, SCIP_Longint *denominator)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcalcIntegralScalar</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ae52e2432fc460ea70a34b4921655f669</anchor>
      <arglist>(SCIP_Real *vals, int nvals, SCIP_Real mindelta, SCIP_Real maxdelta, SCIP_Longint maxdnom, SCIP_Real maxscale, SCIP_Real *intscalar, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPfindSimpleRational</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>afc5af4af98dabe979112c4825963dd95</anchor>
      <arglist>(SCIP_Real lb, SCIP_Real ub, SCIP_Longint maxdnom, SCIP_Longint *nominator, SCIP_Longint *denominator)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPselectSimpleValue</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a80d505d09eb06daa3e1d18454554dbd3</anchor>
      <arglist>(SCIP_Real lb, SCIP_Real ub, SCIP_Longint maxdnom)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPrelDiff</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aee193fe9f075f6b12914b1ea9243a9d4</anchor>
      <arglist>(SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetRandomInt</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ab8df37df07fa33ef9d01039302594a4e</anchor>
      <arglist>(int minrandval, int maxrandval, unsigned int *seedp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRandomReal</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>adb68c7526c5d93416b08093b710fd25e</anchor>
      <arglist>(SCIP_Real minrandval, SCIP_Real maxrandval, unsigned int *seedp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPswapPointers</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a431f86e1ef3e1500066fec3e3a4ace6d</anchor>
      <arglist>(void **pointer1, void **pointer2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPpermuteArray</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a6ec4d1af1c69541e0f01d439e6fb0398</anchor>
      <arglist>(void **array, int begin, int end, unsigned int *randseed)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetRandomSubset</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a384de3f49754bbba1ca3dc87549f3027</anchor>
      <arglist>(void **set, int nelems, void **subset, int nsubelems, unsigned int randseed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprintSysError</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a5e2316e35529d93dbfa735b10664e07c</anchor>
      <arglist>(const char *message)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>SCIPstrtok</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>aadc7dc75eacf8821453262816efbb912</anchor>
      <arglist>(char *s, const char *delim, char **ptrptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPescapeString</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a4123f87ca6ab7b2d52977ad740976c34</anchor>
      <arglist>(char *t, int bufsize, const char *s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsnprintf</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a12978de6e896abef8c5784a521d6326b</anchor>
      <arglist>(char *t, int len, const char *s,...)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPfileExists</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>a26a194b806c67fca42015976a3b0b2ab</anchor>
      <arglist>(const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsplitFilename</name>
      <anchorfile>pub__misc_8h.html</anchorfile>
      <anchor>ae6ca8a02a5500ad60a834a41588f632b</anchor>
      <arglist>(char *filename, char **path, char **name, char **extension, char **compression)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_nlp.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__nlp_8h</filename>
    <includes id="type__set_8h" name="type_set.h" local="yes" imported="no">scip/type_set.h</includes>
    <includes id="type__stat_8h" name="type_stat.h" local="yes" imported="no">scip/type_stat.h</includes>
    <includes id="type__nlp_8h" name="type_nlp.h" local="yes" imported="no">scip/type_nlp.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <includes id="type__sol_8h" name="type_sol.h" local="yes" imported="no">scip/type_sol.h</includes>
    <includes id="type__expression_8h" name="type_expression.h" local="yes" imported="no">nlpi/type_expression.h</includes>
    <includes id="type__nlpi_8h" name="type_nlpi.h" local="yes" imported="no">nlpi/type_nlpi.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPnlrowPrint</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a1be2c24891e139da5844174941cb8fd9</anchor>
      <arglist>(SCIP_NLROW *nlrow, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPnlrowGetConstant</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>ab9f628ac0c1bf96d58baea98c9342730</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnlrowGetNLinearVars</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a90d579ae11ca7bcc8ce1aa66f7276f40</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPnlrowGetLinearVars</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>aad3c7866f2277cdcd05824cd8ec7b3b0</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPnlrowGetLinearCoefs</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a345cda0724da42340d0f48e20b0b579a</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnlrowGetNQuadVars</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>ab51dfc0445e8fad9abe1781c09591ec5</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPnlrowGetQuadVars</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a35b6ed602ef3150e0977eda650de0fec</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnlrowSearchQuadVar</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a4a178fbe0e2d73a729cac3f884a7dd44</anchor>
      <arglist>(SCIP_NLROW *nlrow, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnlrowGetNQuadElems</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a4fb89aca4f1e2db04d7c07ed89f1e6d4</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_QUADELEM *</type>
      <name>SCIPnlrowGetQuadElems</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>ac1f01e012def3af00b1854a1b0291fc8</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPnlrowGetQuadData</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a18b42b53039054759e8fb4936424e1d6</anchor>
      <arglist>(SCIP_NLROW *nlrow, int *nquadvars, SCIP_VAR ***quadvars, int *nquadelems, SCIP_QUADELEM **quadelems)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EXPRTREE *</type>
      <name>SCIPnlrowGetExprtree</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a899c1a1f044a54e8ce0e7350b33b018b</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPnlrowGetLhs</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a5f79e46fd3a4c49302470f3fe461c6af</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPnlrowGetRhs</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a189829d97a13c378af1eddeee0af7060</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPnlrowGetName</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>aa584087de7cfd80d60852881d3a523a6</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnlrowGetNLPPos</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a8142efc0a68b75006225329289e3eba0</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPnlrowIsInNLP</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>ac44bb34b85579ed5ac12576b7dfd473b</anchor>
      <arglist>(SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPnlpGetVars</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a5614283e1e202d66abc2b05ade13a535</anchor>
      <arglist>(SCIP_NLP *nlp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnlpGetNVars</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>ad68b9560204d4a646860239a30f347cd</anchor>
      <arglist>(SCIP_NLP *nlp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLROW **</type>
      <name>SCIPnlpGetNlRows</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a254db93590a08c07faaa7df36d9f4a38</anchor>
      <arglist>(SCIP_NLP *nlp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnlpGetNNlRows</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a5168178ba1ead52a13afc5363e5fcf18</anchor>
      <arglist>(SCIP_NLP *nlp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLROW *</type>
      <name>SCIPnlpGetObjective</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>ac7095142ba98d6339121c53455f13471</anchor>
      <arglist>(SCIP_NLP *nlp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLPI *</type>
      <name>SCIPnlpGetNLPI</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>abb4779d7cd9894638e21d12282a79128</anchor>
      <arglist>(SCIP_NLP *nlp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLPIPROBLEM *</type>
      <name>SCIPnlpGetNLPIProblem</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>af2c9334b169071c59cfde6566300cb0c</anchor>
      <arglist>(SCIP_NLP *nlp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPnlpIsDiving</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>afa0477a0b9ac237db2c75625444fd469</anchor>
      <arglist>(SCIP_NLP *nlp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLPSOLSTAT</type>
      <name>SCIPnlpGetSolstat</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>afba7fd86e1b91f53b9ff16167fc23068</anchor>
      <arglist>(SCIP_NLP *nlp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLPTERMSTAT</type>
      <name>SCIPnlpGetTermstat</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>ac1a325562d483ab102393f4c4799e02d</anchor>
      <arglist>(SCIP_NLP *nlp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPnlpGetStatistics</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a6b540440fa79486161907369095ab1e4</anchor>
      <arglist>(SCIP_NLP *nlp, SCIP_NLPSTATISTICS *statistics)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPnlpHasSolution</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a7dc9827f69ab3677ce09e89274906cd2</anchor>
      <arglist>(SCIP_NLP *nlp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPnlpGetSolVals</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>ad49960ff0ac43ba6c134961cd0f4787b</anchor>
      <arglist>(SCIP_NLP *nlp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPnlpGetVarSolVal</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a29c06cda9d05de747d65d43ed1bc8b6c</anchor>
      <arglist>(SCIP_NLP *nlp, SCIP_VAR *var, SCIP_Real *val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPnlpGetIntPar</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>aa914a24f7362e413ccfa7d4090babefb</anchor>
      <arglist>(SCIP_NLP *nlp, SCIP_NLPPARAM type, int *ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPnlpSetIntPar</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a89a78bbbca56476a1287c910e39e4946</anchor>
      <arglist>(SCIP_NLP *nlp, SCIP_NLPPARAM type, int ival)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPnlpGetRealPar</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>abdd2e37899740a6f03ab280bbb577382</anchor>
      <arglist>(SCIP_NLP *nlp, SCIP_NLPPARAM type, SCIP_Real *dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPnlpSetRealPar</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a9df596aa64183fd6d411fbd8d61bb054</anchor>
      <arglist>(SCIP_NLP *nlp, SCIP_NLPPARAM type, SCIP_Real dval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPnlpGetStringPar</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>a6f996bddeb754b6197ad2732dca7645b</anchor>
      <arglist>(SCIP_NLP *nlp, SCIP_NLPPARAM type, const char **sval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPnlpSetStringPar</name>
      <anchorfile>pub__nlp_8h.html</anchorfile>
      <anchor>afce19ff656066a96ef61c9061a2ffffe</anchor>
      <arglist>(SCIP_NLP *nlp, SCIP_NLPPARAM type, const char *sval)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_nodesel.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__nodesel_8h</filename>
    <includes id="type__nodesel_8h" name="type_nodesel.h" local="yes" imported="no">scip/type_nodesel.h</includes>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPnodeselGetName</name>
      <anchorfile>pub__nodesel_8h.html</anchorfile>
      <anchor>a51d17e2523f2b02fc0fa122bda3046da</anchor>
      <arglist>(SCIP_NODESEL *nodesel)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPnodeselGetDesc</name>
      <anchorfile>pub__nodesel_8h.html</anchorfile>
      <anchor>a7e2b07f7eaf295bb5b09cf17246f1598</anchor>
      <arglist>(SCIP_NODESEL *nodesel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnodeselGetStdPriority</name>
      <anchorfile>pub__nodesel_8h.html</anchorfile>
      <anchor>aa0a76d00605d09e3d1fa4d189508fa08</anchor>
      <arglist>(SCIP_NODESEL *nodesel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnodeselGetMemsavePriority</name>
      <anchorfile>pub__nodesel_8h.html</anchorfile>
      <anchor>a9b886aec71e65c1f90414f9d49de09e4</anchor>
      <arglist>(SCIP_NODESEL *nodesel)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODESELDATA *</type>
      <name>SCIPnodeselGetData</name>
      <anchorfile>pub__nodesel_8h.html</anchorfile>
      <anchor>a0c79cf659c11d6d73a073ce16bb2f7b4</anchor>
      <arglist>(SCIP_NODESEL *nodesel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPnodeselSetData</name>
      <anchorfile>pub__nodesel_8h.html</anchorfile>
      <anchor>a2ddf703bc23daa537c1eda4e5c2d904e</anchor>
      <arglist>(SCIP_NODESEL *nodesel, SCIP_NODESELDATA *nodeseldata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPnodeselIsInitialized</name>
      <anchorfile>pub__nodesel_8h.html</anchorfile>
      <anchor>a51551efbe3f3d35fe2da45fff65a6efb</anchor>
      <arglist>(SCIP_NODESEL *nodesel)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_paramset.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__paramset_8h</filename>
    <includes id="type__paramset_8h" name="type_paramset.h" local="yes" imported="no">scip/type_paramset.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="function">
      <type>SCIP_PARAMTYPE</type>
      <name>SCIPparamGetType</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a52ef84b77971fad59a5aafa2a5905f32</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPparamGetName</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>aee4b2fa3c28bedbcf3eb3a6f9023cdde</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPparamGetDesc</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a6e1879b7360e21552247a159eb2f61c9</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PARAMDATA *</type>
      <name>SCIPparamGetData</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a37d3a83666bad785b27f3575aa221bbd</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPparamIsAdvanced</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a4ff8b8a465deaa777ac4833d05d8f5a8</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPparamGetBool</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a6c44e72f165aa3772fe668efbf763489</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPparamGetBoolDefault</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a7e9d15106790bd8cba2faebdb0d03b23</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPparamGetInt</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a7913f014556f615bb5b62600bd41fc80</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPparamGetIntMin</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a572caa3969913d9f86877a7d012d757c</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPparamGetIntMax</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a88b716859aff14957134888979c9ceca</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPparamGetIntDefault</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a8d4e12bd7a5064d578437d3b4b35aadf</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPparamGetLongint</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a956e5d081423ccec807625b5243bb315</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPparamGetLongintMin</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a59a66b66fbe038fc78838e3f8d5ec536</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPparamGetLongintMax</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a959d3ceaff0b224444b5ecbc2e83fff1</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPparamGetLongintDefault</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>ad76b7648cec1752fbd549072b92203be</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPparamGetReal</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a8bd82bfd949e3d8c041e770ff821d04c</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPparamGetRealMin</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a18cc82a9bcb8b49b1a601a77cb545702</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPparamGetRealMax</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a98c937c13a6356356ee116296c180a0b</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPparamGetRealDefault</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>ae3bcda028f9c250957a1dbbb1512125e</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>SCIPparamGetChar</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a93d764b63c69476c3fa631a87e2285f0</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>SCIPparamGetCharDefault</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a1b0b1e1106e9b1b1b27f6d1d31f6638d</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>SCIPparamGetString</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a3ea926f573681490671f9bca23e80aa0</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>SCIPparamGetStringDefault</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a1b4314fc46e6f14c29a1c66eda7dacc1</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparamSetBool</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>aa36db0181db216ca6be4cd809f9da9b8</anchor>
      <arglist>(SCIP_PARAM *param, SCIP *scip, SCIP_Bool value, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparamSetInt</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>ae98aa79bc558777a4dda37a47d25a5e0</anchor>
      <arglist>(SCIP_PARAM *param, SCIP *scip, int value, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparamSetLongint</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a7f71e24f02b2926c71aef5adc4ffde2a</anchor>
      <arglist>(SCIP_PARAM *param, SCIP *scip, SCIP_Longint value, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparamSetReal</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a786403e69d5d1a61a0b32aeab29d9bf5</anchor>
      <arglist>(SCIP_PARAM *param, SCIP *scip, SCIP_Real value, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparamSetChar</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a3fe97a7a8bdb76c9a0bff834188559e5</anchor>
      <arglist>(SCIP_PARAM *param, SCIP *scip, char value, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparamSetString</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a035e8dce588ab5f1679858f3da5e97db</anchor>
      <arglist>(SCIP_PARAM *param, SCIP *scip, const char *value, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPparamIsDefault</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a130083b5c60a4dc02592fc62c6deb3a3</anchor>
      <arglist>(SCIP_PARAM *param)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparamSetToDefault</name>
      <anchorfile>pub__paramset_8h.html</anchorfile>
      <anchor>a4c648f82f97409ab758226207d263680</anchor>
      <arglist>(SCIP_PARAM *param, SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_presol.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__presol_8h</filename>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__presol_8h" name="type_presol.h" local="yes" imported="no">scip/type_presol.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>a41c8fc327bfbc26ddaaaf8787815187e</anchor>
      <arglist>(SCIPpresolComp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRESOLDATA *</type>
      <name>SCIPpresolGetData</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>afb2b373efb83578989b3ea0fbc0a335a</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPpresolSetData</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>a4f850dc99207d36799313c512cc6799a</anchor>
      <arglist>(SCIP_PRESOL *presol, SCIP_PRESOLDATA *presoldata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPpresolGetName</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>ab4da0149ec216805f478356f4f7be686</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPpresolGetDesc</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>a28a3d9e3f94190ab73b4789eb9f91749</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetPriority</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>a77bcf44c1105f284bfecf3cf4adef002</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpresolIsDelayed</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>a58856573ee9c87218cf8a6caac3a8bb2</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpresolWasDelayed</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>adebe02dc339510977cbaa39610d1f8f7</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpresolIsInitialized</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>a108a13dc67365903f5ecb3ead79a2ca2</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPpresolGetTime</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>a627d044db169bf18864a67feb0152b4b</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNFixedVars</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>a8d5774f8a2ff447c8bd296f01d02ca3a</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNAggrVars</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>a0e9b79c7844166e3ce2f1d7335bb0521</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNChgVarTypes</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>a633793b87e754b54ab6957f4e34e9932</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNChgBds</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>aa41d3188385cec6660b5e7fb7d856c4e</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNAddHoles</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>a346792d6e0a32af9c648c2b372066ecf</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNDelConss</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>a280254c8a6fc88e8c57564d4c7fcc440</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNUpgdConss</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>a1ae0be1eb24c38c73671c64370b7759e</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNChgCoefs</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>a2d837ebf379bbaf4a1d98f2f1da6dc70</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpresolGetNChgSides</name>
      <anchorfile>pub__presol_8h.html</anchorfile>
      <anchor>a7ccedf915c941a5ea4ca15af85762de0</anchor>
      <arglist>(SCIP_PRESOL *presol)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_pricer.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__pricer_8h</filename>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__pricer_8h" name="type_pricer.h" local="yes" imported="no">scip/type_pricer.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__pricer_8h.html</anchorfile>
      <anchor>acd2ed4dbe806ada8ec0b91c80889100f</anchor>
      <arglist>(SCIPpricerComp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRICERDATA *</type>
      <name>SCIPpricerGetData</name>
      <anchorfile>pub__pricer_8h.html</anchorfile>
      <anchor>a851e1927f2a86bce542393876a7760f9</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPpricerSetData</name>
      <anchorfile>pub__pricer_8h.html</anchorfile>
      <anchor>a5dc785e3e8101bb9e5cca1686e37eaca</anchor>
      <arglist>(SCIP_PRICER *pricer, SCIP_PRICERDATA *pricerdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPpricerGetName</name>
      <anchorfile>pub__pricer_8h.html</anchorfile>
      <anchor>a18627610344b514e1741e1c8b49b95c2</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPpricerGetDesc</name>
      <anchorfile>pub__pricer_8h.html</anchorfile>
      <anchor>aabaa5b871421bded6b765c7327b33059</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpricerGetPriority</name>
      <anchorfile>pub__pricer_8h.html</anchorfile>
      <anchor>a82ebd53263ed1183798ae39c272df801</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpricerGetNCalls</name>
      <anchorfile>pub__pricer_8h.html</anchorfile>
      <anchor>ac9997a2959c42720ba6399eb25b11dd7</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpricerGetNVarsFound</name>
      <anchorfile>pub__pricer_8h.html</anchorfile>
      <anchor>a195b1b745d4e2c81bda5660d2dbe6a09</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPpricerGetTime</name>
      <anchorfile>pub__pricer_8h.html</anchorfile>
      <anchor>ac52a598a357313a8c30572a647ce1b24</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpricerIsActive</name>
      <anchorfile>pub__pricer_8h.html</anchorfile>
      <anchor>a821009258009c428745fe1f141d4e223</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpricerIsDelayed</name>
      <anchorfile>pub__pricer_8h.html</anchorfile>
      <anchor>a325ed765c8acc5956bab87ec4158f1e3</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpricerIsInitialized</name>
      <anchorfile>pub__pricer_8h.html</anchorfile>
      <anchor>ab21ba9a84d5652fbecd638a3af8cd491</anchor>
      <arglist>(SCIP_PRICER *pricer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_prop.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__prop_8h</filename>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__prop_8h" name="type_prop.h" local="yes" imported="no">scip/type_prop.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__prop_8h.html</anchorfile>
      <anchor>ae1352ca4ee6d6a392f8c6cb2cfc948e5</anchor>
      <arglist>(SCIPpropComp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PROPDATA *</type>
      <name>SCIPpropGetData</name>
      <anchorfile>pub__prop_8h.html</anchorfile>
      <anchor>a5f6fee69ad19acc0e29b3320d9fc6914</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPpropSetData</name>
      <anchorfile>pub__prop_8h.html</anchorfile>
      <anchor>a3856a3a25ff2a9092ce2013579b4e8b9</anchor>
      <arglist>(SCIP_PROP *prop, SCIP_PROPDATA *propdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPpropGetName</name>
      <anchorfile>pub__prop_8h.html</anchorfile>
      <anchor>a475b9ebd1a43e13ea858d5d47b5d0334</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPpropGetDesc</name>
      <anchorfile>pub__prop_8h.html</anchorfile>
      <anchor>a77fc07ae47a1b179e8e46e17d262c88e</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpropGetPriority</name>
      <anchorfile>pub__prop_8h.html</anchorfile>
      <anchor>ab4755eac25bf339cd2744300d7158fc8</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPpropGetFreq</name>
      <anchorfile>pub__prop_8h.html</anchorfile>
      <anchor>a5f4ad04478ff3568ffe4449c92687176</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPpropGetTime</name>
      <anchorfile>pub__prop_8h.html</anchorfile>
      <anchor>ac5910f895fa4039c9dc165e1b15023e5</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPpropGetNCalls</name>
      <anchorfile>pub__prop_8h.html</anchorfile>
      <anchor>ae468ac9db37ca0cb89fbc6ee213c2191</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPpropGetNCutoffs</name>
      <anchorfile>pub__prop_8h.html</anchorfile>
      <anchor>a32ee34c8e160736fb7438f8372f43d35</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPpropGetNDomredsFound</name>
      <anchorfile>pub__prop_8h.html</anchorfile>
      <anchor>a5c25fba9efe57903f290276f49fd6ff2</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpropIsDelayed</name>
      <anchorfile>pub__prop_8h.html</anchorfile>
      <anchor>a1bf7d8d81c583546d32f4f3a4d68f530</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpropWasDelayed</name>
      <anchorfile>pub__prop_8h.html</anchorfile>
      <anchor>a2b6ce81da4542f40691ec2e8c7b2648b</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpropIsInitialized</name>
      <anchorfile>pub__prop_8h.html</anchorfile>
      <anchor>ad9c470f54c6829a273e8300aca8238d2</anchor>
      <arglist>(SCIP_PROP *prop)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_reader.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__reader_8h</filename>
    <includes id="type__reader_8h" name="type_reader.h" local="yes" imported="no">scip/type_reader.h</includes>
    <member kind="function">
      <type>SCIP_READERDATA *</type>
      <name>SCIPreaderGetData</name>
      <anchorfile>pub__reader_8h.html</anchorfile>
      <anchor>a8e7f3cb738a0452ef74836d07683443d</anchor>
      <arglist>(SCIP_READER *reader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPreaderSetData</name>
      <anchorfile>pub__reader_8h.html</anchorfile>
      <anchor>a97ef0e6de622d6dd85e090a7c3fc2755</anchor>
      <arglist>(SCIP_READER *reader, SCIP_READERDATA *readerdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPreaderGetName</name>
      <anchorfile>pub__reader_8h.html</anchorfile>
      <anchor>a55ec40002b75749e352907e871311b97</anchor>
      <arglist>(SCIP_READER *reader)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPreaderGetDesc</name>
      <anchorfile>pub__reader_8h.html</anchorfile>
      <anchor>a18b3b75626dec25a5311ce224ff5bb84</anchor>
      <arglist>(SCIP_READER *reader)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPreaderGetExtension</name>
      <anchorfile>pub__reader_8h.html</anchorfile>
      <anchor>a798d8e17992e9ed6ecd2d16ba1bc43f5</anchor>
      <arglist>(SCIP_READER *reader)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPreaderCanRead</name>
      <anchorfile>pub__reader_8h.html</anchorfile>
      <anchor>aa8e487dd3f7d05bb4647cbc1473692c2</anchor>
      <arglist>(SCIP_READER *reader)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPreaderCanWrite</name>
      <anchorfile>pub__reader_8h.html</anchorfile>
      <anchor>ab86fa39266a71765a5fa60f436dd3927</anchor>
      <arglist>(SCIP_READER *reader)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_relax.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__relax_8h</filename>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__relax_8h" name="type_relax.h" local="yes" imported="no">scip/type_relax.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__relax_8h.html</anchorfile>
      <anchor>a7e7799f32423c82e3f4f6a2e6a55b3ce</anchor>
      <arglist>(SCIPrelaxComp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RELAXDATA *</type>
      <name>SCIPrelaxGetData</name>
      <anchorfile>pub__relax_8h.html</anchorfile>
      <anchor>aec025ad74eecd07f6ed16f8e9df5296c</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPrelaxSetData</name>
      <anchorfile>pub__relax_8h.html</anchorfile>
      <anchor>aa5770bcfe63a450133408625714d7570</anchor>
      <arglist>(SCIP_RELAX *relax, SCIP_RELAXDATA *relaxdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPrelaxGetName</name>
      <anchorfile>pub__relax_8h.html</anchorfile>
      <anchor>a7ef292e485b94c609c925914d13d0f43</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPrelaxGetDesc</name>
      <anchorfile>pub__relax_8h.html</anchorfile>
      <anchor>a7d43d6112151ddb93446ab35afbbeb8f</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPrelaxGetPriority</name>
      <anchorfile>pub__relax_8h.html</anchorfile>
      <anchor>ad4a916bee9dac2a47fde066f76706112</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPrelaxGetFreq</name>
      <anchorfile>pub__relax_8h.html</anchorfile>
      <anchor>a52ca03f93ecf0768ef99bed3338ed08a</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPrelaxGetTime</name>
      <anchorfile>pub__relax_8h.html</anchorfile>
      <anchor>a524075022f6a06c3fddd6d2c92194948</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPrelaxGetNCalls</name>
      <anchorfile>pub__relax_8h.html</anchorfile>
      <anchor>ae2a3f07b5f8e1978740f90368bdd2456</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPrelaxIsInitialized</name>
      <anchorfile>pub__relax_8h.html</anchorfile>
      <anchor>a4c239d276edd51989800b3e0a329626d</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPrelaxMarkUnsolved</name>
      <anchorfile>pub__relax_8h.html</anchorfile>
      <anchor>a03d88a51d54f0fa0b015d777c969f4f1</anchor>
      <arglist>(SCIP_RELAX *relax)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_sepa.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__sepa_8h</filename>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__sepa_8h" name="type_sepa.h" local="yes" imported="no">scip/type_sepa.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>ab3710b60505804eb6985974254f5e63b</anchor>
      <arglist>(SCIPsepaComp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SEPADATA *</type>
      <name>SCIPsepaGetData</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>a341f3e892ec263f93b27fa99fc3cf01c</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsepaSetData</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>add74d1e411d7b64de54123096cec6762</anchor>
      <arglist>(SCIP_SEPA *sepa, SCIP_SEPADATA *sepadata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPsepaGetName</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>a291ee01c331500ccf5d10fcad2b185cc</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPsepaGetDesc</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>a24cc355ba0f1d0a644eddd5c64fc8b68</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsepaGetPriority</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>a220ef12b33cbab733bded7015b71c051</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsepaGetFreq</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>a52a6e1a8ebe64b88da2b3cda6b604e26</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsepaSetFreq</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>af6dd9b5696ce1635d82cbe29bf7c2cc6</anchor>
      <arglist>(SCIP_SEPA *sepa, int freq)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPsepaGetMaxbounddist</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>a23050fec5334f8e03e81c887764a2941</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsepaUsesSubscip</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>ae32b9bc40cf669e34fd5588c813be382</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPsepaGetTime</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>a8c2b8e73ecf9f52615c157815da0e772</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPsepaGetNCalls</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>afebd7deeb34d35020860370128dd49e5</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsepaGetNCallsAtNode</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>a67943561f0952dcc249693d37ecc74f3</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPsepaGetNCutoffs</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>a1dd6383af4a1f2c00f3deebfe9e5376e</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPsepaGetNCutsFound</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>ae7c469334f84fd86e05d93d21ef7000c</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPsepaGetNCutsFoundAtNode</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>ae4a9b18a106a99140242d74821036336</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPsepaGetNConssFound</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>ab10fd5eaa679364aabbd3d2f74c33f6c</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPsepaGetNDomredsFound</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>a6cc882dfd5a54a5f68ecd92dea51a0d7</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsepaIsDelayed</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>abd8bd599973e3aa117e95af33067e6d6</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsepaWasLPDelayed</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>a9f318fd92c6fedcfd00259c7de69d2a6</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsepaWasSolDelayed</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>a1318111e813ebe4fdf568b704d4b439a</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPsepaIsInitialized</name>
      <anchorfile>pub__sepa_8h.html</anchorfile>
      <anchor>a923d4a8d1deee47ffee6b60040e0244a</anchor>
      <arglist>(SCIP_SEPA *sepa)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_sol.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__sol_8h</filename>
    <includes id="type__sol_8h" name="type_sol.h" local="yes" imported="no">scip/type_sol.h</includes>
    <includes id="type__heur_8h" name="type_heur.h" local="yes" imported="no">scip/type_heur.h</includes>
    <member kind="function">
      <type>SCIP_SOLORIGIN</type>
      <name>SCIPsolGetOrigin</name>
      <anchorfile>pub__sol_8h.html</anchorfile>
      <anchor>a04ac0840c36094c37d757373d32beb75</anchor>
      <arglist>(SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPsolGetTime</name>
      <anchorfile>pub__sol_8h.html</anchorfile>
      <anchor>a45333d240ddfa77d972aedfecdcc91c8</anchor>
      <arglist>(SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsolGetRunnum</name>
      <anchorfile>pub__sol_8h.html</anchorfile>
      <anchor>abd3a91a71fd08f774cec8bf57d50cd56</anchor>
      <arglist>(SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPsolGetNodenum</name>
      <anchorfile>pub__sol_8h.html</anchorfile>
      <anchor>a56ee2643b4f36c8e2696e271419e5f54</anchor>
      <arglist>(SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsolGetDepth</name>
      <anchorfile>pub__sol_8h.html</anchorfile>
      <anchor>aa6234c5a9da2abe11282747d312d733c</anchor>
      <arglist>(SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HEUR *</type>
      <name>SCIPsolGetHeur</name>
      <anchorfile>pub__sol_8h.html</anchorfile>
      <anchor>ace72fa5363732cbb845042c587f118b2</anchor>
      <arglist>(SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPsolSetHeur</name>
      <anchorfile>pub__sol_8h.html</anchorfile>
      <anchor>aef4d96221f087dff159cdc170373a1d0</anchor>
      <arglist>(SCIP_SOL *sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsolGetIndex</name>
      <anchorfile>pub__sol_8h.html</anchorfile>
      <anchor>aa38934ed0a9818dd75a75351eb30df85</anchor>
      <arglist>(SCIP_SOL *sol)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_tree.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__tree_8h</filename>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__tree_8h" name="type_tree.h" local="yes" imported="no">scip/type_tree.h</includes>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__tree_8h.html</anchorfile>
      <anchor>aedf77fbfe045de88a78951fa77bb7ec9</anchor>
      <arglist>(SCIPnodeCompLowerbound)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPnodeGetParentBranchings</name>
      <anchorfile>pub__tree_8h.html</anchorfile>
      <anchor>a3869a3566609b6e46875886c10cdd7eb</anchor>
      <arglist>(SCIP_NODE *node, SCIP_VAR **branchvars, SCIP_Real *branchbounds, SCIP_BOUNDTYPE *boundtypes, int *nbranchvars, int branchvarssize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPnodeGetAncestorBranchings</name>
      <anchorfile>pub__tree_8h.html</anchorfile>
      <anchor>a11f71eebec5565f38b48466592cc015f</anchor>
      <arglist>(SCIP_NODE *node, SCIP_VAR **branchvars, SCIP_Real *branchbounds, SCIP_BOUNDTYPE *boundtypes, int *nbranchvars, int branchvarssize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPnodeGetAncestorBranchingPath</name>
      <anchorfile>pub__tree_8h.html</anchorfile>
      <anchor>a4e4c5ce0cf69d803a727a0564f7f16da</anchor>
      <arglist>(SCIP_NODE *node, SCIP_VAR **branchvars, SCIP_Real *branchbounds, SCIP_BOUNDTYPE *boundtypes, int *nbranchvars, int branchvarssize, int *nodeswitches, int *nnodes, int nodeswitchsize)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODETYPE</type>
      <name>SCIPnodeGetType</name>
      <anchorfile>pub__tree_8h.html</anchorfile>
      <anchor>a3f5311e3a578be0890a7a3f3746a7088</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPnodeGetNumber</name>
      <anchorfile>pub__tree_8h.html</anchorfile>
      <anchor>a991b33c0e4deb2cde2adf02cadc4bcd4</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPnodeGetDepth</name>
      <anchorfile>pub__tree_8h.html</anchorfile>
      <anchor>ac76c988a601008c2e57c4cdac98c9c42</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPnodeGetLowerbound</name>
      <anchorfile>pub__tree_8h.html</anchorfile>
      <anchor>a4bf2eedb575230a17714ea304ed86afa</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPnodeGetEstimate</name>
      <anchorfile>pub__tree_8h.html</anchorfile>
      <anchor>ac22ad62a838ed69f6d240b5588320280</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DOMCHG *</type>
      <name>SCIPnodeGetDomchg</name>
      <anchorfile>pub__tree_8h.html</anchorfile>
      <anchor>acd8d7b8799702a22b4df3fcd736d0f54</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPnodeIsActive</name>
      <anchorfile>pub__tree_8h.html</anchorfile>
      <anchor>a6a22ff0058a342889b62939fcf463b1d</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPnodeIsPropagatedAgain</name>
      <anchorfile>pub__tree_8h.html</anchorfile>
      <anchor>adbd3349e2d76a32af4f07b583fd84da8</anchor>
      <arglist>(SCIP_NODE *node)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pub_var.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>pub__var_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__history_8h" name="type_history.h" local="yes" imported="no">scip/type_history.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <includes id="type__implics_8h" name="type_implics.h" local="yes" imported="no">scip/type_implics.h</includes>
    <includes id="type__cons_8h" name="type_cons.h" local="yes" imported="no">scip/type_cons.h</includes>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetNLocksDown</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a355a3dfa07ca22bf7ad42b48d58d7ca4</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetNLocksUp</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>ac32a4ea0812029dc023a53ec7d97c5f9</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarMayRoundDown</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a46f0170550cf27e9b83157fc53a97e11</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarMayRoundUp</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a12db6e7bd03ee2c1caabed271da34f2b</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarCompareActiveAndNegated</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a03148e0bd74ef6c65206020c8664d02a</anchor>
      <arglist>(SCIP_VAR *var1, SCIP_VAR *var2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a49cc8459c943c961c4b190f668ed3e0b</anchor>
      <arglist>(SCIPvarCompActiveAndNegated)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarCompare</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>abc50899938ebb76b389c0e54a5a5ec87</anchor>
      <arglist>(SCIP_VAR *var1, SCIP_VAR *var2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>afa888382dd2ea3da4c74a39770ec4a60</anchor>
      <arglist>(SCIPvarComp)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPvarGetProbvar</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a4ee10c1d3097424d9e551fef0d6f0565</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPvarsGetProbvarBinary</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>aedec63daf6f203fdddb5bd5d41456871</anchor>
      <arglist>(SCIP_VAR ***vars, SCIP_Bool **negatedarr, int nvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPvarGetProbvarBinary</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>abf8fe9adb50e1c593d64f2cadf5ddca6</anchor>
      <arglist>(SCIP_VAR **var, SCIP_Bool *negated)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPvarGetProbvarBound</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a0abc3cafafc55449b21eb621a215acc7</anchor>
      <arglist>(SCIP_VAR **var, SCIP_Real *bound, SCIP_BOUNDTYPE *boundtype)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPvarGetProbvarHole</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>aa8b9c60842872deec6b33242bbe569ed</anchor>
      <arglist>(SCIP_VAR **var, SCIP_Real *left, SCIP_Real *right)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPvarGetProbvarSum</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a297b426d378bbbb5c7b352c7a2bc25bd</anchor>
      <arglist>(SCIP_VAR **var, SCIP_Real *scalar, SCIP_Real *constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPvarGetOrigvarSum</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a0726ded27e5e512f12927a1ddd5248be</anchor>
      <arglist>(SCIP_VAR **var, SCIP_Real *scalar, SCIP_Real *constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsTransformedOrigvar</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a8702e6be6a710d89f823a8cdafd2034b</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPvarGetNBranchings</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>aa4a03580e1ab8cef6c5c22871a39fc03</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPvarGetNBranchingsCurrentRun</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>ac0a855279533227b587af5675ae78bad</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetInferenceSum</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a2fc9c113a2f80508f835539d2b13672d</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetInferenceSumCurrentRun</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>ad5a0482bdb76b5d5813039f8879f7168</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetCutoffSum</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>af596106c799c3a5c243ba7443ba64132</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetCutoffSumCurrentRun</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>abdf3ce5ee3dfa8783fdfa526b77ef696</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetAvgBranchdepth</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a21f8069353c0f04a021a3fbfd5ff1245</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetAvgBranchdepthCurrentRun</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a12b1e37f97c94207823cc37113aac868</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarHasImplic</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a295800404f206ef23b87f915c7d7418e</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing, SCIP_VAR *implvar, SCIP_BOUNDTYPE impltype)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarHasBinaryImplic</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a7121d080a6259c0ae87b72d94d73c71f</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing, SCIP_VAR *implvar, SCIP_Bool implvarfixing)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarsHaveCommonClique</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>ad5b82eaf0cf1d6e161e76adc2ec74083</anchor>
      <arglist>(SCIP_VAR *var1, SCIP_Bool value1, SCIP_VAR *var2, SCIP_Bool value2, SCIP_Bool regardimplics)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPvarGetName</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>ab08e0f2c3971fe89bc2959a6fb196383</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VARDATA *</type>
      <name>SCIPvarGetData</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a68189ccd1f497e166986ed5ed94f7bcb</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPvarSetData</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a8f17b03288d34f2fac86f1f7dd22ed7e</anchor>
      <arglist>(SCIP_VAR *var, SCIP_VARDATA *vardata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPvarSetDelorigData</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a041c7d9d30c1766187f66240e2ed99d6</anchor>
      <arglist>(SCIP_VAR *var, SCIP_DECL_VARDELORIG((*vardelorig)))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPvarSetTransData</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a1fba1af0993948f359f7ea98bc9e1587</anchor>
      <arglist>(SCIP_VAR *var, SCIP_DECL_VARTRANS((*vartrans)))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPvarSetDeltransData</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a3afd6b21bc53e155dbe673b368381854</anchor>
      <arglist>(SCIP_VAR *var, SCIP_DECL_VARDELTRANS((*vardeltrans)))</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VARSTATUS</type>
      <name>SCIPvarGetStatus</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a2babbbbd0d346e6af3e4128770e0a0bd</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsOriginal</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>aae5d06a0eb52d5627a555e81f0e99a02</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsTransformed</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a3e41017f1a3955ebacb61b0f7927642a</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsNegated</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a9de9946c754b88110b45997762bc9910</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VARTYPE</type>
      <name>SCIPvarGetType</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a4e486bdb8625d736a0962923ff1a4e80</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsBinary</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a1bd0696bf88d004255be462f22c9d612</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsIntegral</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a86b37a794f4d1ad3889b8d405032e08d</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsInitial</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a0173c404b0c42640d2bd5b0659861f38</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsRemovable</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a9afb8b03bd046d26c5612c42e29431dd</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsDeleted</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a0d41609825264dd6dbf30e8dc89b2693</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsActive</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a1afd61922a1042e1b8515a91bc2c49cc</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetIndex</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a5864aa0e6ff4dfa4fed18e178b644cbd</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetProbindex</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a661c5d1f7f4e09471f8d2898b5bda91c</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPvarGetTransVar</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>ad3fb7925b32ab4d248131bb7eed9143d</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_COL *</type>
      <name>SCIPvarGetCol</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a75111eed912d3f76ec076b787f7a0b12</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarIsInLP</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>af80ac08c4a0f337d152898e5c7eb6b20</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPvarGetAggrVar</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a77868654522f38513a64b92fbdf0bdb7</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetAggrScalar</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a49c6d314048eaeefc7970953e97fa817</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetAggrConstant</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a2fd91a7378eed18a8d10c031a23cfed3</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetMultaggrNVars</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a97a86ea0ff5d4e7280eeaaad0a4b90f1</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPvarGetMultaggrVars</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a0b04d71e1c33d5609de000604d505d45</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPvarGetMultaggrScalars</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>ab939a181ca5289fa27acb17309dd5895</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetMultaggrConstant</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a137fb47be6bb6e08d2ee32b507f57cf2</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPvarGetNegatedVar</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a49dc5b4648f8796de7af0d8841182175</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPvarGetNegationVar</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a0711d01bc5b33614363d50cf82adc88c</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetNegationConstant</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a0df9d4352f047fdcdbbe2862fb99a66c</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetObj</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a491a828fd85a9bd3e055ce67831e612c</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetLbOriginal</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a3b8cdee5573f5b8fe8c6587ad1ea4364</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetUbOriginal</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a6bcf8502fb2e6b103277cef8aa1f1316</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HOLELIST *</type>
      <name>SCIPvarGetHolelistOriginal</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>acbea52862bae4d3f281f5b3f6a3e02e3</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetLbGlobal</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>ab0eaccfc16b577470ba4526bb7173911</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetUbGlobal</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a50c332fe6b9e89e78588b5fa8e9a02f8</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HOLELIST *</type>
      <name>SCIPvarGetHolelistGlobal</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a8d715a4ea83fa790661f96742f1dc45c</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetLbLocal</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a9dc3107400e7a0a52f9c5a84ad1e6106</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetUbLocal</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a35584d0cef32cfbfc7d40148ffd71beb</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HOLELIST *</type>
      <name>SCIPvarGetHolelistLocal</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a8790408c0041e1c7a1f59d2b3275f4ca</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetLbLazy</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>af6e8ecba7fae29086d3bf013c94ea066</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetUbLazy</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a87929eb208b171d78f0c8893af8bba19</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetBranchFactor</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a7ea7752a0ae8a7dd70543c3a3769c5d2</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetBranchPriority</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>aacf94c529766169739e6ac18a204cbb5</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BRANCHDIR</type>
      <name>SCIPvarGetBranchDirection</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a8c411c36f82de1f5085e82b0fc9051c9</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetNVlbs</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a0a73ce48405736fc83c2bfa29c7eab79</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPvarGetVlbVars</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>aab6ae97670db43871d13d5471f95c97a</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPvarGetVlbCoefs</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a37ac3fd8724ad7b089b5710e371804dd</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPvarGetVlbConstants</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a1f8a4e93e49112dc2338dedad0b7ad88</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetNVubs</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a7c2ce9b2f433602d5d5a0329567ce42d</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPvarGetVubVars</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a82b950f4963b7bb16502c952d2e8592e</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPvarGetVubCoefs</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a57b6a5636331bde0eb90ea22cee594c5</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPvarGetVubConstants</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a1cd1b24b22cee3cc7514ab351e5c2851</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetNImpls</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a2a55382fbfa13f5a3f5640b83543d3da</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetNBinImpls</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>afdeee75fcb74b0ae47b43a458aff717f</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPvarGetImplVars</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>af6d18a4b726482e883a11e8df5ec6569</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDTYPE *</type>
      <name>SCIPvarGetImplTypes</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a3a8afc0a15ca5a8f9dc0765d56b4f63f</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real *</type>
      <name>SCIPvarGetImplBounds</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a85753dff191242f295d147f4e32ae3ff</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>SCIPvarGetImplIds</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a0f7453e57ae73a9a86ebb0efc3edefb0</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetNCliques</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a9beee972309b5f9f4ba145a14dc78431</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CLIQUE **</type>
      <name>SCIPvarGetCliques</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>aef0cdf6c72c435b4046ca3d02c15074c</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool varfixing)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetLPSol</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a90ddaecb3d677f1204549292a6db9019</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetBestBound</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>af37fdde629d383d2b19dfafdf57c6b16</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetWorstBound</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a7787cbe136ec5b7db6d8e272940a16d2</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDTYPE</type>
      <name>SCIPvarGetBestBoundType</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a149e2effcd312cb91185644c0b7c4a99</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDTYPE</type>
      <name>SCIPvarGetWorstBoundType</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>ad06ecd2db32c5a221906e42631531074</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetLPSol_rec</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a01f6981cd14ef86e8eb83b57cd31fcc1</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetPseudoSol</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a88890ba4946444cc1a6e009b5c295d7c</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetSol</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a16d1467c170150942eab2743452f2d90</anchor>
      <arglist>(SCIP_VAR *var, SCIP_Bool getlpval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetRootSol</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a78ea1976be7ce9909629c135864325b2</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetRootRedcost</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a5f6570a89cc85b3369c077a304a68663</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetAvgSol</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a8345c51f4b6cd8a520c0cc8457059971</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BDCHGINFO *</type>
      <name>SCIPvarGetLbchgInfo</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>ad641d1c38d10aac2c0a9287a501f196d</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx, SCIP_Bool after)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BDCHGINFO *</type>
      <name>SCIPvarGetUbchgInfo</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>aed405d2ff5f67560b010aaaead0a1d4b</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx, SCIP_Bool after)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BDCHGINFO *</type>
      <name>SCIPvarGetBdchgInfo</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a141e5c841d104d519cdae2edd7289b13</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BOUNDTYPE boundtype, SCIP_BDCHGIDX *bdchgidx, SCIP_Bool after)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetLbAtIndex</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>abf655bf729d472d207ea61c628aca7c4</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx, SCIP_Bool after)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetUbAtIndex</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>ae0e30a0524730fb4a4d176fb607bc4e0</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx, SCIP_Bool after)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPvarGetBdAtIndex</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>ad7f8ef0420a54e35e73fdfaae5440212</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BOUNDTYPE boundtype, SCIP_BDCHGIDX *bdchgidx, SCIP_Bool after)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarWasFixedAtIndex</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a11fcda08c9b188b28299a70128b1296a</anchor>
      <arglist>(SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx, SCIP_Bool after)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BDCHGIDX *</type>
      <name>SCIPvarGetLastBdchgIndex</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a4f5a75f2914757afc03aa63ac0092560</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPvarGetLastBdchgDepth</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>ae2d1a700f5c4ae28643b1aea1c73cf99</anchor>
      <arglist>(SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPvarWasFixedEarlier</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a24708a25840970228de5ea4692dfe402</anchor>
      <arglist>(SCIP_VAR *var1, SCIP_VAR *var2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPbdchgidxIsEarlier</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a23fca46cd3ad5f688e54137d20532ded</anchor>
      <arglist>(SCIP_BDCHGIDX *bdchgidx1, SCIP_BDCHGIDX *bdchgidx2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPbdchgidxIsEarlierNonNull</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>ad62af5c2177603dedeb37df179cdcb9e</anchor>
      <arglist>(SCIP_BDCHGIDX *bdchgidx1, SCIP_BDCHGIDX *bdchgidx2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPbdchginfoGetOldbound</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a85bb9ba16f601027148f1843b5a4bac0</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPbdchginfoGetNewbound</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>ada932ca4a3bf05573daa045bfb9c1257</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPbdchginfoGetVar</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a50ff311153ede62964d80f2ec7f00b70</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDCHGTYPE</type>
      <name>SCIPbdchginfoGetChgtype</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a9c84faa2a937a5c0a46d69a6ab53ea64</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDTYPE</type>
      <name>SCIPbdchginfoGetBoundtype</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>acd2c02df2b42e3849815f265e885f771</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPbdchginfoGetDepth</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a56b4b92b797d7c538dd5e0a50905d153</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPbdchginfoGetPos</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a5d0d79dd71f0de8411869e5c05955e9c</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BDCHGIDX *</type>
      <name>SCIPbdchginfoGetIdx</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>ac0a634d34a9056376e5e66f5ab05c88d</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPbdchginfoGetInferVar</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>aa70881f86d34ceacc6c7cb0dec27cf4b</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS *</type>
      <name>SCIPbdchginfoGetInferCons</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a42471a8c41fbeb8031cabc30af23939b</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PROP *</type>
      <name>SCIPbdchginfoGetInferProp</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>aa441836fba901cf2d613c83960e0ac33</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPbdchginfoGetInferInfo</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a577b8b938b9d3b83718075937e918182</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDTYPE</type>
      <name>SCIPbdchginfoGetInferBoundtype</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a8e3bbbf054ad4411747810e33ce67ef8</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPbdchginfoIsRedundant</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a11bd726658bec8608823d6fdef1b17d4</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPbdchginfoHasInferenceReason</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>aa33dae554e0a5b4c6fda2ec2eb599205</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPbdchginfoIsTighter</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a97188a791a257a985ebd8bc0984dbdc1</anchor>
      <arglist>(SCIP_BDCHGINFO *bdchginfo1, SCIP_BDCHGINFO *bdchginfo2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPboundchgGetNewbound</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a45940d56c97637152f81b1828f362439</anchor>
      <arglist>(SCIP_BOUNDCHG *boundchg)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPboundchgGetVar</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a40ae6ae67312bcf6235f609ad30847fb</anchor>
      <arglist>(SCIP_BOUNDCHG *boundchg)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDCHGTYPE</type>
      <name>SCIPboundchgGetBoundchgtype</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a2f815d272056ccfbc864672df7bbc9b2</anchor>
      <arglist>(SCIP_BOUNDCHG *boundchg)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDTYPE</type>
      <name>SCIPboundchgGetBoundtype</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a1d6e9a36ddd5bd60a945d7806e22cc8f</anchor>
      <arglist>(SCIP_BOUNDCHG *boundchg)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPboundchgIsRedundant</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>aa3df503f6a6399f1b751347779c90ff0</anchor>
      <arglist>(SCIP_BOUNDCHG *boundchg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPdomchgGetNBoundchgs</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a65b0301c0a177928352957762f37bc50</anchor>
      <arglist>(SCIP_DOMCHG *domchg)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BOUNDCHG *</type>
      <name>SCIPdomchgGetBoundchg</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a8fffc109eb5d72cec634a371695094b8</anchor>
      <arglist>(SCIP_DOMCHG *domchg, int pos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPholelistGetLeft</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>aaab9f8d881dca504cbd3c008912f3195</anchor>
      <arglist>(SCIP_HOLELIST *holelist)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPholelistGetRight</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a1f99ffa81e4e86f22cbff0024f4e88c0</anchor>
      <arglist>(SCIP_HOLELIST *holelist)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HOLELIST *</type>
      <name>SCIPholelistGetNext</name>
      <anchorfile>pub__var_8h.html</anchorfile>
      <anchor>a5a3fb872fab6cbc4c65cf6647e6c91d3</anchor>
      <arglist>(SCIP_HOLELIST *holelist)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_ccg.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__ccg_8c</filename>
    <includes id="reader__ccg_8h" name="reader_ccg.h" local="yes" imported="no">scip/reader_ccg.h</includes>
    <includes id="cons__knapsack_8h" name="cons_knapsack.h" local="yes" imported="no">scip/cons_knapsack.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="cons__logicor_8h" name="cons_logicor.h" local="yes" imported="no">scip/cons_logicor.h</includes>
    <includes id="cons__setppc_8h" name="cons_setppc.h" local="yes" imported="no">scip/cons_setppc.h</includes>
    <includes id="cons__varbound_8h" name="cons_varbound.h" local="yes" imported="no">scip/cons_varbound.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>READER_NAME</name>
      <anchorfile>reader__ccg_8c.html</anchorfile>
      <anchor>ab96209313aa41036fa78dccf3a65ddbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_DESC</name>
      <anchorfile>reader__ccg_8c.html</anchorfile>
      <anchor>a6af7670d26c84862991598647730b552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_EXTENSION</name>
      <anchorfile>reader__ccg_8c.html</anchorfile>
      <anchor>a8c484111d1fbef7ebfeeb82b850de9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerFreeCcg</name>
      <anchorfile>reader__ccg_8c.html</anchorfile>
      <anchor>afb19cedef8a4eb4ac2a6853176b9540d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerReadCcg</name>
      <anchorfile>reader__ccg_8c.html</anchorfile>
      <anchor>adc4ac8163e0a2c63b4c0e27512f2bd17</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct sparseGraph</type>
      <name>SparseGraph</name>
      <anchorfile>reader__ccg_8c.html</anchorfile>
      <anchor>a4072b96f3c841f4d921783181c16786e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderCcg</name>
      <anchorfile>reader__ccg_8c.html</anchorfile>
      <anchor>a29ef0299799e53bb94135c12aa229d8f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteCcg</name>
      <anchorfile>reader__ccg_8c.html</anchorfile>
      <anchor>a46ea596358868833c8acaa21cf06c01c</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_Bool transformed, SCIP_VAR **vars, int nvars, SCIP_CONS **conss, int nconss, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_ccg.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__ccg_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderCcg</name>
      <anchorfile>reader__ccg_8h.html</anchorfile>
      <anchor>a29ef0299799e53bb94135c12aa229d8f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteCcg</name>
      <anchorfile>reader__ccg_8h.html</anchorfile>
      <anchor>a46ea596358868833c8acaa21cf06c01c</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_Bool transformed, SCIP_VAR **vars, int nvars, SCIP_CONS **conss, int nconss, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_cip.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__cip_8c</filename>
    <includes id="reader__cip_8h" name="reader_cip.h" local="yes" imported="no">scip/reader_cip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>READER_NAME</name>
      <anchorfile>reader__cip_8c.html</anchorfile>
      <anchor>ab96209313aa41036fa78dccf3a65ddbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_DESC</name>
      <anchorfile>reader__cip_8c.html</anchorfile>
      <anchor>a6af7670d26c84862991598647730b552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_EXTENSION</name>
      <anchorfile>reader__cip_8c.html</anchorfile>
      <anchor>a8c484111d1fbef7ebfeeb82b850de9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerFreeCip</name>
      <anchorfile>reader__cip_8c.html</anchorfile>
      <anchor>a5f28064342811ed31aa83ea6856ab261</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum CipSection</type>
      <name>CIPSECTION</name>
      <anchorfile>reader__cip_8c.html</anchorfile>
      <anchor>a24c74bc5f71a6d3bf0a841d358d8d4f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CipInput</type>
      <name>CIPINPUT</name>
      <anchorfile>reader__cip_8c.html</anchorfile>
      <anchor>aeb5520d1e8e7ca5113bc8ef754bb6665</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>CipSection</name>
      <anchorfile>reader__cip_8c.html</anchorfile>
      <anchor>a88833655886e7b3e77a544ee72ea66a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_START</name>
      <anchorfile>reader__cip_8c.html</anchorfile>
      <anchor>a88833655886e7b3e77a544ee72ea66a6a9a1cce3c569b407f515a1813f8791ab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_STATISTIC</name>
      <anchorfile>reader__cip_8c.html</anchorfile>
      <anchor>a88833655886e7b3e77a544ee72ea66a6ae3942bc4176f2cd34c96547285e002c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_OBJECTIVE</name>
      <anchorfile>reader__cip_8c.html</anchorfile>
      <anchor>a88833655886e7b3e77a544ee72ea66a6ab4cc7198338c3d917ef2ead9756c8e9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_VARS</name>
      <anchorfile>reader__cip_8c.html</anchorfile>
      <anchor>a88833655886e7b3e77a544ee72ea66a6a7ce7bc8753e4b4fb8827703a7132cd87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_FIXEDVARS</name>
      <anchorfile>reader__cip_8c.html</anchorfile>
      <anchor>a88833655886e7b3e77a544ee72ea66a6ad5152acb6f75b33dc168a5c57ec80de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_CONSTRAINTS</name>
      <anchorfile>reader__cip_8c.html</anchorfile>
      <anchor>a88833655886e7b3e77a544ee72ea66a6a530465346959cc9f01493292e35423d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIP_END</name>
      <anchorfile>reader__cip_8c.html</anchorfile>
      <anchor>a88833655886e7b3e77a544ee72ea66a6ae71e4504f414b346769afe683ff7482f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderCip</name>
      <anchorfile>reader__cip_8c.html</anchorfile>
      <anchor>a8b24d222417f41d7f7b1b163df196bb8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_cip.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__cip_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderCip</name>
      <anchorfile>reader__cip_8h.html</anchorfile>
      <anchor>a8b24d222417f41d7f7b1b163df196bb8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_cnf.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__cnf_8c</filename>
    <includes id="reader__cnf_8h" name="reader_cnf.h" local="yes" imported="no">scip/reader_cnf.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="cons__logicor_8h" name="cons_logicor.h" local="yes" imported="no">scip/cons_logicor.h</includes>
    <includes id="cons__setppc_8h" name="cons_setppc.h" local="yes" imported="no">scip/cons_setppc.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>READER_NAME</name>
      <anchorfile>reader__cnf_8c.html</anchorfile>
      <anchor>ab96209313aa41036fa78dccf3a65ddbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_DESC</name>
      <anchorfile>reader__cnf_8c.html</anchorfile>
      <anchor>a6af7670d26c84862991598647730b552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_EXTENSION</name>
      <anchorfile>reader__cnf_8c.html</anchorfile>
      <anchor>a8c484111d1fbef7ebfeeb82b850de9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXLINELEN</name>
      <anchorfile>reader__cnf_8c.html</anchorfile>
      <anchor>a624dbcb8b6ccc24c9bf891c174f60b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerFreeCnf</name>
      <anchorfile>reader__cnf_8c.html</anchorfile>
      <anchor>a63db84d6b1bb6f5498e17bf8fa230fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerWriteCnf</name>
      <anchorfile>reader__cnf_8c.html</anchorfile>
      <anchor>ad43d77f0b5b1c7fa78b38fd11043a95b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderCnf</name>
      <anchorfile>reader__cnf_8c.html</anchorfile>
      <anchor>a53f13fb7c826188c6f334e120a9fd600</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_cnf.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__cnf_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderCnf</name>
      <anchorfile>reader__cnf_8h.html</anchorfile>
      <anchor>a53f13fb7c826188c6f334e120a9fd600</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_fix.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__fix_8c</filename>
    <includes id="reader__fix_8h" name="reader_fix.h" local="yes" imported="no">scip/reader_fix.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>READER_NAME</name>
      <anchorfile>reader__fix_8c.html</anchorfile>
      <anchor>ab96209313aa41036fa78dccf3a65ddbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_DESC</name>
      <anchorfile>reader__fix_8c.html</anchorfile>
      <anchor>a6af7670d26c84862991598647730b552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_EXTENSION</name>
      <anchorfile>reader__fix_8c.html</anchorfile>
      <anchor>a8c484111d1fbef7ebfeeb82b850de9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerFreeFix</name>
      <anchorfile>reader__fix_8c.html</anchorfile>
      <anchor>a59becf6cc9e1d4366a45277b958df16f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerWriteFix</name>
      <anchorfile>reader__fix_8c.html</anchorfile>
      <anchor>a32b689314a3790014c33035cf371e50d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderFix</name>
      <anchorfile>reader__fix_8c.html</anchorfile>
      <anchor>a9f1368e04b9ad67c2b5894b66ba100a5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_fix.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__fix_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderFix</name>
      <anchorfile>reader__fix_8h.html</anchorfile>
      <anchor>a9f1368e04b9ad67c2b5894b66ba100a5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_fzn.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__fzn_8c</filename>
    <includes id="cons__and_8h" name="cons_and.h" local="yes" imported="no">scip/cons_and.h</includes>
    <includes id="cons__knapsack_8h" name="cons_knapsack.h" local="yes" imported="no">scip/cons_knapsack.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="cons__logicor_8h" name="cons_logicor.h" local="yes" imported="no">scip/cons_logicor.h</includes>
    <includes id="cons__or_8h" name="cons_or.h" local="yes" imported="no">scip/cons_or.h</includes>
    <includes id="cons__setppc_8h" name="cons_setppc.h" local="yes" imported="no">scip/cons_setppc.h</includes>
    <includes id="cons__varbound_8h" name="cons_varbound.h" local="yes" imported="no">scip/cons_varbound.h</includes>
    <includes id="cons__quadratic_8h" name="cons_quadratic.h" local="yes" imported="no">scip/cons_quadratic.h</includes>
    <includes id="cons__xor_8h" name="cons_xor.h" local="yes" imported="no">scip/cons_xor.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <includes id="reader__fzn_8h" name="reader_fzn.h" local="yes" imported="no">scip/reader_fzn.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>READER_NAME</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>ab96209313aa41036fa78dccf3a65ddbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_DESC</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>a6af7670d26c84862991598647730b552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_EXTENSION</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>a8c484111d1fbef7ebfeeb82b850de9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FZN_BUFFERLEN</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>a67d261398408f33c742b66fe70fb4118</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FZN_MAX_PUSHEDTOKENS</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>ae62813daf1d07e641ce193847c473660</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CREATE_CONSTRAINT</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>a9b7b121d8251956e6184711081a8ab25</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>enum FznNumberType</type>
      <name>FZNNUMBERTYPE</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>a799b6c5ba6dcd37f9485b40dac4c927f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum FznExpType</type>
      <name>FZNEXPTYPE</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>a7f523c49eac8943dbec5c35d1944003b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Dimensions</type>
      <name>DIMENSIONS</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>adbb76042b8276e96841d92e14ac58038</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct VarArray</type>
      <name>VARARRAY</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>ab12410288d21e5badfc2bd577b97c3d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct FznConstant</type>
      <name>FZNCONSTANT</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>a3a85a1d0efadf5981adf2b60449f0439</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct FznInput</type>
      <name>FZNINPUT</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>a97c57e86c06fb18ec190e9d2e595ad16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct FznOutput</type>
      <name>FZNOUTPUT</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>a4047c0363aef1e3dbe26712dc6de15f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>FznNumberType</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>ac9ca3d57056f45edd1d760d9da53c478</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FZN_BOOL</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>ac9ca3d57056f45edd1d760d9da53c478a1847fda2c7cd6d54683c394dc32d3426</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FZN_INT</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>ac9ca3d57056f45edd1d760d9da53c478ae7768786bc0400d2809e5f22f247966e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FZN_FLOAT</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>ac9ca3d57056f45edd1d760d9da53c478a734fd9ed5776b8cced7c5054d3cf015f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>FznExpType</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>a3e3a8605369a197ff9dc438c447bb299</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FZN_EXP_NONE</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>a3e3a8605369a197ff9dc438c447bb299a3a6330c35f133cf8badcb72dfaf64b18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FZN_EXP_UNSIGNED</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>a3e3a8605369a197ff9dc438c447bb299a30e619c09bc8476d58520e6f639ef4de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FZN_EXP_SIGNED</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>a3e3a8605369a197ff9dc438c447bb299a73b8a03419845e6ab2c392e134ebfc97</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderFzn</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>ae6972c6c7ed500468e82491b8fab9d09</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintSolReaderFzn</name>
      <anchorfile>reader__fzn_8c.html</anchorfile>
      <anchor>ac5b4d33e28f4c078205ff6c04bcebdf3</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, FILE *file)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_fzn.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__fzn_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderFzn</name>
      <anchorfile>reader__fzn_8h.html</anchorfile>
      <anchor>ae6972c6c7ed500468e82491b8fab9d09</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintSolReaderFzn</name>
      <anchorfile>reader__fzn_8h.html</anchorfile>
      <anchor>ac5b4d33e28f4c078205ff6c04bcebdf3</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, FILE *file)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_gms.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__gms_8c</filename>
    <includes id="reader__gms_8h" name="reader_gms.h" local="yes" imported="no">scip/reader_gms.h</includes>
    <includes id="cons__knapsack_8h" name="cons_knapsack.h" local="yes" imported="no">scip/cons_knapsack.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="cons__logicor_8h" name="cons_logicor.h" local="yes" imported="no">scip/cons_logicor.h</includes>
    <includes id="cons__quadratic_8h" name="cons_quadratic.h" local="yes" imported="no">scip/cons_quadratic.h</includes>
    <includes id="cons__soc_8h" name="cons_soc.h" local="yes" imported="no">scip/cons_soc.h</includes>
    <includes id="cons__setppc_8h" name="cons_setppc.h" local="yes" imported="no">scip/cons_setppc.h</includes>
    <includes id="cons__varbound_8h" name="cons_varbound.h" local="yes" imported="no">scip/cons_varbound.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>READER_NAME</name>
      <anchorfile>reader__gms_8c.html</anchorfile>
      <anchor>ab96209313aa41036fa78dccf3a65ddbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_DESC</name>
      <anchorfile>reader__gms_8c.html</anchorfile>
      <anchor>a6af7670d26c84862991598647730b552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_EXTENSION</name>
      <anchorfile>reader__gms_8c.html</anchorfile>
      <anchor>a8c484111d1fbef7ebfeeb82b850de9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GMS_MAX_LINELEN</name>
      <anchorfile>reader__gms_8c.html</anchorfile>
      <anchor>aef2a561cef3587343e849847c9f4e5c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GMS_MAX_PRINTLEN</name>
      <anchorfile>reader__gms_8c.html</anchorfile>
      <anchor>a352a5438da3b4b4831bde74ffb3b277a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GMS_MAX_NAMELEN</name>
      <anchorfile>reader__gms_8c.html</anchorfile>
      <anchor>a8af517bef63167c8f2d3858a3017b39b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GMS_PRINTLEN</name>
      <anchorfile>reader__gms_8c.html</anchorfile>
      <anchor>a3b97652e793078724dbb726cade0fe61</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerFreeGms</name>
      <anchorfile>reader__gms_8c.html</anchorfile>
      <anchor>a26036807b0987fca03f7cc59f5ec6468</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerReadGms</name>
      <anchorfile>reader__gms_8c.html</anchorfile>
      <anchor>a49398d3b7dcc19defb321a01c2ee8d40</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderGms</name>
      <anchorfile>reader__gms_8c.html</anchorfile>
      <anchor>abd9efbb868163f97238c34e074107adb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteGms</name>
      <anchorfile>reader__gms_8c.html</anchorfile>
      <anchor>a52791ee2f1321079be2dd9b4da70ba9f</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_Bool transformed, SCIP_OBJSENSE objsense, SCIP_Real objscale, SCIP_Real objoffset, SCIP_VAR **vars, int nvars, int nbinvars, int nintvars, int nimplvars, int ncontvars, SCIP_CONS **conss, int nconss, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_gms.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__gms_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderGms</name>
      <anchorfile>reader__gms_8h.html</anchorfile>
      <anchor>abd9efbb868163f97238c34e074107adb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteGms</name>
      <anchorfile>reader__gms_8h.html</anchorfile>
      <anchor>a52791ee2f1321079be2dd9b4da70ba9f</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_Bool transformed, SCIP_OBJSENSE objsense, SCIP_Real objscale, SCIP_Real objoffset, SCIP_VAR **vars, int nvars, int nbinvars, int nintvars, int nimplvars, int ncontvars, SCIP_CONS **conss, int nconss, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_lp.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__lp_8c</filename>
    <includes id="reader__lp_8h" name="reader_lp.h" local="yes" imported="no">scip/reader_lp.h</includes>
    <includes id="cons__knapsack_8h" name="cons_knapsack.h" local="yes" imported="no">scip/cons_knapsack.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="cons__logicor_8h" name="cons_logicor.h" local="yes" imported="no">scip/cons_logicor.h</includes>
    <includes id="cons__setppc_8h" name="cons_setppc.h" local="yes" imported="no">scip/cons_setppc.h</includes>
    <includes id="cons__varbound_8h" name="cons_varbound.h" local="yes" imported="no">scip/cons_varbound.h</includes>
    <includes id="cons__sos1_8h" name="cons_sos1.h" local="yes" imported="no">scip/cons_sos1.h</includes>
    <includes id="cons__sos2_8h" name="cons_sos2.h" local="yes" imported="no">scip/cons_sos2.h</includes>
    <includes id="cons__indicator_8h" name="cons_indicator.h" local="yes" imported="no">scip/cons_indicator.h</includes>
    <includes id="cons__quadratic_8h" name="cons_quadratic.h" local="yes" imported="no">scip/cons_quadratic.h</includes>
    <includes id="cons__soc_8h" name="cons_soc.h" local="yes" imported="no">scip/cons_soc.h</includes>
    <includes id="cons__bounddisjunction_8h" name="cons_bounddisjunction.h" local="yes" imported="no">scip/cons_bounddisjunction.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>READER_NAME</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>ab96209313aa41036fa78dccf3a65ddbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_DESC</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a6af7670d26c84862991598647730b552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_EXTENSION</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a8c484111d1fbef7ebfeeb82b850de9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LP_MAX_LINELEN</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a5a83d9732622408e075a41c4f2fc4b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LP_MAX_PUSHEDTOKENS</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a765adf1fa6ddb2a011fd3734c72b96ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LP_INIT_COEFSSIZE</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a131231fb12e64d33e0490d9d4942173b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LP_INIT_QUADCOEFSSIZE</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a1eb79032baefa0d0672973e5d2870295</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LP_MAX_PRINTLEN</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a5bc33987b87f0c56d95a7bb5cd19aad1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LP_MAX_NAMELEN</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a00ad725399c0a7d1c2e9d5197432e8c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LP_PRINTLEN</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a96f87946c13fcd32a6569b6aae81e41b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerFreeLp</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a6b59d6e1b1ecb2dc4d52344fc02677e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum LpSection</type>
      <name>LPSECTION</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>aa5aa48fe79688540c8933d44ad46dd14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum LpExpType</type>
      <name>LPEXPTYPE</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a388328052d0ec07c7f9577bc7a35a44a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum LpSense</type>
      <name>LPSENSE</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>ad1cb60f6ea7d6b7fb03f4b275942d283</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct LpInput</type>
      <name>LPINPUT</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a4d9e94d7bd42493c7dac64cea28df16c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LpSection</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a8a14075d036f363d8ac0f5df2afc6de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LP_START</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a8a14075d036f363d8ac0f5df2afc6de0a2a7ded85bd98a47d43b29b3da84768ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LP_OBJECTIVE</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a8a14075d036f363d8ac0f5df2afc6de0a0558fc6a0f82124db09d399aaa881bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LP_CONSTRAINTS</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a8a14075d036f363d8ac0f5df2afc6de0abeaa929ebad70c329456695c71d58132</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LP_BOUNDS</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a8a14075d036f363d8ac0f5df2afc6de0ade0ca4e8abf49ff01c4960592a829e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LP_GENERALS</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a8a14075d036f363d8ac0f5df2afc6de0a8dc8e71856444be8efbd68bc183600d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LP_BINARIES</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a8a14075d036f363d8ac0f5df2afc6de0ade59ce228f73abd17538203650d9e71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LP_SEMICONTINUOUS</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a8a14075d036f363d8ac0f5df2afc6de0ab99367c76becf1740c451e029178c8c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LP_SOS</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a8a14075d036f363d8ac0f5df2afc6de0a0003a6bf539422ebbf4451810bf17b2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LP_END</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a8a14075d036f363d8ac0f5df2afc6de0a0054afcf11371479260d7dedb08b4ec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LpExpType</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a4edb22496d2447f6385b29a8fab53efd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LP_EXP_NONE</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a4edb22496d2447f6385b29a8fab53efdaad13d1524a7de8321e12e44cdaeef8be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LP_EXP_UNSIGNED</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a4edb22496d2447f6385b29a8fab53efda4a8978debe101b9cf6df12745741c7c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LP_EXP_SIGNED</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a4edb22496d2447f6385b29a8fab53efda7fef473b62e641425e1b039370420762</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>LpSense</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>af4c3bc3072e6524ff49c07d308d83c94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LP_SENSE_NOTHING</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>af4c3bc3072e6524ff49c07d308d83c94a608dcefcbac058553681533e0aadf9f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LP_SENSE_LE</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>af4c3bc3072e6524ff49c07d308d83c94a0ce098205c2f3fe576051b30ebaeb5e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LP_SENSE_GE</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>af4c3bc3072e6524ff49c07d308d83c94a3fa3113ab7cd4935a9eb695ef0cf8104</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LP_SENSE_EQ</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>af4c3bc3072e6524ff49c07d308d83c94a7aeaaff27fe063aa572d679805254854</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderLp</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a657d2b3e5cce4ef0eb3ebcc2d258dcd3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadLp</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a4f163cae89f0ca82cdc21e2d5a7e12a5</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader, const char *filename, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteLp</name>
      <anchorfile>reader__lp_8c.html</anchorfile>
      <anchor>a63c41ab5750c9121f0a2816b1460dc36</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_Bool transformed, SCIP_OBJSENSE objsense, SCIP_Real objscale, SCIP_Real objoffset, SCIP_VAR **vars, int nvars, int nbinvars, int nintvars, int nimplvars, int ncontvars, SCIP_CONS **conss, int nconss, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_lp.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__lp_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderLp</name>
      <anchorfile>reader__lp_8h.html</anchorfile>
      <anchor>a657d2b3e5cce4ef0eb3ebcc2d258dcd3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadLp</name>
      <anchorfile>reader__lp_8h.html</anchorfile>
      <anchor>a4f163cae89f0ca82cdc21e2d5a7e12a5</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader, const char *filename, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteLp</name>
      <anchorfile>reader__lp_8h.html</anchorfile>
      <anchor>a63c41ab5750c9121f0a2816b1460dc36</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_Bool transformed, SCIP_OBJSENSE objsense, SCIP_Real objscale, SCIP_Real objoffset, SCIP_VAR **vars, int nvars, int nbinvars, int nintvars, int nimplvars, int ncontvars, SCIP_CONS **conss, int nconss, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_mps.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__mps_8c</filename>
    <includes id="reader__mps_8h" name="reader_mps.h" local="yes" imported="no">scip/reader_mps.h</includes>
    <includes id="cons__knapsack_8h" name="cons_knapsack.h" local="yes" imported="no">scip/cons_knapsack.h</includes>
    <includes id="cons__indicator_8h" name="cons_indicator.h" local="yes" imported="no">scip/cons_indicator.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="cons__logicor_8h" name="cons_logicor.h" local="yes" imported="no">scip/cons_logicor.h</includes>
    <includes id="cons__setppc_8h" name="cons_setppc.h" local="yes" imported="no">scip/cons_setppc.h</includes>
    <includes id="cons__varbound_8h" name="cons_varbound.h" local="yes" imported="no">scip/cons_varbound.h</includes>
    <includes id="cons__sos1_8h" name="cons_sos1.h" local="yes" imported="no">scip/cons_sos1.h</includes>
    <includes id="cons__sos2_8h" name="cons_sos2.h" local="yes" imported="no">scip/cons_sos2.h</includes>
    <includes id="cons__quadratic_8h" name="cons_quadratic.h" local="yes" imported="no">scip/cons_quadratic.h</includes>
    <includes id="cons__soc_8h" name="cons_soc.h" local="yes" imported="no">scip/cons_soc.h</includes>
    <includes id="cons__bounddisjunction_8h" name="cons_bounddisjunction.h" local="yes" imported="no">scip/cons_bounddisjunction.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>READER_NAME</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>ab96209313aa41036fa78dccf3a65ddbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_DESC</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a6af7670d26c84862991598647730b552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_EXTENSION</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a8c484111d1fbef7ebfeeb82b850de9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MPS_MAX_LINELEN</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>af51b9b445d8c9ebd6633ed9f3fb8de2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MPS_MAX_NAMELEN</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>adcc191f6f7735e4d5e8245ff1ebdca5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MPS_MAX_VALUELEN</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a8a8214ac0fa423bc68beb942c62346bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MPS_MAX_FIELDLEN</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a7c7c3fada9c0f03146fd578e783522bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PATCH_CHAR</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>add97ddd15f5aa957f3393e4bd2827ffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLANK</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a5aebfba92373e0dc8a76d272bcd8e85d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerFreeMps</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>ac4bf564602ad913943f52230ca6fbe30</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum MpsSection</type>
      <name>MPSSECTION</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a5193c24d1d66a1df00e7f3764f278ec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct MpsInput</type>
      <name>MPSINPUT</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a5526463d898ab473784839b484b62053</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SparseMatrix</type>
      <name>SPARSEMATRIX</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a09ee712a38f034f2bf9b59f56c424b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>MpsSection</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a0ffe135ce5403d1560e7a147b1be9bb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPS_NAME</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a0ffe135ce5403d1560e7a147b1be9bb0a3a872538264d6a4fc8e6baa7d39ad59e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPS_OBJSEN</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a0ffe135ce5403d1560e7a147b1be9bb0a8d2ebb6ebbf8648b4c73c3c3f7b74a47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPS_OBJNAME</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a0ffe135ce5403d1560e7a147b1be9bb0a91aa765a0f0487b93378049a994b6ec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPS_ROWS</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a0ffe135ce5403d1560e7a147b1be9bb0a70d1be699a02a055ef71a753f3e32af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPS_USERCUTS</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a0ffe135ce5403d1560e7a147b1be9bb0a48c22d1f750a8be13e260e1615905537</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPS_LAZYCONS</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a0ffe135ce5403d1560e7a147b1be9bb0a85644e59f4097b9493d96c6efe301f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPS_COLUMNS</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a0ffe135ce5403d1560e7a147b1be9bb0a073602118a1fbc420f0699df285f6ec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPS_RHS</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a0ffe135ce5403d1560e7a147b1be9bb0ab378d6dfb986a7287d8313e717653bb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPS_RANGES</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a0ffe135ce5403d1560e7a147b1be9bb0ab8aaf8c80b02eece40bd4638bb8ddc6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPS_BOUNDS</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a0ffe135ce5403d1560e7a147b1be9bb0a467715050bdf5ca8ec161e6221c1e9da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPS_SOS</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a0ffe135ce5403d1560e7a147b1be9bb0a4d7506cb502f6ef0f2da59b61733adec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPS_QUADOBJ</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a0ffe135ce5403d1560e7a147b1be9bb0ae7c465b84a88984fa7c8bb4155366d93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPS_QMATRIX</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a0ffe135ce5403d1560e7a147b1be9bb0aa8a2c6e229a927f31074d4542bde1353</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPS_QCMATRIX</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a0ffe135ce5403d1560e7a147b1be9bb0a06b46b09a2a2b8ca0ae1efc8fa6ee0f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPS_INDICATORS</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a0ffe135ce5403d1560e7a147b1be9bb0a85e7882f773fd8bfa831a8b7230f9b20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPS_ENDATA</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a0ffe135ce5403d1560e7a147b1be9bb0adca9460e8bd4642af16a91a4eec23331</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderMps</name>
      <anchorfile>reader__mps_8c.html</anchorfile>
      <anchor>a66b59f3480cb38476c29a159f8ee5719</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_mps.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__mps_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderMps</name>
      <anchorfile>reader__mps_8h.html</anchorfile>
      <anchor>a66b59f3480cb38476c29a159f8ee5719</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_opb.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__opb_8c</filename>
    <includes id="reader__opb_8h" name="reader_opb.h" local="yes" imported="no">scip/reader_opb.h</includes>
    <includes id="cons__and_8h" name="cons_and.h" local="yes" imported="no">scip/cons_and.h</includes>
    <includes id="cons__indicator_8h" name="cons_indicator.h" local="yes" imported="no">scip/cons_indicator.h</includes>
    <includes id="cons__knapsack_8h" name="cons_knapsack.h" local="yes" imported="no">scip/cons_knapsack.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="cons__logicor_8h" name="cons_logicor.h" local="yes" imported="no">scip/cons_logicor.h</includes>
    <includes id="cons__setppc_8h" name="cons_setppc.h" local="yes" imported="no">scip/cons_setppc.h</includes>
    <includes id="cons__varbound_8h" name="cons_varbound.h" local="yes" imported="no">scip/cons_varbound.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>READER_NAME</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>ab96209313aa41036fa78dccf3a65ddbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_DESC</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>a6af7670d26c84862991598647730b552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_EXTENSION</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>a8c484111d1fbef7ebfeeb82b850de9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USEINDICATOR</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>ac2637e01d9ff6c9746098417b9f2e577</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BACKIMPLICATION</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>abd714741b5753438dead6715c5d55c75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASHSIZE_OPBANDCONS</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>a97973e098aa3cfc00b29eb42fe8526f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OPB_MAX_LINELEN</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>af8a977bd04d2ef8dda8eda692a6c8f2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OPB_MAX_PUSHEDTOKENS</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>a9973170543bd6beef987934c9f3bd944</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OPB_INIT_COEFSSIZE</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>aa6930cc43028202aa62fc9bae03f9213</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerFreeOpb</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>a4ab7c0fe743f5bddc353da70e2479910</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum OpbExpType</type>
      <name>OPBEXPTYPE</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>ae1e85bd83278dd7c3452e7725249c9dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum OpbSense</type>
      <name>OPBSENSE</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>a391a934f97aebc4fbdc2d37ab5addddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ConsAndData</type>
      <name>CONSANDDATA</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>a3ce7f3c7c0bc6db5f913b60d4c66c0a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct OpbInput</type>
      <name>OPBINPUT</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>ab7172628a7abd9c99118a6ec2f4d073d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>OpbExpType</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>a090df3ae851bb898d90e66bbb0424e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPB_EXP_NONE</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>a090df3ae851bb898d90e66bbb0424e55af579298799ccf772c7368f630a1e5202</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPB_EXP_UNSIGNED</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>a090df3ae851bb898d90e66bbb0424e55aa8f1186cf1ab25219e288f52bb8d03a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPB_EXP_SIGNED</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>a090df3ae851bb898d90e66bbb0424e55a761f8405be5084caadc2babc3c53b839</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>OpbSense</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>aff372d9374e03978b043ebc48c9ba8a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPB_SENSE_NOTHING</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>aff372d9374e03978b043ebc48c9ba8a1a262551c0240ba12c9fb0e96d0a1960e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPB_SENSE_LE</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>aff372d9374e03978b043ebc48c9ba8a1a2929d83b200f585b9b77eccdac55decc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPB_SENSE_GE</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>aff372d9374e03978b043ebc48c9ba8a1a14d1d1c1c9b0da34ad82cebab966e1c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPB_SENSE_EQ</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>aff372d9374e03978b043ebc48c9ba8a1abd0f7a66a40ff07512d8850ed6236c94</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadOpb</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>a6d8d7dc8a548f9399fd390a6774e4fcf</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader, const char *filename, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteOpb</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>a993e983a7f96cb8a1c27435ab32a18ec</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_Bool transformed, SCIP_OBJSENSE objsense, SCIP_Real objscale, SCIP_Real objoffset, SCIP_VAR **vars, int nvars, int nbinvars, int nintvars, int nimplvars, int ncontvars, int nfixedvars, SCIP_CONS **conss, int nconss, SCIP_Bool genericnames, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderOpb</name>
      <anchorfile>reader__opb_8c.html</anchorfile>
      <anchor>a037e7727fded09d930fddc129efc0167</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_opb.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__opb_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderOpb</name>
      <anchorfile>reader__opb_8h.html</anchorfile>
      <anchor>a037e7727fded09d930fddc129efc0167</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadOpb</name>
      <anchorfile>reader__opb_8h.html</anchorfile>
      <anchor>a6d8d7dc8a548f9399fd390a6774e4fcf</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader, const char *filename, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteOpb</name>
      <anchorfile>reader__opb_8h.html</anchorfile>
      <anchor>a993e983a7f96cb8a1c27435ab32a18ec</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_Bool transformed, SCIP_OBJSENSE objsense, SCIP_Real objscale, SCIP_Real objoffset, SCIP_VAR **vars, int nvars, int nbinvars, int nintvars, int nimplvars, int ncontvars, int nfixedvars, SCIP_CONS **conss, int nconss, SCIP_Bool genericnames, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_pip.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__pip_8c</filename>
    <includes id="reader__pip_8h" name="reader_pip.h" local="yes" imported="no">scip/reader_pip.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="cons__quadratic_8h" name="cons_quadratic.h" local="yes" imported="no">scip/cons_quadratic.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>READER_NAME</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>ab96209313aa41036fa78dccf3a65ddbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_DESC</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a6af7670d26c84862991598647730b552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_EXTENSION</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a8c484111d1fbef7ebfeeb82b850de9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIP_MAX_LINELEN</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>abefad25559757ca7b5a2f1d31e285d17</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIP_MAX_PUSHEDTOKENS</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a0effce28b057b30da405fbaa5f44d16f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIP_INIT_VARSSIZE</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a3dfd10ba6b14f2d9444834e5032ab9f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIP_INIT_MONOMSSIZE</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a3dfc098cc47788bbe0cb2093c4e1ff9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIP_INIT_FACTORSSIZE</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>ac2eb66f0abaf4d5d51ab2246749bee7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerFreePip</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>aae9fdbce89405ff22eae5e15906bdc28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerWritePip</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a80cbc7ffcb39024da798fc77d7f3a7b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum PipSection</type>
      <name>PIPSECTION</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a9393a63400e87ba09599e99939a15a7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum PipExpType</type>
      <name>PIPEXPTYPE</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>acd8dd5c482f3ac4b9c112db2e4e251a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum PipSense</type>
      <name>PIPSENSE</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a9cfb487037f71121946aba0b4fedec3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PipInput</type>
      <name>PIPINPUT</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a80378ead6a81172227c5cbf368a1fa6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PipSection</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a77e9785bc8fb72710e6859bd0605f317</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIP_START</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a77e9785bc8fb72710e6859bd0605f317a3d303aaba5f42ee165753c0b0d37a8f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIP_OBJECTIVE</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a77e9785bc8fb72710e6859bd0605f317ad5a5faa539cac555b22cc8d2291c6749</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIP_CONSTRAINTS</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a77e9785bc8fb72710e6859bd0605f317a525067bd208a918be56d50f458fa481c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIP_BOUNDS</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a77e9785bc8fb72710e6859bd0605f317a6465d82c6dc4cc16fc8f386c407f3d48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIP_GENERALS</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a77e9785bc8fb72710e6859bd0605f317a84e108116bbd0a87dc9a2a6d72a10d99</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIP_BINARIES</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a77e9785bc8fb72710e6859bd0605f317a2c86834e5d6982d1e7e91b2ae65b39c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIP_END</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a77e9785bc8fb72710e6859bd0605f317a1e4c58211979b9c9f1752b27345842e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PipExpType</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>ae7e291e5391816fff7b1b987b8de4e61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIP_EXP_NONE</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>ae7e291e5391816fff7b1b987b8de4e61a6b38cc2f6d1dc5a3bc671f3692644090</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIP_EXP_UNSIGNED</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>ae7e291e5391816fff7b1b987b8de4e61a7d7768590d1b2f40d3110966545f8fc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIP_EXP_SIGNED</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>ae7e291e5391816fff7b1b987b8de4e61a1914c68e5fd88133d828ef1fa90f43dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PipSense</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a2ad21d8161e26d9b8994f557c045e886</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIP_SENSE_NOTHING</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a2ad21d8161e26d9b8994f557c045e886a2d1b5c778472c21be32a18aabfcf27e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIP_SENSE_LE</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a2ad21d8161e26d9b8994f557c045e886a94d517889ebcebd6d9eaaa180a639b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIP_SENSE_GE</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a2ad21d8161e26d9b8994f557c045e886a443cc9404b01478b1f0043e580f16874</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIP_SENSE_EQ</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a2ad21d8161e26d9b8994f557c045e886a6aa421033cf583959ed765774cb21e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderPip</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>ad80770c7dcf279bb8a84f21ae9f81148</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadPip</name>
      <anchorfile>reader__pip_8c.html</anchorfile>
      <anchor>a6b4d28f4d8e409ae0bc595c5a98eeee1</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader, const char *filename, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_pip.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__pip_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderPip</name>
      <anchorfile>reader__pip_8h.html</anchorfile>
      <anchor>ad80770c7dcf279bb8a84f21ae9f81148</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadPip</name>
      <anchorfile>reader__pip_8h.html</anchorfile>
      <anchor>a6b4d28f4d8e409ae0bc595c5a98eeee1</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader, const char *filename, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_ppm.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__ppm_8c</filename>
    <includes id="reader__ppm_8h" name="reader_ppm.h" local="yes" imported="no">scip/reader_ppm.h</includes>
    <includes id="cons__knapsack_8h" name="cons_knapsack.h" local="yes" imported="no">scip/cons_knapsack.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="cons__logicor_8h" name="cons_logicor.h" local="yes" imported="no">scip/cons_logicor.h</includes>
    <includes id="cons__setppc_8h" name="cons_setppc.h" local="yes" imported="no">scip/cons_setppc.h</includes>
    <includes id="cons__varbound_8h" name="cons_varbound.h" local="yes" imported="no">scip/cons_varbound.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>READER_NAME</name>
      <anchorfile>reader__ppm_8c.html</anchorfile>
      <anchor>ab96209313aa41036fa78dccf3a65ddbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_DESC</name>
      <anchorfile>reader__ppm_8c.html</anchorfile>
      <anchor>a6af7670d26c84862991598647730b552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_EXTENSION</name>
      <anchorfile>reader__ppm_8c.html</anchorfile>
      <anchor>a8c484111d1fbef7ebfeeb82b850de9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PPM_MAX_LINELEN</name>
      <anchorfile>reader__ppm_8c.html</anchorfile>
      <anchor>ace14e1bbddb21da5f1ca9b71c5ed9cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PPM_RGB_LIMIT</name>
      <anchorfile>reader__ppm_8c.html</anchorfile>
      <anchor>a913a403aa6851e88054fd9bebf66939b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PPM_COEF_LIMIT</name>
      <anchorfile>reader__ppm_8c.html</anchorfile>
      <anchor>a07941b43179e31b1cef1524c3d26bca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PPM_RGB_RELATIVE</name>
      <anchorfile>reader__ppm_8c.html</anchorfile>
      <anchor>aa72e2493ef903265e4464aec6808ac1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PPM_RGB_ASCII</name>
      <anchorfile>reader__ppm_8c.html</anchorfile>
      <anchor>a9974d4ff99677fecf9ef8621bc3433b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerReadPpm</name>
      <anchorfile>reader__ppm_8c.html</anchorfile>
      <anchor>a2b4723aebd2becf92ce1d06242e35cbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderPpm</name>
      <anchorfile>reader__ppm_8c.html</anchorfile>
      <anchor>a13673a8710604f2930d5dbdcf1d92775</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwritePpm</name>
      <anchorfile>reader__ppm_8c.html</anchorfile>
      <anchor>aee6f240f18c029c12d6eea4ec738454a</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_READERDATA *readerdata, SCIP_Bool transformed, SCIP_VAR **vars, int nvars, SCIP_CONS **conss, int nconss, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_ppm.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__ppm_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderPpm</name>
      <anchorfile>reader__ppm_8h.html</anchorfile>
      <anchor>a13673a8710604f2930d5dbdcf1d92775</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwritePpm</name>
      <anchorfile>reader__ppm_8h.html</anchorfile>
      <anchor>aee6f240f18c029c12d6eea4ec738454a</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *name, SCIP_READERDATA *readerdata, SCIP_Bool transformed, SCIP_VAR **vars, int nvars, SCIP_CONS **conss, int nconss, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_rlp.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__rlp_8c</filename>
    <includes id="reader__lp_8h" name="reader_lp.h" local="yes" imported="no">scip/reader_lp.h</includes>
    <includes id="reader__rlp_8h" name="reader_rlp.h" local="yes" imported="no">scip/reader_rlp.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>READER_NAME</name>
      <anchorfile>reader__rlp_8c.html</anchorfile>
      <anchor>ab96209313aa41036fa78dccf3a65ddbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_DESC</name>
      <anchorfile>reader__rlp_8c.html</anchorfile>
      <anchor>a6af7670d26c84862991598647730b552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_EXTENSION</name>
      <anchorfile>reader__rlp_8c.html</anchorfile>
      <anchor>a8c484111d1fbef7ebfeeb82b850de9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerFreeRlp</name>
      <anchorfile>reader__rlp_8c.html</anchorfile>
      <anchor>a8b68da2b6f9582c882b88457fdcabb04</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderRlp</name>
      <anchorfile>reader__rlp_8c.html</anchorfile>
      <anchor>a994be78cbab76a49834148cac1d45ab2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_rlp.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__rlp_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderRlp</name>
      <anchorfile>reader__rlp_8h.html</anchorfile>
      <anchor>a994be78cbab76a49834148cac1d45ab2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_sol.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__sol_8c</filename>
    <includes id="reader__sol_8h" name="reader_sol.h" local="yes" imported="no">scip/reader_sol.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>READER_NAME</name>
      <anchorfile>reader__sol_8c.html</anchorfile>
      <anchor>ab96209313aa41036fa78dccf3a65ddbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_DESC</name>
      <anchorfile>reader__sol_8c.html</anchorfile>
      <anchor>a6af7670d26c84862991598647730b552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_EXTENSION</name>
      <anchorfile>reader__sol_8c.html</anchorfile>
      <anchor>a8c484111d1fbef7ebfeeb82b850de9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerFreeSol</name>
      <anchorfile>reader__sol_8c.html</anchorfile>
      <anchor>a9357a39a5606484a58a23279eee0bdf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerWriteSol</name>
      <anchorfile>reader__sol_8c.html</anchorfile>
      <anchor>a6efdf858e8d4c81aa63af9a91039a270</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderSol</name>
      <anchorfile>reader__sol_8c.html</anchorfile>
      <anchor>a76f7fca69576620a4adffa98dc81be43</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_sol.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__sol_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderSol</name>
      <anchorfile>reader__sol_8h.html</anchorfile>
      <anchor>a76f7fca69576620a4adffa98dc81be43</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_wbo.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__wbo_8c</filename>
    <includes id="reader__opb_8h" name="reader_opb.h" local="yes" imported="no">scip/reader_opb.h</includes>
    <includes id="reader__wbo_8h" name="reader_wbo.h" local="yes" imported="no">scip/reader_wbo.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>READER_NAME</name>
      <anchorfile>reader__wbo_8c.html</anchorfile>
      <anchor>ab96209313aa41036fa78dccf3a65ddbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_DESC</name>
      <anchorfile>reader__wbo_8c.html</anchorfile>
      <anchor>a6af7670d26c84862991598647730b552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READER_EXTENSION</name>
      <anchorfile>reader__wbo_8c.html</anchorfile>
      <anchor>a8c484111d1fbef7ebfeeb82b850de9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>readerFreeWbo</name>
      <anchorfile>reader__wbo_8c.html</anchorfile>
      <anchor>a2f4af5ba9df2c84b9fa40f21fe55e61f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderWbo</name>
      <anchorfile>reader__wbo_8c.html</anchorfile>
      <anchor>aa12a3d59eb24c97a73d8db90624fcac2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_wbo.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__wbo_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderWbo</name>
      <anchorfile>reader__wbo_8h.html</anchorfile>
      <anchor>aa12a3d59eb24c97a73d8db90624fcac2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_zpl.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__zpl_8c</filename>
    <includes id="reader__zpl_8h" name="reader_zpl.h" local="yes" imported="no">scip/reader_zpl.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderZpl</name>
      <anchorfile>reader__zpl_8c.html</anchorfile>
      <anchor>aa6e6950ec1d97af8f38a5d10dd4b5271</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>reader_zpl.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>reader__zpl_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReaderZpl</name>
      <anchorfile>reader__zpl_8h.html</anchorfile>
      <anchor>aa6e6950ec1d97af8f38a5d10dd4b5271</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>scip.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>scip_8c</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>HASHTABLESIZE_FACTOR</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a512d38a9f09ec24fb73afe49285af4dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXNCLIQUEVARSCOMP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab22eaedcf28fb77d3cafde39a974a7d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXDNOM</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a15826381c8e8f7a1c28ffd6756f273db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPversion</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa6bd4ec02060cb8abac4bdc254b22f98</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPmajorVersion</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad75a4783b7164191b3e35560130b3911</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPminorVersion</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8480404a196ebd5812c733be7255d822</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPtechVersion</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab4301f3a3e1601d9afdcfb807d9b10b6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsubversion</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a23ec8370d5d433e1cb47922a170d9abf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprintVersion</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aaa53a38f12aa2f66ce5590a1b914ea1d</anchor>
      <arglist>(FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprintError</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aae67ce48816eb43163f9441f12b854f9</anchor>
      <arglist>(SCIP_RETCODE retcode, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreate</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>acf9182389e37e83d75f471f907250081</anchor>
      <arglist>(SCIP **scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfree</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abbb652f903ff17766b15cf578c717e71</anchor>
      <arglist>(SCIP **scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_STAGE</type>
      <name>SCIPgetStage</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aecb56f0f1a9be97fda98ea9fdcf61d2c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintStage</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a29b05cad88abcc216a8f4f6974b3caa0</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_STATUS</type>
      <name>SCIPgetStatus</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>adfa940b47f19c0863d400b554378ef45</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintStatus</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a80b0dfb8dfac80f47a11cef68019a21a</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisTransformed</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a276205c51844317fddb4015d27cad154</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisExactSolve</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>afe5d752623d89a0be8804a7ca97fa85b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpressedCtrlC</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7fbd6310ff628af203e56df753c93419</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisStopped</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abaf6b1008463bd1c0459ea7b8f97976f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateMessagehdlr</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7011fcc9263ad11d668bed492811bd96</anchor>
      <arglist>(SCIP_MESSAGEHDLR **messagehdlr, SCIP_Bool bufferedoutput, SCIP_DECL_MESSAGEERROR((*messageerror)), SCIP_DECL_MESSAGEWARNING((*messagewarning)), SCIP_DECL_MESSAGEDIALOG((*messagedialog)), SCIP_DECL_MESSAGEINFO((*messageinfo)), SCIP_MESSAGEHDLRDATA *messagehdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeMessagehdlr</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6180783ed2b2a3f3051aea5367ed6ec0</anchor>
      <arglist>(SCIP_MESSAGEHDLR **messagehdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetMessagehdlr</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6592d0e9f9b21b395fc1938c7d8f55e7</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetDefaultMessagehdlr</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a666b0195d1f0cf4027cb71620f266691</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_MESSAGEHDLR *</type>
      <name>SCIPgetMessagehdlr</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0b55cc5ee4fc4916dab301baa98f90ad</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdialogMessage</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9714c0ef46d46c786c8b22fadd5cd72b</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPinfoMessage</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0539bdb9cd224f8b4bceafb87accfe1a</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPverbMessage</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a15a74fb5047e7a4241df8cd139e2570a</anchor>
      <arglist>(SCIP *scip, SCIP_VERBLEVEL msgverblevel, FILE *file, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VERBLEVEL</type>
      <name>SCIPgetVerbLevel</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a171ae3f547f462b5ecaa5db6442dae65</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyPlugins</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a03064c5e5c62ea22cce2f0fd60bd0a19</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_Bool copyreaders, SCIP_Bool copypricers, SCIP_Bool copyconshdlrs, SCIP_Bool copyconflicthdlrs, SCIP_Bool copypresolvers, SCIP_Bool copyrelaxators, SCIP_Bool copyseparators, SCIP_Bool copypropagators, SCIP_Bool copyheuristics, SCIP_Bool copyeventhdlrs, SCIP_Bool copynodeselectors, SCIP_Bool copybranchrules, SCIP_Bool copydisplays, SCIP_Bool copydialogs, SCIP_Bool copynlpis, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyProb</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6e4030d237369441234bce59eb1d8707</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarCopy</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac60a98f090438914344937bccbcd6ff0</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_VAR *sourcevar, SCIP_VAR **targetvar, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool global)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a1805aa332d0b93f7f255d719eebea066</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool global)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetConsCopy</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6e0b613906dbabb0d812e0d24e35f504</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_CONS *sourcecons, SCIP_CONS **targetcons, SCIP_CONSHDLR *sourceconshdlr, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, const char *name, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode, SCIP_Bool global, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyConss</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad9e82dbef9b681fc0063ea36e5cc4671</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool global, SCIP_Bool enablepricing, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyParamSettings</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ade1245b4b0ecd94c85251d9330ed85ef</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopy</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0b02ced4ec30b680f85f50d0d088851c</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, const char *suffix, SCIP_Bool global, SCIP_Bool enablepricing, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddBoolParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad6b8cd6aca5599ac7a6d672c925a00ea</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, SCIP_Bool *valueptr, SCIP_Bool isadvanced, SCIP_Bool defaultvalue, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddIntParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a21615f4989022ab770f3dfdd68467f48</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int *valueptr, SCIP_Bool isadvanced, int defaultvalue, int minvalue, int maxvalue, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLongintParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0afd51696f55ab5000e82f4603c3466a</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, SCIP_Longint *valueptr, SCIP_Bool isadvanced, SCIP_Longint defaultvalue, SCIP_Longint minvalue, SCIP_Longint maxvalue, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddRealParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4b1bf7a9fc9d69430ed67c6fdb1dfe9c</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, SCIP_Real *valueptr, SCIP_Bool isadvanced, SCIP_Real defaultvalue, SCIP_Real minvalue, SCIP_Real maxvalue, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCharParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a1978388236498b6fc623317e00a73937</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, char *valueptr, SCIP_Bool isadvanced, char defaultvalue, const char *allowedvalues, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddStringParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a45be3ad6cfa4f827ddc23cb7f6974c85</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, char **valueptr, SCIP_Bool isadvanced, const char *defaultvalue, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetBoolParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a032d442659fb5a2dba465cd2fc699aa7</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Bool *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetIntParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ade9cb72570b041b5c5549ce36be944ee</anchor>
      <arglist>(SCIP *scip, const char *name, int *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLongintParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad742f55244be27341d49c1e1d204c8d4</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Longint *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetRealParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6f8029234396592dc48285f35e9eacf2</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Real *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetCharParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>afd8cf8567761340ea093c9398e44bfeb</anchor>
      <arglist>(SCIP *scip, const char *name, char *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetStringParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac09875c22b4979b6102f3023d5e4354e</anchor>
      <arglist>(SCIP *scip, const char *name, char **value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBoolParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aeb1efbc3feae45fbfe8776f96f7cc6c1</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Bool value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetIntParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a623d0ee8fcfea556a1a060863c6d41e5</anchor>
      <arglist>(SCIP *scip, const char *name, int value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetLongintParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a46a3604d3c1eafa2c0bbc3f6da6bc014</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Longint value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRealParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af367ec136692408de9b4d9f126792292</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Real value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetCharParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab739570062ae299c4cf96f07e5c581ac</anchor>
      <arglist>(SCIP *scip, const char *name, char value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetStringParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abded6552fdd02388b762c79f0782405f</anchor>
      <arglist>(SCIP *scip, const char *name, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadParams</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a888d25795f5442b4f53ea2ecbd1a3988</anchor>
      <arglist>(SCIP *scip, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteParams</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9ded708f49a2be041bb9f0fa50aabe27</anchor>
      <arglist>(SCIP *scip, const char *filename, SCIP_Bool comments, SCIP_Bool onlychanged)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPresetParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa0328c5017b76792d6f13e4cd9670d2e</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPresetParams</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a15d4e88fa7b7d26d4530127baf25c67b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetEmphasis</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3a7bc3389ae07fd2aec05b1f470c4036</anchor>
      <arglist>(SCIP *scip, SCIP_PARAMSETTING paramsetting, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSubscipsOff</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6de4d1f7072ecd38201c92f0638098bc</anchor>
      <arglist>(SCIP *scip, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetHeuristics</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4c6399f0b7350398902a5e5dcaa7343c</anchor>
      <arglist>(SCIP *scip, SCIP_PARAMSETTING paramsetting, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPresolving</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa40bcb511bcc988f381902d8e719631e</anchor>
      <arglist>(SCIP *scip, SCIP_PARAMSETTING paramsetting, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSeparating</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af91abf95639f1bf2022c11d13a032b10</anchor>
      <arglist>(SCIP *scip, SCIP_PARAMSETTING paramsetting, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PARAM **</type>
      <name>SCIPgetParams</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5c513e97e96e80e3e9a119c93fed30d4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNParams</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3f11e69843067b4da6e7317a3ce155fd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReader</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a08baa19972eb93902b49828126781590</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, const char *extension, SCIP_DECL_READERCOPY((*readercopy)), SCIP_DECL_READERFREE((*readerfree)), SCIP_DECL_READERREAD((*readerread)), SCIP_DECL_READERWRITE((*readerwrite)), SCIP_READERDATA *readerdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_READER *</type>
      <name>SCIPfindReader</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a211ed53db6f2439f75a56d9d98516b2c</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_READER **</type>
      <name>SCIPgetReaders</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3e33bcf8c4113365b354a2503209ed21</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNReaders</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a778e973b21037618f175b48eb1ace9cd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePricer</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac677945e92f9eb7b2ea34820dab4e7b8</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, SCIP_Bool delay, SCIP_DECL_PRICERCOPY((*pricercopy)), SCIP_DECL_PRICERFREE((*pricerfree)), SCIP_DECL_PRICERINIT((*pricerinit)), SCIP_DECL_PRICEREXIT((*pricerexit)), SCIP_DECL_PRICERINITSOL((*pricerinitsol)), SCIP_DECL_PRICEREXITSOL((*pricerexitsol)), SCIP_DECL_PRICERREDCOST((*pricerredcost)), SCIP_DECL_PRICERFARKAS((*pricerfarkas)), SCIP_PRICERDATA *pricerdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRICER *</type>
      <name>SCIPfindPricer</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a82153a7b60f2f2e2d6ca33d693116aa8</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRICER **</type>
      <name>SCIPgetPricers</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a548921cc3a565a75a773e5eaa614c0a5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPricers</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8f5c3f95531a275209efb42f13891126</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNActivePricers</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad8c2bd945c08e5c5bcd8616af949ddc0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPricerPriority</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a494da8f84cd394cbf2923b744ad479ba</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPactivatePricer</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a866b071558016fab02981ed0f0f566c8</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdeactivatePricer</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa7fc05af91ad4efb4ebc434afe0c7067</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlr</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a40bf4175b4b9449262dfd5fd152f34d2</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int sepapriority, int enfopriority, int chckpriority, int sepafreq, int propfreq, int eagerfreq, int maxprerounds, SCIP_Bool delaysepa, SCIP_Bool delayprop, SCIP_Bool delaypresol, SCIP_Bool needscons, SCIP_DECL_CONSHDLRCOPY((*conshdlrcopy)), SCIP_DECL_CONSFREE((*consfree)), SCIP_DECL_CONSINIT((*consinit)), SCIP_DECL_CONSEXIT((*consexit)), SCIP_DECL_CONSINITPRE((*consinitpre)), SCIP_DECL_CONSEXITPRE((*consexitpre)), SCIP_DECL_CONSINITSOL((*consinitsol)), SCIP_DECL_CONSEXITSOL((*consexitsol)), SCIP_DECL_CONSDELETE((*consdelete)), SCIP_DECL_CONSTRANS((*constrans)), SCIP_DECL_CONSINITLP((*consinitlp)), SCIP_DECL_CONSSEPALP((*conssepalp)), SCIP_DECL_CONSSEPASOL((*conssepasol)), SCIP_DECL_CONSENFOLP((*consenfolp)), SCIP_DECL_CONSENFOPS((*consenfops)), SCIP_DECL_CONSCHECK((*conscheck)), SCIP_DECL_CONSPROP((*consprop)), SCIP_DECL_CONSPRESOL((*conspresol)), SCIP_DECL_CONSRESPROP((*consresprop)), SCIP_DECL_CONSLOCK((*conslock)), SCIP_DECL_CONSACTIVE((*consactive)), SCIP_DECL_CONSDEACTIVE((*consdeactive)), SCIP_DECL_CONSENABLE((*consenable)), SCIP_DECL_CONSDISABLE((*consdisable)), SCIP_DECL_CONSPRINT((*consprint)), SCIP_DECL_CONSCOPY((*conscopy)), SCIP_DECL_CONSPARSE((*consparse)), SCIP_CONSHDLRDATA *conshdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONSHDLR *</type>
      <name>SCIPfindConshdlr</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>adad138e3d0ff91c16b93d11e75731eb9</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONSHDLR **</type>
      <name>SCIPgetConshdlrs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae47f44194e8110f7e65e1630242884d8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNConshdlrs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3be289ebb05ff65ba463d6a72de21665</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConflicthdlr</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aea34c108ef1b1a846af0e5b0e9e16cf6</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, SCIP_DECL_CONFLICTCOPY((*conflictcopy)), SCIP_DECL_CONFLICTFREE((*conflictfree)), SCIP_DECL_CONFLICTINIT((*conflictinit)), SCIP_DECL_CONFLICTEXIT((*conflictexit)), SCIP_DECL_CONFLICTINITSOL((*conflictinitsol)), SCIP_DECL_CONFLICTEXITSOL((*conflictexitsol)), SCIP_DECL_CONFLICTEXEC((*conflictexec)), SCIP_CONFLICTHDLRDATA *conflicthdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONFLICTHDLR *</type>
      <name>SCIPfindConflicthdlr</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a809ecf7415b588b9d073d057c99343ee</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONFLICTHDLR **</type>
      <name>SCIPgetConflicthdlrs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6df6dfa39724da63c9dc955d1ec1e6be</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNConflicthdlrs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa7e194cbede0e996ca08bea37acc62cf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConflicthdlrPriority</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aec576eb568feb5d1688107aa4c9586f8</anchor>
      <arglist>(SCIP *scip, SCIP_CONFLICTHDLR *conflicthdlr, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a17450bffd69ed7588d9effda6319a2d6</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int maxrounds, SCIP_Bool delay, SCIP_DECL_PRESOLCOPY((*presolcopy)), SCIP_DECL_PRESOLFREE((*presolfree)), SCIP_DECL_PRESOLINIT((*presolinit)), SCIP_DECL_PRESOLEXIT((*presolexit)), SCIP_DECL_PRESOLINITPRE((*presolinitpre)), SCIP_DECL_PRESOLEXITPRE((*presolexitpre)), SCIP_DECL_PRESOLEXEC((*presolexec)), SCIP_PRESOLDATA *presoldata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRESOL *</type>
      <name>SCIPfindPresol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a392a6f5aeb8bc4ee7a4566858cc5500e</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRESOL **</type>
      <name>SCIPgetPresols</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0a672e98ce284c1a922be543398e5a79</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPresols</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa79a49272f4ae34b90ceb2d91b9b93fe</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPresolPriority</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9dafa8435e229d73b7b1e1aa131f3396</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeRelax</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a13611bf68d15df7245ae993ac3994154</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int freq, SCIP_DECL_RELAXCOPY((*relaxcopy)), SCIP_DECL_RELAXFREE((*relaxfree)), SCIP_DECL_RELAXINIT((*relaxinit)), SCIP_DECL_RELAXEXIT((*relaxexit)), SCIP_DECL_RELAXINITSOL((*relaxinitsol)), SCIP_DECL_RELAXEXITSOL((*relaxexitsol)), SCIP_DECL_RELAXEXEC((*relaxexec)), SCIP_RELAXDATA *relaxdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RELAX *</type>
      <name>SCIPfindRelax</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aade5c7432d4446054eeb03c58ce88915</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RELAX **</type>
      <name>SCIPgetRelaxs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a06933c29ccbb89e8275189240edb1e1c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNRelaxs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a1bdd4521104a0017395cca067a6a0ba8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxPriority</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8a2f8201d8abe0c31b090fea675d3caf</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepa</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aae39c83f65cb1f5eeced4a147d82335a</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int freq, SCIP_Real maxbounddist, SCIP_Bool usessubscip, SCIP_Bool delay, SCIP_DECL_SEPACOPY((*sepacopy)), SCIP_DECL_SEPAFREE((*sepafree)), SCIP_DECL_SEPAINIT((*sepainit)), SCIP_DECL_SEPAEXIT((*sepaexit)), SCIP_DECL_SEPAINITSOL((*sepainitsol)), SCIP_DECL_SEPAEXITSOL((*sepaexitsol)), SCIP_DECL_SEPAEXECLP((*sepaexeclp)), SCIP_DECL_SEPAEXECSOL((*sepaexecsol)), SCIP_SEPADATA *sepadata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SEPA *</type>
      <name>SCIPfindSepa</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac9acfc257cbd5b48348c3e124faf03b2</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SEPA **</type>
      <name>SCIPgetSepas</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae9f1410ae78b2a4cd1c730c47f76f9ff</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNSepas</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a09b59c2b8901d1cde32d3748ac7f2a77</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSepaPriority</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8d6ea123fb44c10e6e37a2626a1a73f1</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeProp</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7b951b6add7cdd7a9d8e312548dbfabe</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int freq, SCIP_Bool delay, SCIP_DECL_PROPCOPY((*propcopy)), SCIP_DECL_PROPFREE((*propfree)), SCIP_DECL_PROPINIT((*propinit)), SCIP_DECL_PROPEXIT((*propexit)), SCIP_DECL_PROPINITSOL((*propinitsol)), SCIP_DECL_PROPEXITSOL((*propexitsol)), SCIP_DECL_PROPEXEC((*propexec)), SCIP_DECL_PROPRESPROP((*propresprop)), SCIP_PROPDATA *propdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PROP *</type>
      <name>SCIPfindProp</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a87ae3339fc365baf0620aed731125342</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PROP **</type>
      <name>SCIPgetProps</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4b6b82051c6b3b5a20e1b996c1dc0803</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNProps</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7879100c363d7d31dc7cb4efd8d0cb99</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPropPriority</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3ba1a41bdeaf7304ba47a1b8a87d1613</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeur</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae3b878bb9c0c9337bf53df5aabcb696c</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, char dispchar, int priority, int freq, int freqofs, int maxdepth, unsigned int timingmask, SCIP_Bool usessubscip, SCIP_DECL_HEURCOPY((*heurcopy)), SCIP_DECL_HEURFREE((*heurfree)), SCIP_DECL_HEURINIT((*heurinit)), SCIP_DECL_HEUREXIT((*heurexit)), SCIP_DECL_HEURINITSOL((*heurinitsol)), SCIP_DECL_HEUREXITSOL((*heurexitsol)), SCIP_DECL_HEUREXEC((*heurexec)), SCIP_HEURDATA *heurdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HEUR *</type>
      <name>SCIPfindHeur</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6c65034d0af7042da92e552f71bd043a</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HEUR **</type>
      <name>SCIPgetHeurs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4f5073b16c2470e3fb5d6610084f0002</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNHeurs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7795002b03c7490648ee3e151d4d63da</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetHeurPriority</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a07dfe26f10f38217feef352d98b386c7</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeEventhdlr</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a36b7b33964c406f53edea2502caf1d35</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, SCIP_DECL_EVENTCOPY((*eventcopy)), SCIP_DECL_EVENTFREE((*eventfree)), SCIP_DECL_EVENTINIT((*eventinit)), SCIP_DECL_EVENTEXIT((*eventexit)), SCIP_DECL_EVENTINITSOL((*eventinitsol)), SCIP_DECL_EVENTEXITSOL((*eventexitsol)), SCIP_DECL_EVENTDELETE((*eventdelete)), SCIP_DECL_EVENTEXEC((*eventexec)), SCIP_EVENTHDLRDATA *eventhdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EVENTHDLR *</type>
      <name>SCIPfindEventhdlr</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a934b7ee85fb94e1086f41859282660d3</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EVENTHDLR **</type>
      <name>SCIPgetEventhdlrs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac6906fba3863bdd322ec6fbd7280b627</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNEventhdlrs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aca8d7609b2fc33de2d5542cccd2eeb19</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodesel</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad99b44a10a59bc0e7fafc003d7fc090d</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int stdpriority, int memsavepriority, SCIP_DECL_NODESELCOPY((*nodeselcopy)), SCIP_DECL_NODESELFREE((*nodeselfree)), SCIP_DECL_NODESELINIT((*nodeselinit)), SCIP_DECL_NODESELEXIT((*nodeselexit)), SCIP_DECL_NODESELINITSOL((*nodeselinitsol)), SCIP_DECL_NODESELEXITSOL((*nodeselexitsol)), SCIP_DECL_NODESELSELECT((*nodeselselect)), SCIP_DECL_NODESELCOMP((*nodeselcomp)), SCIP_NODESELDATA *nodeseldata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODESEL *</type>
      <name>SCIPfindNodesel</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7fb676dfa03a6f660888f1d29db2c354</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODESEL **</type>
      <name>SCIPgetNodesels</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab3670034787cfbddac86f7ead0a3b5c2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNNodesels</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab251ed96ee18630298d044a97e26a4c3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNodeselStdPriority</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a240493a26ac21386396d1ba4a5c9b3ee</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNodeselMemsavePriority</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad2d0f3ced90ade604cb51bb7deb4f3a8</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODESEL *</type>
      <name>SCIPgetNodesel</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5bb5e015af66b528895e7d671e18877f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchrule</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abc1584df8f91652ee0e2dfc58e87c285</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int maxdepth, SCIP_Real maxbounddist, SCIP_DECL_BRANCHCOPY((*branchcopy)), SCIP_DECL_BRANCHFREE((*branchfree)), SCIP_DECL_BRANCHINIT((*branchinit)), SCIP_DECL_BRANCHEXIT((*branchexit)), SCIP_DECL_BRANCHINITSOL((*branchinitsol)), SCIP_DECL_BRANCHEXITSOL((*branchexitsol)), SCIP_DECL_BRANCHEXECLP((*branchexeclp)), SCIP_DECL_BRANCHEXECEXT((*branchexecext)), SCIP_DECL_BRANCHEXECPS((*branchexecps)), SCIP_BRANCHRULEDATA *branchruledata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BRANCHRULE *</type>
      <name>SCIPfindBranchrule</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5e3e59aad82224804d26fb84925efcb3</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BRANCHRULE **</type>
      <name>SCIPgetBranchrules</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2c916aabbaccad48d5d51995ffc1564e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNBranchrules</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>adf8c5a3d21831c9dc0eb46559590267d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchrulePriority</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab715344f533d6066a8c79064acd60aee</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchruleMaxdepth</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae5dcaf1cd845d98239be6d455139c315</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, int maxdepth)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchruleMaxbounddist</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad69f37ff3ea128715b71464e2e572564</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, SCIP_Real maxbounddist)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeDisp</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa1c30dc6bab73c41e6718f49121932be</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, const char *header, SCIP_DISPSTATUS dispstatus, SCIP_DECL_DISPCOPY((*dispcopy)), SCIP_DECL_DISPFREE((*dispfree)), SCIP_DECL_DISPINIT((*dispinit)), SCIP_DECL_DISPEXIT((*dispexit)), SCIP_DECL_DISPINITSOL((*dispinitsol)), SCIP_DECL_DISPEXITSOL((*dispexitsol)), SCIP_DECL_DISPOUTPUT((*dispoutput)), SCIP_DISPDATA *dispdata, int width, int priority, int position, SCIP_Bool stripline)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DISP *</type>
      <name>SCIPfindDisp</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aafc23cb8c281b7118414b10b2963005e</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DISP **</type>
      <name>SCIPgetDisps</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3a74a293bb852b65634edfff5b9fb805</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNDisps</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a43f06cbf08f1f241940fd7727174ddcb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPautoselectDisps</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa50fd7e41e4d065f2fc35445e6260109</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNlpi</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae3494767e3556b98fe34585f68d23a24</anchor>
      <arglist>(SCIP *scip, SCIP_NLPI *nlpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLPI *</type>
      <name>SCIPfindNlpi</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9656beff1923e7132c185efee1fd34fc</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLPI **</type>
      <name>SCIPgetNlpis</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8be6e127a2ef2ca9c5dbf5fd1856248b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNNlpis</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af17164e56637001da868f8874fac987d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNlpiPriority</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5d0234cb28dcf3f1cbd2265cfdd134f2</anchor>
      <arglist>(SCIP *scip, SCIP_NLPI *nlpi, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeExternalCodeInformation</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a22a72b9ce4ef0e6cd080ef1a160af00f</anchor>
      <arglist>(SCIP *scip, const char *name, const char *description)</arglist>
    </member>
    <member kind="function">
      <type>char *const</type>
      <name>SCIPgetExternalCodeNames</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aabb159a2336830a1ae78bf408bb409cd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>char *const</type>
      <name>SCIPgetExternalCodeDescriptions</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa26fd33769e73528b4a1fd1731b3ed2b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNExternalCodes</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4e6693d630645d39d34d84c0b882cc9c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprintExternalCodes</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa7d584a114aa5e22c44266e9a6f2554a</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeDialog</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2569322285b7ad3455ea4164fb81b286</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG **dialog, SCIP_DECL_DIALOGCOPY((*dialogcopy)), SCIP_DECL_DIALOGEXEC((*dialogexec)), SCIP_DECL_DIALOGDESC((*dialogdesc)), SCIP_DECL_DIALOGFREE((*dialogfree)), const char *name, const char *desc, SCIP_Bool issubmenu, SCIP_DIALOGDATA *dialogdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexistsDialog</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a117acfa90723a698ff3af446a944c9b4</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcaptureDialog</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4e916caa40d6577f60aeb43a1ea0f363</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreleaseDialog</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0f3481d904ab9daaa5eba60086d99d90</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG **dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRootDialog</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7f76c206229ec13d077d8d9e9651cc4d</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DIALOG *</type>
      <name>SCIPgetRootDialog</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab285c99d3a00215a9d0e690c03c2b8a1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddDialogEntry</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3ca45fcec64280040a7d357a07dac3a0</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG *dialog, SCIP_DIALOG *subdialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddDialogInputLine</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>adce214fd73c717bb37fbb256ff6e635b</anchor>
      <arglist>(SCIP *scip, const char *inputline)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddDialogHistoryLine</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac46ae5836821975293123e671d5c8d6c</anchor>
      <arglist>(SCIP *scip, const char *inputline)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartInteraction</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa7109df053dd40a20afa6991fb7866ff</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateProb</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae3a6c0d98f4b395ae14374565a0a54df</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_DECL_PROBDELORIG((*probdelorig)), SCIP_DECL_PROBTRANS((*probtrans)), SCIP_DECL_PROBDELTRANS((*probdeltrans)), SCIP_DECL_PROBINITSOL((*probinitsol)), SCIP_DECL_PROBEXITSOL((*probexitsol)), SCIP_DECL_PROBCOPY((*probcopy)), SCIP_PROBDATA *probdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadProb</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af86148a97b0123d44562de425346a4c7</anchor>
      <arglist>(SCIP *scip, const char *filename, const char *extension)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteOrigProblem</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2f6d67a1ccef7a6363e6d6a56523c0d0</anchor>
      <arglist>(SCIP *scip, const char *filename, const char *extension, SCIP_Bool genericnames)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteTransProblem</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ada41a57fc5a464ad565763d24e588d3a</anchor>
      <arglist>(SCIP *scip, const char *filename, const char *extension, SCIP_Bool genericnames)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeProb</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9c7bee6cab2932a89e63bfb62053d72b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpermuteProb</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a15692dc3b258fc48103f8910d8cd6980</anchor>
      <arglist>(SCIP *scip, unsigned int randseed, SCIP_Bool permuteconss, SCIP_Bool permutebinvars, SCIP_Bool permuteintvars, SCIP_Bool permuteimplvars, SCIP_Bool permutecontvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PROBDATA *</type>
      <name>SCIPgetProbData</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa49ecadcab6a4085933352f7a7e0750e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetProbData</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae3e190835aa7114e9557f3c44d6c0fbe</anchor>
      <arglist>(SCIP *scip, SCIP_PROBDATA *probdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPgetProbName</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a88671b657291dfdf5c28b28090271b53</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetProbName</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3d2b26268637b29981a0bd73bd3f9d11</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_OBJSENSE</type>
      <name>SCIPgetObjsense</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad7e1b206b58e4cc72297225693f57720</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetObjsense</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>acaafd4da695b9da0944066c0a2e842f0</anchor>
      <arglist>(SCIP *scip, SCIP_OBJSENSE objsense)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddObjoffset</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a82e04ca49cec47883fea80effd1d0431</anchor>
      <arglist>(SCIP *scip, SCIP_Real addval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetOrigObjoffset</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a59c91333c2b235724c903f3950e185d6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetOrigObjscale</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2b49a4faeeac43dc32fa78de755b3937</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetTransObjoffset</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4883711f4d331a693d540a8bcd59438a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetTransObjscale</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aef2ecea696400cc683703572bb2f2e1d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetObjlimit</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3fd90b931b38d2d8f344114babc2a67e</anchor>
      <arglist>(SCIP *scip, SCIP_Real objlimit)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetObjlimit</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8260017eb459df02bbc7a906ebe3ed32</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetObjIntegral</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a25eb39191c5832ce2b39d3a2895cec7d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisObjIntegral</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af0bb84247a426afaee84ec8ec55bb3b0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetObjNorm</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa39982e4dd7ded03cc2c931c23b163c1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a1274092a607fc948803c8731f3dc26b4</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddPricedVar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2a4364fac6acb390e82d163d78dd939b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real score)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelVar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a47120c76351229a5bf5c86b3cdd2c94d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarsData</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a56aec2d4153071f0ede755f2f2892e25</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***vars, int *nvars, int *nbinvars, int *nintvars, int *nimplvars, int *ncontvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a990fb4f42228e44ec54d16855eac5070</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a86c71c9c58dac31be892721f1b9819b7</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNBinVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aeb541d48cb8b33adb07c721c15250b8d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNIntVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a1d71a70818b9eeb4e4b9fe0a554d33a8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNImplVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a272f3ceba4a29b4f222905cbfa7cddaf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNContVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a28da7a0e0f57edb5cac29d448b7a5e4f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetFixedVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a82001d53885377c57d0f775ec8c55fa6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNFixedVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>adf2d390d059230dcc067138a89c6aec8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetOrigVarsData</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a26493edb8b80908a3c46ed8d66e335e9</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***vars, int *nvars, int *nbinvars, int *nintvars, int *nimplvars, int *ncontvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetOrigVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abec020b8686cac2812d1028deece85f9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aac6e0dce5ed1e58242b015a469b7ce16</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigBinVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5627592739228c27bc44505e9926c79c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigIntVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6c4a087b20095944017d1fceb8823d37</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigImplVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a755ff7825cba845a96da5ffb016ca2f1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigContVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a61a8e5bd255dfb692bd7e0cd0ba569a2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetSolVarsData</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a182c44ef45bd12a2f4f8ae4b7ad53dd8</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_VAR ***vars, int *nvars, int *nbinvars, int *nintvars, int *nimplvars, int *ncontvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPfindVar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a20111cfbd93f5dc4c98108110ea856eb</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPallVarsInProb</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa67159c654dad0d66f0cf4a03c167e9c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a90f174ec35b95e762a2d9d09bf9b3d3a</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9aa8d02a007554a57d0277c9a2ddae8e</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS *</type>
      <name>SCIPfindCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3d31b66b9dc4523ba7d9942bbd99480c</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNUpgrConss</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8464874b5ad3272145264c21e37ccc17</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNConss</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9abdfcf450cb861852f342e4265644c1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS **</type>
      <name>SCIPgetConss</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a1a4423f74fedb75f4c3b830653146aac</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigConss</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a585df643d1a638a9669e374b2c1fe1a6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS **</type>
      <name>SCIPgetOrigConss</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>adcffd20ece2ba0d2f895acaa593e2513</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConsNode</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5fcf2b01b3850c5220113b2056b28152</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_CONS *cons, SCIP_NODE *validnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConsLocal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aeca8a3bd1ae7520ec26740fb100cfdea</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_NODE *validnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelConsNode</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2b6b0c525ffb2fd47da3dea12d8f64ab</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelConsLocal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4ece982fbd8fd41e86aea7df84be304f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLocalOrigEstimate</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3119f839770f71a66948db469a044175</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLocalTransEstimate</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af835eb011977a39e5bc8721c3bc83d3d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLocalDualbound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aebd11b66e4b6d9a14beee63f8bc69902</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLocalLowerbound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa07bfcab1e81fe74c27bea0ea3dcfe5d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetNodeDualbound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a135b276b666f7283ce8a47a72e8698e5</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetNodeLowerbound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af365112efafb8219d42ee2ab205be2e1</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateLocalDualbound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa911fe60542e7c0b508b34043a22e22d</anchor>
      <arglist>(SCIP *scip, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateLocalLowerbound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0a5dd08e62fcdcf3fc7e3386b39c6230</anchor>
      <arglist>(SCIP *scip, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateNodeDualbound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae991e5646cb4436977ecb2e7c2aecb81</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateNodeLowerbound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a03aa7633fb3c060f7cbcc7529e51d5fc</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgChildPrio</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ada44d4f2570b32e08905114615fb976b</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *child, SCIP_Real priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtransformProb</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a04a0271b46551b48cbcee3eff245ca94</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpresolve</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5c4fd2a3c79f2b14a746d5b3e4cccc8b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolve</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ada79e0a57f2f33cf847831b66f70afec</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeSolve</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abd364f669ccdd7eba0a76c05c4320cbd</anchor>
      <arglist>(SCIP *scip, SCIP_Bool restart)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeTransform</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9c2399c2334680cd8ad14a1a5ac31622</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinterruptSolve</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab207a6210ea634cca6fae72dde4d9a91</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrestartSolve</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a08e665c374c599f96c4968ce8cf108ba</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisInRestart</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac64bb7328f10a53cca876473fed57495</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateVar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aadcc57e6efe08c07a23643d0e7fb3151</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **var, const char *name, SCIP_Real lb, SCIP_Real ub, SCIP_Real obj, SCIP_VARTYPE vartype, SCIP_Bool initial, SCIP_Bool removable, SCIP_DECL_VARDELORIG((*vardelorig)), SCIP_DECL_VARTRANS((*vartrans)), SCIP_DECL_VARDELTRANS((*vardeltrans)), SCIP_DECL_VARCOPY((*varcopy)), SCIP_VARDATA *vardata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteVarName</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3bfa5d963bf67fe07256b7f69e569b5a</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteVarsList</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a03bd0e68aecfcf884adbd1468aacae7a</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_VAR **vars, int nvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteVarsLinearsum</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af9cb69f06f38c1d6d269a66fc6f2e10a</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_VAR **vars, SCIP_Real *vals, int nvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparseVar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a96a24250b3fea72291cbf47f27e74743</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **var, const char *str, SCIP_Bool initial, SCIP_Bool removable, SCIP_DECL_VARCOPY((*varcopy)), SCIP_DECL_VARDELORIG((*vardelorig)), SCIP_DECL_VARTRANS((*vartrans)), SCIP_DECL_VARDELTRANS((*vardeltrans)), SCIP_VARDATA *vardata, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparseVarName</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a1e5825d3af5683654c8cc6aa577a7f04</anchor>
      <arglist>(SCIP *scip, const char *str, SCIP_VAR **var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparseVarsList</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a485a3edf8a5bcfdabcd14028a1d811d9</anchor>
      <arglist>(SCIP *scip, const char *str, SCIP_VAR **vars, int *nvars, int varssize, int *requiredsize, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcaptureVar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae5c349629db606a8f1f466a5fd8b002f</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreleaseVar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a738c6f77f0dcbe17cf8faa97c7573585</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtransformVar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aae5d1f2ae5de0dc9d0b7600e488ca5cd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR **transvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtransformVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a68533d7aeaf9c6baadcbd3c12a4e9cfd</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, SCIP_VAR **transvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetTransformedVar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae01de0744cef850ee4971ca3f53aa062</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR **transvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetTransformedVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a29c5500e7db8b5b0dec01232a2198038</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, SCIP_VAR **transvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNegatedVar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a94ec8a6bca8e6e621751b4257bf0d4c1</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR **negvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetBinvarRepresentative</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac9e77c3155c3beb051205d666c1e57cd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR **repvar, SCIP_Bool *negated)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPflattenVarAggregationGraph</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a924498dfffc795b176d114d757797d1a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetProbvarLinearSum</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0509a5028381b92e3e40cde775db7ac9</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **vars, SCIP_Real *scalars, int *nvars, int varssize, SCIP_Real *constant, int *requiredsize, SCIP_Bool mergemultiples)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarRedcost</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aaf433501c90408634e7311e96649f5b4</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarFarkasCoef</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5efe1f2786c99fae016a6bad651dae80</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a94bba755d3a2b9204fe8e784d1e843ad</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarSols</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac682731957512141f35d0caa5e89b7ef</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxSolVal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aeafc74bc25930a606e451faabe6a63bd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearRelaxSolVals</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a766a73f354ab0072d886d206d2adeba6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxSolVals</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a624500e108054c71b6aaebd2caad1f0a</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxSolValsSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af1fa8f6afa3d316a32542061c0263e6e</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelaxSolValid</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8bcd6356c607920d6ca508d359923e00</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmarkRelaxSolValid</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a89e124b459807c4f5ac974886a7fb7a1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmarkRelaxSolInvalid</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab2f6c3ae2f4d40de14bcb552ef869043</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRelaxSolVal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a84b391b9cb0e80c34ddee0ed120df03c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRelaxSolObj</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a022bd27b74f4ddc92a3d540df81d57c6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartStrongbranch</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a695a5dce1b5342ed6a32eb92b7340d63</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPendStrongbranch</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2882f2fb7c2c240a7163b5bfc23677e5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarStrongbranchFrac</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af3aba48ec612d657392b69fedcb426d3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, SCIP_Bool *downinf, SCIP_Bool *upinf, SCIP_Bool *downconflict, SCIP_Bool *upconflict, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarStrongbranchInt</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6489cf6b682d2ce1205aec6f213dca4c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, SCIP_Bool *downinf, SCIP_Bool *upinf, SCIP_Bool *downconflict, SCIP_Bool *upconflict, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarsStrongbranchesFrac</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7c2f59c88cdffcd3b1dbe416b6b9e552</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **vars, int nvars, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, SCIP_Bool *downinf, SCIP_Bool *upinf, SCIP_Bool *downconflict, SCIP_Bool *upconflict, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarsStrongbranchesInt</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab5212411fe3f9ac9307f7fc78a30fa54</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **vars, int nvars, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, SCIP_Bool *downinf, SCIP_Bool *upinf, SCIP_Bool *downconflict, SCIP_Bool *upconflict, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarStrongbranchLast</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad4a941c5912e57c70b39ba4939e07a4d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, SCIP_Real *solval, SCIP_Real *lpobjval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetVarStrongbranchNode</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a66be6ab86b510c7a0a9d61f94c58fa7b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetVarStrongbranchLPAge</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a646b7a6277666ce6bf35da35bcbf4e04</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetVarNStrongbranchs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad27bb7229c0670f9f4ad64bf95508d4a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarLocks</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0a00fbe33ee7405aedb341f606d35417</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int nlocksdown, int nlocksup)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlockVarCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a11a8c70148f7c0b29daaee46d99581dc</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_CONS *cons, SCIP_Bool lockdown, SCIP_Bool lockup)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPunlockVarCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5d2b963f461728ba6d9931dceeaa0673</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_CONS *cons, SCIP_Bool lockdown, SCIP_Bool lockup)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarObj</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac8033a7019d8bd6f9e6889cd2edc4463</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newobj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarObj</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>afc4b73416ee1c9aa2d891ae24e556eac</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real addobj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPadjustedVarLb</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a868dca51fa585a23aa4dfe4cf949d6af</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real lb)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPadjustedVarUb</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a74df87f5fe89f8a2ffbc308f2208c192</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLb</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a28fcf0e964533760e3822fed102d57bd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUb</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a467948c18929421bcc14c1c009f58c56</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLbNode</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abf19e0473a2fe31118fad33b48ba45ea</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUbNode</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a47046aeb6c243f2e1399c9bccd51c174</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLbGlobal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7a1f905c4d0358ff60f6e97e8d3bd73c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUbGlobal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa159d42658a5672b655e88e08b48fbcb</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLbLazy</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a64ba33cedd7cd556a5ada18f752a2c6d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real lazylb)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUbLazy</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac0d20a8f3ae90d45d7ca0eadb7006d4a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real lazyub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtightenVarLb</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a060edd63613b646299b7a7f36f751e3d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtightenVarUb</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4dc171f23cee0def640b29627250850d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferVarLbCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab3dde7eba569deda9dddfe11720f9094</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_CONS *infercons, int inferinfo, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferVarUbCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a413e36fae9f597c1b0a8bc25f32eb4e2</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_CONS *infercons, int inferinfo, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferBinvarCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac2f992010162d09cfd2cd446fe069730</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Bool fixedval, SCIP_CONS *infercons, int inferinfo, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferVarLbProp</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>afa85d91b170a432767e0b864842497ec</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_PROP *inferprop, int inferinfo, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferVarUbProp</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a203ddedb24fe38ea3a44c599a5c8c58a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_PROP *inferprop, int inferinfo, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferBinvarProp</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aedb1fa111c6a4c3864943153f217edfd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Bool fixedval, SCIP_PROP *inferprop, int inferinfo, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtightenVarLbGlobal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af8582c5dac4810817cd41977f4f66562</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtightenVarUbGlobal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a220d36f83ba06abc45f3aae95c7e9a64</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarClosestVlb</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8c7c56f0cc70d7527c5789017a1a9fcc</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_SOL *sol, SCIP_Real *closestvlb, int *closestvlbidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarClosestVub</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a601084882554619feafcab28ac40bacd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_SOL *sol, SCIP_Real *closestvub, int *closestvubidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarVlb</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a59fa8edc99f1bc99015da01c67a87d88</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR *vlbvar, SCIP_Real vlbcoef, SCIP_Real vlbconstant, SCIP_Bool *infeasible, int *nbdchgs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarVub</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a52dd692311ad45a46181771f55c216e0</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR *vubvar, SCIP_Real vubcoef, SCIP_Real vubconstant, SCIP_Bool *infeasible, int *nbdchgs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarImplication</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a991b0a366cb4931960f8bfe038d5c3eb</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Bool varfixing, SCIP_VAR *implvar, SCIP_BOUNDTYPE impltype, SCIP_Real implbound, SCIP_Bool *infeasible, int *nbdchgs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddClique</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a861d802f88cbd8bac8238a93302e782b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **vars, SCIP_Bool *values, int nvars, SCIP_Bool *infeasible, int *nbdchgs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcalcCliquePartition</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a20a4c05f87a3b9659406cd03b39510a2</anchor>
      <arglist>(SCIP *const scip, SCIP_VAR **const vars, int const nvars, int *const cliquepartition, int *const ncliques)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcalcNegatedCliquePartition</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2f2e7ca11149486161d9800e8e6931b8</anchor>
      <arglist>(SCIP *const scip, SCIP_VAR **const vars, int const nvars, int *const cliquepartition, int *const ncliques)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNCliques</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa85f51072ffcfd6f00dfbaa990d6eefa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CLIQUE **</type>
      <name>SCIPgetCliques</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a807a0465b410d8b327f5caab084af6fa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarBranchFactor</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af616016202a9ea9eb28f6d3d8da555ef</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real branchfactor)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPscaleVarBranchFactor</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a26c7b3dd464874b33c4b073d1ed137a5</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real scale)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarBranchFactor</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a70639c80f0a6fcee486265a6e83f99b3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real addfactor)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarBranchPriority</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5a932c46db33e505a802313a4b1d973f</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int branchpriority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateVarBranchPriority</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a36c61578436878725fef2908edc9bfa4</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int branchpriority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarBranchPriority</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aae296c43c772d38e1abee9685cfea125</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int addpriority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarBranchDirection</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a52c61ed29f62e26268ff43d4918618c3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR branchdirection)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarType</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a58cf52fded98dc4402de49218bf7f8f6</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VARTYPE vartype)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfixVar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab29ea185d867f9878e688fec44f2536f</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real fixedval, SCIP_Bool *infeasible, SCIP_Bool *fixed)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaggregateVars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a411f21f9c5bba17aecdb029a870c48ff</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *varx, SCIP_VAR *vary, SCIP_Real scalarx, SCIP_Real scalary, SCIP_Real rhs, SCIP_Bool *infeasible, SCIP_Bool *redundant, SCIP_Bool *aggregated)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmultiaggregateVar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6c9e8818ee3ce60386b056b4de7a9455</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int naggvars, SCIP_VAR **aggvars, SCIP_Real *scalars, SCIP_Real constant, SCIP_Bool *infeasible, SCIP_Bool *aggregated)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPdoNotMultaggrVar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3d26e5140edce87471df4583787d25aa</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmarkDoNotMultaggrVar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab1a43ef481f9ab4379e543f413142f37</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateVarPseudocost</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa7b9a8d8fed4a503aad1d81ac0525c43</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real solvaldelta, SCIP_Real objdelta, SCIP_Real weight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostVal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7f6345436bbbcb545ef3312a1649ab3e</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real solvaldelta)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostValCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa6fe5d09216dbdd0a6c6e9ddcabf208e</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real solvaldelta)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocost</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3e62f81f45a4652311ae0f43268ee3ed</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2f8c4d99d9fa26627b54f0d26c9e2dad</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostCount</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2a753fe2a2c4529b6e1f226c358652b1</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostCountCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a253ca440bedc3e8436c52d4737d6df95</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostScore</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae64ee113c092b13220b33701256e881b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real solval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostScoreCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a96d739af71b09479a72084e07d0038f1</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real solval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarVSIDS</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad54f9e61ad6762d2607555491c21a6af</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarVSIDSCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad6613826f27b955c3163ab6fd90a8995</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarConflictScore</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abe818b6232abbe608946efe099a55a76</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarConflictScoreCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae0932bbd8dea9fd1ec946e0702190e7e</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarConflictlengthScore</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a82d18083d6700612251b005969ef88c4</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarConflictlengthScoreCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad5d7e3885b7ff149b63f867332e3b5b0</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgConflictlength</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a38ab0f38326dbf42abfd0caca163fd7c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgConflictlengthCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af37df16399615f364f1ae99f5323ff86</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferences</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aeaffa3202880cdcc2b95b90ee94c9f1a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferencesCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a481c258e252b20e140c16a95aa853f2d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferenceScore</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a25d21f0d3646eefb0705012b82d6e471</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferenceScoreCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a22abc8f5ea3edd8b800950ffecfcc345</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinitVarBranchStats</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a02de0c7ee67396b4ca40e1952b810a02</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real downpscost, SCIP_Real uppscost, SCIP_Real downvsids, SCIP_Real upvsids, SCIP_Real downconflen, SCIP_Real upconflen, SCIP_Real downinfer, SCIP_Real upinfer, SCIP_Real downcutoff, SCIP_Real upcutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgCutoffs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8718b800b6189cd2a8d16b0fe0666e25</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgCutoffsCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a60f05c953a62737df3bd81d5ba8f348b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgCutoffScore</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abea19804750bde393ea63191371057c5</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgCutoffScoreCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3f917fc055dfaa23f1206a1d7ae70bf6</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferenceCutoffScore</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aca6c1af251f11ed89882a95b6449fe01</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real cutoffweight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferenceCutoffScoreCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab38da7dfd620375996e9626b9aef3d33</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real cutoffweight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintVar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abe853cebc32b6448e3acdeba0db2c2ba</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinitConflictAnalysis</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5bd55a3aecfe869a6aa6b0cbf94c7c30</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConflictLb</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a00bb542034657c5e850779556d033de3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConflictUb</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2136d87b957b9ca7bf845c3f1a92bd54</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConflictBd</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a758d29b6760cf072694ef6868db6d954</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BOUNDTYPE boundtype, SCIP_BDCHGIDX *bdchgidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConflictBinvar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>acd62edc8da6ffb9dc9ba7ae721a798cf</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPanalyzeConflict</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5d2a29ad1600fff8965339fc77e4c5c1</anchor>
      <arglist>(SCIP *scip, int validdepth, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPanalyzeConflictCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad1edb437a787afb03807e8c205f5f702</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8d771b778ea2599827e84d01c0aceaf2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_CONSHDLR *conshdlr, SCIP_CONSDATA *consdata, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparseCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae08b5c83d5d7f09cfe05eaafcbae4498</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *str, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcaptureCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af2c901adf9df145228b0201c1f3014aa</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreleaseCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae7055a40bc1c895c4acb118bcb8de4de</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsInitial</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a767d273ef318836ef77decd4b02b5321</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool initial)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsSeparated</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a51499b9a87befa968ffb99aaa0546f8b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool separate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsEnforced</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a777b82d3a8bf0448381ecdaece613e15</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool enforce)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsChecked</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aef0cc53f1f5e27c65ff99fa0801ec16a</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool check)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsPropagated</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae814f28bdb0d9ee9b09f805fb726c3f8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool propagate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsLocal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abce093a878ce0d23e623fe192612c36e</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool local)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsDynamic</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6f930e0991172fed4c158741aebcc24c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool dynamic)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsRemovable</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab8cbcd48267c18fa3be668fa4d2f012f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsStickingAtNode</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3b45642b5e2c03640b45bacaf12690ae</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtransformCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae8ff27f22c89e978e52abcb22575c1a9</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_CONS **transcons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtransformConss</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4ad44c3ffedd1b91095521e27bea47e1</anchor>
      <arglist>(SCIP *scip, int nconss, SCIP_CONS **conss, SCIP_CONS **transconss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetTransformedCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac783997fa88d9b38b4bb7cfc0c101e95</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_CONS **transcons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetTransformedConss</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a11bfa7463e407dab949f3ac77e2e051b</anchor>
      <arglist>(SCIP *scip, int nconss, SCIP_CONS **conss, SCIP_CONS **transconss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConsAge</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>adfa594f26adbfb32c7a84bc6ce54febf</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Real deltaage)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincConsAge</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af39d9421a898c74956b052a66894b221</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPresetConsAge</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab10a47ebc2d63f6e70871d916e9b6548</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPenableCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a297c0150613e1d2744bd1ed0d7c4beb6</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdisableCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9b5344874bd5b0a1b710c1890a4d59a1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPenableConsSeparation</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8d28170a37433a9a038f0c8ecd09ef33</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdisableConsSeparation</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0957013bf161486c4d40716967f51100</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPenableConsPropagation</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4b10aa132be56937a450629b47741ff1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdisableConsPropagation</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ade149b54b701d267408f99bb60b639e1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConsLocks</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac2a3a1a932df4bc25580dd44095ab4ae</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, int nlockspos, int nlocksneg)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a121549cffb357a8f9677fb10ffca5a4c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol, SCIP_Bool checkintegrality, SCIP_Bool checklprows, SCIP_Bool printreason, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintCons</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4709d1eb7cde28185dfc231028dfced9</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhasCurrentNodeLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a02a3a55b60591b9d6eeda076b1897ddb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLPConstructed</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a32d9de0e4eca8657e393fb0b3f7f28ac</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPconstructLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a19a1cee7756e1634ee2bed27b27db61f</anchor>
      <arglist>(SCIP *scip, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPflushLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a026f97fc433a5be0ceecce03e875eea3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_LPSOLSTAT</type>
      <name>SCIPgetLPSolstat</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a945a2147af32e9893f5a434516e12b0f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLPRelax</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a24d0f7c9072bd1d0403896d73f8c0ca5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPObjval</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab1a9445b8d8ec0be5e1880411803f3a0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPColumnObjval</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7135587f761b225c04c2c9e8f3ec38bc</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPLooseObjval</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0f564d46fb90cd64483dbd68b7e65057</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetPseudoObjval</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5459bf89fdb0084e2053944806327ed2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRootLPRelax</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aff99bfac5e4bdf41b5d9d8eb39b4db73</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPRootObjval</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa08b252170415305b44f67f70985b57d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPRootColumnObjval</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab1a20752259c87ff47127c369d747e5f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPRootLooseObjval</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad799c809647ce631d888f852f1fdf437</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPColsData</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a467ad5849b0d39db009c3badad756d69</anchor>
      <arglist>(SCIP *scip, SCIP_COL ***cols, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_COL **</type>
      <name>SCIPgetLPCols</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a17aa956266d8f1eb61d0d339a4fd4568</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLPCols</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac09084135572e531028e3e942ee52bde</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPRowsData</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a488366019cc364f8cb723f7a3e6f3c7b</anchor>
      <arglist>(SCIP *scip, SCIP_ROW ***rows, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW **</type>
      <name>SCIPgetLPRows</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa76344fd1742a554ece3442accf18295</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLPRows</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7582fa81662a80545d21d32dc62286dc</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPallColsInLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aab701549b059bf7cdd8be07959c11fa7</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLPSolBasic</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ace392f53d4615f0d4baaf49fc46d1c05</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBasisInd</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a34284f0925e5b7b90e256a8cb7faaf20</anchor>
      <arglist>(SCIP *scip, int *basisind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBInvRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a43173ae0f870d3970f9d3829f3e699f4</anchor>
      <arglist>(SCIP *scip, int r, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBInvCol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af867bda680fb097018e831d0b2b3eaef</anchor>
      <arglist>(SCIP *scip, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBInvARow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0e7d7e87304db8c49fb5ea9317b6c433</anchor>
      <arglist>(SCIP *scip, int r, SCIP_Real *binvrow, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBInvACol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac973e7b26de136d59ccfff53da3ddb40</anchor>
      <arglist>(SCIP *scip, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsumLPRows</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a84cd8c42e3ae3f497e0328f226faca3b</anchor>
      <arglist>(SCIP *scip, SCIP_Real *weights, SCIP_REALARRAY *sumcoef, SCIP_Real *sumlhs, SCIP_Real *sumrhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcalcMIR</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a41e215477edaa89ca72c4ccfdbd5908a</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Real boundswitch, SCIP_Bool usevbds, SCIP_Bool allowlocal, SCIP_Bool fixintegralrhs, int *boundsfortrans, SCIP_BOUNDTYPE *boundtypesfortrans, int maxmksetcoefs, SCIP_Real maxweightrange, SCIP_Real minfrac, SCIP_Real maxfrac, SCIP_Real *weights, SCIP_Real scale, SCIP_Real *mksetcoefs, SCIP_Bool *mksetcoefsvalid, SCIP_Real *mircoef, SCIP_Real *mirrhs, SCIP_Real *cutactivity, SCIP_Bool *success, SCIP_Bool *cutislocal)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcalcStrongCG</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a95392323ca7198506debcea5073b0728</anchor>
      <arglist>(SCIP *scip, SCIP_Real boundswitch, SCIP_Bool usevbds, SCIP_Bool allowlocal, int maxmksetcoefs, SCIP_Real maxweightrange, SCIP_Real minfrac, SCIP_Real maxfrac, SCIP_Real *weights, SCIP_Real scale, SCIP_Real *mircoef, SCIP_Real *mirrhs, SCIP_Real *cutactivity, SCIP_Bool *success, SCIP_Bool *cutislocal)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4312fff0495bec0484a8fd9cd60cae8b</anchor>
      <arglist>(SCIP *scip, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6b306059929a7554f7984efa221e3034</anchor>
      <arglist>(SCIP *scip, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteMIP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2f0e0443716888f7997515058bb9fc60</anchor>
      <arglist>(SCIP *scip, const char *fname, SCIP_Bool genericnames, SCIP_Bool origobj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPI</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a84f176a95066f42c46a4a9f0538cc756</anchor>
      <arglist>(SCIP *scip, SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetColRedcost</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a15b7c94bbf02123c6f6ab57d52cf63a7</anchor>
      <arglist>(SCIP *scip, SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetColFarkasCoef</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac418cae8f6b4d2e6bba6bc0335477ecb</anchor>
      <arglist>(SCIP *scip, SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0f3f5d2982142da67c59fb8de0ccbd9c</anchor>
      <arglist>(SCIP *scip, SCIP_ROW **row, const char *name, int len, SCIP_COL **cols, SCIP_Real *vals, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateEmptyRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad250ffa5f36870fc0eb2c10e1e2eaa67</anchor>
      <arglist>(SCIP *scip, SCIP_ROW **row, const char *name, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcaptureRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab345eca97c49f56815689281d381d2e6</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreleaseRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab48075e03669d070432ec340313b6c14</anchor>
      <arglist>(SCIP *scip, SCIP_ROW **row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgRowLhs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a21c81ede04e2dba3780ffe487d9a3e4a</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_Real lhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgRowRhs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>acb6669f0f75661fbc069e625ec624042</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcacheRowExtensions</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a1d39aa6fb12d8346eb92a7077ab95ca8</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPflushRowExtensions</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a864bcec8e332c76091ba3a253511e848</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarToRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9f2afff8303839bd7f8ac530e1231b16</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarsToRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae2ed7224e5436ad91be4626fdf301c8f</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarsToRowSameCoef</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a609cc51c16d6b454da46522b613f919a</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, int nvars, SCIP_VAR **vars, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcalcRowIntegralScalar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af541a92b85d7c66b30653a312eb12874</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_Real mindelta, SCIP_Real maxdelta, SCIP_Longint maxdnom, SCIP_Real maxscale, SCIP_Bool usecontvars, SCIP_Real *intscalar, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmakeRowIntegral</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a99fc1f122370a2345bde9c6c501723d8</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_Real mindelta, SCIP_Real maxdelta, SCIP_Longint maxdnom, SCIP_Real maxscale, SCIP_Bool usecontvars, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowMinCoef</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0ab71dc044765bfe98443629da0d98cf</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowMaxCoef</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a02b4458c98fc07be4d9c4919af5cf178</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowMinActivity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a37352529ce67547337fca182c3d88df9</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowMaxActivity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7557f2d4f6c4bc80f25443754623af77</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcRowLPActivity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abb48dd3a265d49568d947446782dce4f</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowLPActivity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a57712688056c7770913db67d4aac048b</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowLPFeasibility</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aca759620ea1974b142f09a7b88d854d4</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcRowPseudoActivity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7ef297232e9ca78238c345bbf41ddb89</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowPseudoActivity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a90a4988f89d869dfa22fe48d339ce741</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowPseudoFeasibility</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab4819e4b6783d5eda8114adb477fad32</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcRowActivity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a87db79897c4a893f6b9f96344129eaa4</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowActivity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aaf9dc7e33e9f31516dadd3223b806923</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowFeasibility</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3e46033937fea1b2f2cbdc99a5381b9d</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowSolActivity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af6ae6ae93a9e1ee50b84882dadfa1327</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowSolFeasibility</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab3ad8a0489ccd2023f711bacd2921f78</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa0c3e91d42a44b101de0fc9cd8c35894</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmarkContinuousNonlinearitiesPresent</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a1c303a86b8cab9eb1d02ece45d51c9c1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmarkNonlinearitiesPresent</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0951e76feb0d9a9d27b21f9757b672fb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmarkRequireNLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7051a110c3cbbb581f135f03cbda5e05</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhasContinuousNonlinearitiesPresent</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9550fc7a87980e11e6d8be27ae61b5f0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhasNonlinearitiesPresent</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abf860074efee08ab369bb53baaaaf40e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisNLPRequired</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a25ad6594fcbf74e5346e7ad85e17ee69</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisNLPConstructed</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a562cf9826f085b4e02787614b4b38668</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLP *</type>
      <name>SCIPgetNLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4c3f077dd362c6a62ea6e47d4eae4d19</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPflushNLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4226a39fb23d4ec15b491932b7cc06b7</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNLPVarsData</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad5540efd0674ee3a72e811cd7860be9c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***vars, int *nvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNLPNlRowsData</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa0f0be508a594224bf3ee5611a10d894</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW ***nlrows, int *nnlrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddNlRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3e4c5bde3054ec3a272316eaa483da2a</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNLPInitialGuess</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6b5cc3df5f3ecc23242e7f76f0d39855</anchor>
      <arglist>(SCIP *scip, SCIP_Real *initialguess)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNLPInitialGuessSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9710017805f464a0fbbb1619538d2721</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveNLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6c7f6d48572cf6445baee477076526a6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLPSOLSTAT</type>
      <name>SCIPgetNLPSolstat</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a61b3739965b6389428b8c2b03609ba39</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateNLPSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5761efbf8552b7977c4e2908c14573a7</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetNLPObjval</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6c69fcf176c6fd1ab0f699b4c8dd977a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteNLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9a1f13a05b69c63c5c965a0f697a7164</anchor>
      <arglist>(SCIP *scip, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNLPI</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3db96babf8cfdbedbe2999f8d32e7c71</anchor>
      <arglist>(SCIP *scip, SCIP_NLPI **nlpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateNlRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a331d2b0853f4485e68e8b9a80e85f7de</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW **nlrow, const char *name, SCIP_Real constant, int nlinvars, SCIP_VAR **linvars, SCIP_Real *lincoefs, int nquadvars, SCIP_VAR **quadvars, int nquadelems, SCIP_QUADELEM *quadelems, SCIP_EXPRTREE *expression, SCIP_Real lhs, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateEmptyNlRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a309c9770b77ef8cebd82ba19fae4050a</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW **nlrow, const char *name, SCIP_Real lhs, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateNlRowFromRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae478ad08ce59537b9182159ea487cebf</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW **nlrow, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcaptureNlRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2af6ee81f098ff5b4a4b1c1f7da44888</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreleaseNlRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9194db31eec1c7d7c29d1be47862b3a5</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW **nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgNlRowLhs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa60e949fca9500159904868ee05bf4bf</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real lhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgNlRowRhs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6b1d5435734f68b24ee33dae52ba31f2</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgNlRowConstant</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa0154b2373e111b26b7c2bbd9f9556cc</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLinearCoefToNlRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a236d7e9bc0361107e87205947f68dd32</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLinearCoefsToNlRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af38a1b4955c0238ac22e065be38cd79d</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgNlRowLinearCoef</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a408f2386bf2185502773ee14a3e0df42</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_VAR *var, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddQuadVarToNlRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a99b53fe0cf36b8109c0fe91958435532</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddQuadVarsToNlRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8c2ed060cca110198b8e03049a21b979</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, int nvars, SCIP_VAR **vars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddQuadElementToNlRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aeb38782dc8c697517b3d4a344e0eeda6</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_QUADELEM quadelem)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddQuadElementsToNlRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad35631afec785ff81dcfa6086c4024dd</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, int nquadelems, SCIP_QUADELEM *quadelems)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgNlRowQuadElement</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af322854725f24efa99334d8988216ec4</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_QUADELEM quadelement)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNlRowExprtree</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aab02b26a61423f714a60ab512fec7f5a</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_EXPRTREE *exprtree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNlRowExprtreeParam</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a294fc36703aa901ebaf492a70d1e7502</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, int paramidx, SCIP_Real paramval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNlRowExprtreeParams</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2f6f68a4e301bf556cc2a54c2b494b59</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *paramvals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcNlRowNLPActivity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2d06e1bbfa342da888e85efd5aef0039</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowNLPActivity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab61afbb67d3ffa420f46c68cb39d7858</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *activity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowNLPFeasibility</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a479e9fa869745defc53487ad279ab873</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *feasibility)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcNlRowPseudoActivity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af90ba8ce15ef0a986e39df879be360c9</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowPseudoActivity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4ae45a1e66edbc0cab2b41f8e3a2a17d</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *pseudoactivity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowPseudoFeasibility</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abd37a29c66e60e3b130a38d85593414f</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *pseudofeasibility)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcNlRowActivity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa44aa02d5eeaa3d3f99621780836f2bb</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowActivity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a46d670b092ef96f754c8643de7602bf5</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *activity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowFeasibility</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a99e235c5844982832703f0c8f5eb65b0</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *feasibility)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowSolActivity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>adbb1cea254cc953927bd748c90c3f1c0</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_SOL *sol, SCIP_Real *activity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowSolFeasibility</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3ea4c1137d26a66bc9b613089e8c0f7d</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_SOL *sol, SCIP_Real *feasibility)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowActivityBounds</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a1035347fe11413aeebea5d33aeb3e6a2</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *minactivity, SCIP_Real *maxactivity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintNlRow</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad6e8dd0bf1c06a3dfa7b4452d4555c97</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetCutEfficacy</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a1ad915425fe64b2720c131d55dfbeef6</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_ROW *cut)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisCutEfficacious</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6fd0ac77dd084954dcf9cd9f360854ed</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_ROW *cut)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisEfficacious</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a816a17fea3a4bf6c06ff4ba3ed329f29</anchor>
      <arglist>(SCIP *scip, SCIP_Real efficacy)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVectorEfficacyNorm</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>accab5fc5fe2e981e65c0579a489ab3aa</anchor>
      <arglist>(SCIP *scip, SCIP_Real *vals, int nvals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCut</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a04afcc23c6c21a921cd5e9e2f86d77ea</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_ROW *cut, SCIP_Bool forcecut)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddPoolCut</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a14b5af5c0722ae6284b2a2d2eb0b3d5b</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelPoolCut</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae1c513033b7202a8acb2e6edfc56308b</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CUT **</type>
      <name>SCIPgetPoolCuts</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6a27a2619f62e4a7d3f446b2a438b3b4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPoolCuts</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa56411a63a1a23fb1fc229d87d7084b5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CUTPOOL *</type>
      <name>SCIPgetGlobalCutpool</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aba942d7f191c2bb818c6be4e9cd3d013</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateCutpool</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abdeafe1f2f0e38de38c5933d544e00fa</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL **cutpool, int agelimit)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeCutpool</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae1f61832da62775b9b43f09f14654f11</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL **cutpool)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddRowCutpool</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a61713c68c848ed6f8549acaede0b86a3</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL *cutpool, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddNewRowCutpool</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae228bdca2589466a7941bd78b203a6c4</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL *cutpool, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelRowCutpool</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a41a61c4b60e6266a9a31210f49d201c1</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL *cutpool, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPseparateCutpool</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4ca195a9817a9a121eac1335e1555178</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL *cutpool, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPseparateSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>accde7b091593debbf8ee401cdc42e7a9</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool pretendroot, SCIP_Bool onlydelayed, SCIP_Bool *delayed, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW **</type>
      <name>SCIPgetCuts</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a957ce862ee379dcf71c6fbb647807c1f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNCuts</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>adc98be8927b43b367b240db63c62f63e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearCuts</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abde3f19da11334be15a64c7fbe9bae69</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartDive</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a61e0d3177ad999bf713b05bfa53c65ae</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPendDive</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aca241eeebf5de4468c5326c6fed83408</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarObjDive</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9b8a6dbfee0cb4c2dd532cd56206c3f4</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newobj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLbDive</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a074bbbcaad8d4b1f4c04d07134f73a1b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUbDive</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a15db9438be54d34bc8e790d876de17ea</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarObjDive</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a49d469652cef4f79245a790d41e16721</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarLbDive</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3d3566c787ebedbd6e947e84c4ebbbe3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarUbDive</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a46d00e8906fa7831426af4e4d5a6b164</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveDiveLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4ee99b4a1a8861615fd7abdc827ea9ef</anchor>
      <arglist>(SCIP *scip, int itlim, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetLastDivenode</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>adeb4b598c00ac6e0316ba48fb4479ee4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPinProbing</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6f5e2d470a20df93c8b2905404218ce6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartProbing</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a71a4ba1e820f5e875b940a801bcc1e8e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPnewProbingNode</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a951ef10b2149e7486a00226c8a9b1be6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetProbingDepth</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a047975ac149dd68a48689941535dc7be</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbacktrackProbing</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a62f00b4ed2fcfd059c0e053f366b0af2</anchor>
      <arglist>(SCIP *scip, int probingdepth)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPendProbing</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aeeb10b28f05c36a512da9f2ae4cdb9e5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLbProbing</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4c9f785ad44bc720cebcc693e8fc917e</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUbProbing</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a31569f9abf01c44c924dd74b8bfc29cf</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfixVarProbing</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae0bd0314ebf25502c36a896f9a9b9773</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real fixedval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpropagateProbing</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4d2897d28c9f217f1cbc0c1578e9ff4f</anchor>
      <arglist>(SCIP *scip, int maxproprounds, SCIP_Bool *cutoff, SCIP_Longint *ndomredsfound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpropagateProbingImplications</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ada03244e7f13a6b40bf617d5e62d7050</anchor>
      <arglist>(SCIP *scip, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveProbingLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a975f966f47fcdf85d1a86e613e2e1888</anchor>
      <arglist>(SCIP *scip, int itlim, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveProbingLPWithPricing</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6b46193f6cab1d45c7934955fd21fd88</anchor>
      <arglist>(SCIP *scip, SCIP_Bool pretendroot, SCIP_Bool displayinfo, int maxpricerounds, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBranchCands</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a04924d1578c8b893f8420001445210fd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***lpcands, SCIP_Real **lpcandssol, SCIP_Real **lpcandsfrac, int *nlpcands, int *npriolpcands)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLPBranchCands</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac948f7043edfb733dca98965ef2ce192</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioLPBranchCands</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aca0d050de167f447d0980d356f564d54</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetExternBranchCands</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a1c3662e210e4a159e5a08cf1c3e1928a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***externcands, SCIP_Real **externcandssol, SCIP_Real **externcandsscore, int *nexterncands, int *nprioexterncands, int *nprioexternbins, int *nprioexternints, int *nprioexternimpls)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNExternBranchCands</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abbe8ab137a366b1ff0bd7f2ece467421</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioExternBranchCands</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abf7eb9b3f81fca081086b26fc4595aee</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioExternBranchBins</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab26869db67b61cae8cb74f90c2c5a9e3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioExternBranchInts</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9a636a11f9355d276522ac0e22f97c6d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioExternBranchImpls</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac565048c1a09a7f2cd5a5a61b1d3b074</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioExternBranchConts</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a17645a48bfbe63e50fa909080a6f6ecb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddExternBranchCand</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a32935485576c3f1aa4e0784a17ef3b9e</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real score, SCIP_Real solval)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPclearExternBranchCands</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a94cc7772f105dfd089ddcaf3c4b3222b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPcontainsExternBranchCand</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af1d0917028c016dd17fc61a5ba02011b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetPseudoBranchCands</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>acb6423287e73b4c01172b888b615d5d6</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***pseudocands, int *npseudocands, int *npriopseudocands)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPseudoBranchCands</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>affcbbff89a112152b9c53c5b6082b1f4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioPseudoBranchCands</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a979ba10cff60431c1b4817743daf6846</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioPseudoBranchBins</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5ae75d2b7769967aa701d04e5083d58e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioPseudoBranchInts</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3b9055d77a4025302267c34dab42713b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioPseudoBranchImpls</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7c55c8f13395c395e6759ba9690a1be0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetBranchScore</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>adad5155935c4ddb41411c24198049850</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real downgain, SCIP_Real upgain)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetBranchScoreMultiple</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>accaba8412271cfd682eb8ca4a1e338d0</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int nchildren, SCIP_Real *gains)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetBranchingPoint</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3ebbb1c37814cfee5b82de308dc9b0a9</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real suggestion)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcalcNodeselPriority</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad9741839e2b8ec912e36884076f8959d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real targetvalue)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcalcChildEstimate</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a48fa1990192d55e91ad429e99787425b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real targetvalue)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateChild</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad2acad3baa29cfaa154e00f24ce7ed76</anchor>
      <arglist>(SCIP *scip, SCIP_NODE **node, SCIP_Real nodeselprio, SCIP_Real estimate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbranchVar</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abb0e80df81b921f02e8d63ec44de609c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_NODE **downchild, SCIP_NODE **eqchild, SCIP_NODE **upchild)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbranchVarVal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7e3f1f78081aa6334a1e2cbb3fd6e12b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real val, SCIP_NODE **downchild, SCIP_NODE **eqchild, SCIP_NODE **upchild)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbranchLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac95c263bceda5b9a1ed58f8a6ef28e5d</anchor>
      <arglist>(SCIP *scip, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbranchExtern</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a62764d72fde4914941fdacc22e3675cd</anchor>
      <arglist>(SCIP *scip, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbranchPseudo</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae7444dff2944b8bd256dd5de1fe3892b</anchor>
      <arglist>(SCIP *scip, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a03da404f4153d8f673e87fb28bc7d552</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateLPSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a722713bfce39442851599ccec206a5ac</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateRelaxSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a90fb3c4e2451dc19d07885e70d2319e4</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreatePseudoSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aed592c1f6559db530bb85cffaaba7efd</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateCurrentSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4932b7d51737d48f02cd609c705d532b</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateUnknownSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0db508df4ed974dceb64fd24fb3cb0da</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateOrigSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a84ea192b17b635835e7841762e3281ba</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateSolCopy</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a25c5da29caf1d233a2ccfea5d5eb320f</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_SOL *sourcesol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a37c2084d02924f6540e1e5936f590285</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlinkLPSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac998bae233c4ae9fdf4f930e07d8b2bc</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlinkRelaxSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab98aadcdf38d05c7866da542799a6509</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlinkPseudoSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0594e249860131e4a9e4932e795017e2</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlinkCurrentSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a73e509652c444869b96cdbdd1cd7a1ab</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a56349f981723444c03bdd1aac62c8131</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPunlinkSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a88085d62c37e99253eb3bcb63a47293a</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSolVal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>adbb9f3c0c0b462481fe5eff677463258</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSolVals</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab4007453cafad788430c2ad55129479f</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincSolVal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa080f80744eed3b1c8d8429c90231126</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_VAR *var, SCIP_Real incval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetSolVal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>adbd8d051e9c1b3f2d84be42fb140c112</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetSolVals</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a982669e32c6756f863a1cc3741ecf32c</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetSolOrigObj</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac9efcb03da88bb6acf38f69bd5598af0</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetSolTransObj</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ade249a928a8f6dcb0b254a98779ed324</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPtransformObj</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5a61c75e77b23d6c459bc78d513cb41d</anchor>
      <arglist>(SCIP *scip, SCIP_Real obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPretransformObj</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae4f655408936ee19f141c9c86df4b8c0</anchor>
      <arglist>(SCIP *scip, SCIP_Real obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetSolTime</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>acdb4255415fbf913d034f73fa724b871</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetSolRunnum</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a07245cd923bed863675c4c3129e86a9b</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetSolNodenum</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa7962e1cf606e7cb968558a77d72533e</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HEUR *</type>
      <name>SCIPgetSolHeur</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8c54a56bb9c6fa715d74a3ea9d5c21ec</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPareSolsEqual</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a517e9932344fec6606f3a2ef0b538cf8</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol1, SCIP_SOL *sol2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3bd6c0f66c0179c77cf4c708ee2bef45</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, FILE *file, SCIP_Bool printzeros)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintTransSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a18132f192e81da44ae7cedf9e83a3a23</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, FILE *file, SCIP_Bool printzeros)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNSols</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a64244b2bbdea03fc80580bb0d4f22c86</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SOL **</type>
      <name>SCIPgetSols</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9a6a0a948f27da830ca9acc5da098b93</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SOL *</type>
      <name>SCIPgetBestSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5978378526107a47fb4965d0167a65d6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintBestSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2d0d56545651587e0becf282706860e0</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_Bool printzeros)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintBestTransSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7d7ba6596fb55a1596bc5548fb1970fd</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_Bool printzeros)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIProundSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa21b685b67e0c27028fcfb10f62b4d68</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9b51e1c9e28d3f6f9f45f37bfdb77897</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddSolFree</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a39900eaed373281cde8f8cd7c1120042</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCurrentSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a847421ea1ec92da72e12cc318a3df719</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtrySol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae4041777d638e0bcbbb592946b520f15</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool printreason, SCIP_Bool checkbounds, SCIP_Bool checkintegrality, SCIP_Bool checklprows, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtrySolFree</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af00de2379f996445b4497db79e7449f0</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_Bool printreason, SCIP_Bool checkbounds, SCIP_Bool checkintegrality, SCIP_Bool checklprows, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtryCurrentSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4dc3e04fe53ed2cbb9c09405fc25c102</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_Bool printreason, SCIP_Bool checkintegrality, SCIP_Bool checklprows, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a87ad26a90aa013915ab65cb2d49e01e5</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool printreason, SCIP_Bool checkbounds, SCIP_Bool checkintegrality, SCIP_Bool checklprows, SCIP_Bool *feasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckSolOrig</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0277de675980404cf9ae9087a4f6aa6c</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool *feasible, SCIP_Bool printreason, SCIP_Bool completely)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcatchEvent</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac05fe12d6ec0a9a0038098f5fed8073c</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int *filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdropEvent</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>afb9a71feec8d57a38929de13df701e4f</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcatchVarEvent</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3ca88edcea21c4e01433a7b42f468c72</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int *filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdropVarEvent</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3e9a0d6119568dda136e212824af7090</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcatchRowEvent</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aeb33cac5aafb665ff362639cb28d36ef</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int *filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdropRowEvent</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3f10012cf2e84b9ee81d5c397a138c2f</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetCurrentNode</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a869994597923e6fa9c1930b7b3e231b9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetRootNode</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>acbb3fc30caf49cf50754ac691115aae9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPinRepropagation</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2a4edb16b893695d8eb1a7c75ddaa072</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetChildren</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2c93e943a8d4fb918026ffbb87cae40a</anchor>
      <arglist>(SCIP *scip, SCIP_NODE ***children, int *nchildren)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNChildren</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a1f5697589729356124199c16db1b492e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetSiblings</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa8dd0abb76dfa041640ed07581e238d1</anchor>
      <arglist>(SCIP *scip, SCIP_NODE ***siblings, int *nsiblings)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNSiblings</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a1662f2e6f660f5bdbebc5b91462c77b8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLeaves</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a57b5dbbcbde164e59fd8c7d57696fa24</anchor>
      <arglist>(SCIP *scip, SCIP_NODE ***leaves, int *nleaves)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLeaves</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8d18e736f44b47bc390fb112090ee809</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetPrioChild</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3f24043628a1f185e2d30d7782cbb4bd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetPrioSibling</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a71bace9eb8a20d438ca12c0acc4bfa17</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetBestChild</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a98b9f65219967bdb6acbef1bb216607f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetBestSibling</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abb6da922b7c8277351e3f14b170e42ba</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetBestLeaf</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae0bf4acb976ef18c5ecae5575eb28c96</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetBestNode</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0050d97837e8b24a6f9fc9f0ef362b02</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetBestboundNode</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a433ce895c25cec073958b114601f7993</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcutoffNode</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>adf578314e6cc05eb74619c7226a6428e</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrepropagateNode</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a1ccf8578f677d311fe7ac492c8eddd12</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetCutoffdepth</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7208fa603e52c67b3bb400d4c470fb42</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetRepropdepth</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad4a7d0354d2546df6b4e6e69183fdfb0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintNodeRootPath</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a77da882ad387b9b6cd4b123a445969f4</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNRuns</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7da0fba0b618088984402dea1436ae8c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNNodes</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4549c064077c4bbe86077500221d674c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNTotalNodes</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a75bfc3f17379ce05fe6bdc1ca8733ca3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNNodesLeft</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2f8a5f5401289bdbe59353e3edc204cb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLPs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a00bd2b03e4369dfbc336f8efd3a38752</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNLPIterations</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aefd01543c25ff377e46ff899f2299df2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNRootLPIterations</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9c1cba02217c841d69fc3cef21788cda</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrimalLPs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a597b1200db63832b02859268fab1d8bb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNPrimalLPIterations</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae5f3dbc630bb9023f0c952bce67575a9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNDualLPs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>afa460edacf0e1d8b184c88f9b8a99a76</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNDualLPIterations</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a824ba1f0cd6b4096c67b9c7017e1f58b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNBarrierLPs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae7b73bebddbd4698c64eb99ec913f066</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNBarrierLPIterations</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a257196dc0af4d07e2a4279ec05b950f3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNResolveLPs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>acf4b9f683dc63e6c54d5babb8c062ba2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNResolveLPIterations</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a40e6b4b2658fd78fd4cc491679f85d4d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrimalResolveLPs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a492e6a3d41abad9186b41dc9e1798cc5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNPrimalResolveLPIterations</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9e08d9e824b9c90f9e2aec8b9b729be9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNDualResolveLPs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a1777814844be2178dfb42e3ac4ed1e46</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNDualResolveLPIterations</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab2ad3dc04935b8f0e9e8d0a497510f79</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNNodeLPs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a19fd443d6298de7445434d972fab78b0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNNodeLPIterations</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7f74a5286d23806f10e06e9cb6dec694</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNNodeInitLPs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0a3a25e84ead7692f7b8fa1b7e8eade9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNNodeInitLPIterations</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad225e7f8e443b9be84a49d7cb8dc3d65</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNDivingLPs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a63d47d1b8d793e7e9ce681a4fbaedf3a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNDivingLPIterations</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2ca93cdaeb2c779c6943459741b2129c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNStrongbranchs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>afa8eeac72d1ced8d5a7bdc064b309f07</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNStrongbranchLPIterations</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6877587cd382aebdb420450425e54e72</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNRootStrongbranchs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4e05302acb1ae96aa3b4369a767b2c63</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNRootStrongbranchLPIterations</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>afdf421bf7223b88c35da0dc67411c702</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPriceRounds</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a91e2b35dc6f27f57f237e338fd74dca3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPricevars</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4b037fe8922ccc57497bee7b154eaffa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPricevarsFound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>acd5ede34fd319b8aa1dd4ea5131f32a2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPricevarsApplied</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a68d93e1141d73204aa1e1c2cbe4decd2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNSepaRounds</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5b428523286ff757c5ccc1d472e2981d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNCutsFound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac2bcec94e1d9c1b03a42dcef02bd62ad</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNCutsFoundRound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5b9827007afd091606e9f2c75ded91c2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNCutsApplied</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6cc587f3f43c1483b8be7f1525a02963</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNConflictConssFound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>adb734513681bf126b4dcb10935a154c5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNConflictConssFoundNode</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae922e864839c8e54302f57ea498d105f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNConflictConssApplied</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abe08eff9f13c606dd62c12511797aece</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetDepth</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a832135c063903ff26794a40cfde8c6d6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetFocusDepth</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a39c1a939192ebdcf78c40a2ee815f6b5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetMaxDepth</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a242f779d9e85e8b7bbdb3a2a7f5bc45d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetMaxTotalDepth</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4aa2f63f3ee5607304ed38e53a318f47</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNBacktracks</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aaec97069bd5823e3602a56d0b0793467</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetPlungeDepth</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aaa502314ddd29c3d9de40bab0197ca4e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNActiveConss</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a89978d9776116bf035147ca470589a69</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNEnabledConss</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5a0864602287ccf44f0a46cf5cfd1926</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgDualbound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a97055e2233b0e52c3d7be7206d9864c4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgLowerbound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a71e2fc6b7bd8cdff564bc8b0ba262127</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualbound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4fa1615e54c59b47f8156c64df11d8b3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLowerbound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a701a29e227cf348a2d86031f9880cccf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualboundRoot</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8d2b80bd1d195f98444c4dd6deb588bb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLowerboundRoot</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a354387886f93bd54e8b47fce344c36f2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetPrimalbound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a23d44bb47495a9064ce375b448446feb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetUpperbound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a348c2e9e1c59b4664b128b79ba0cca92</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetCutoffbound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab87340eb66d6fddb826bf07bf4a650ec</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisPrimalboundSol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a14602d2ecb24cfec70492d4c84ec139d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetGap</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a408360be74ace621b7b361e543edeca7</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetTransGap</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab314a925bd8bebe145c8d9941e9208a0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNSolsFound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a213d551c49588d84a239f133f468b8ff</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNBestSolsFound</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab5d5272957a919f388821cd37b9a79da</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocost</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa5e8f23462892e17fb77ae56ccb3c564</anchor>
      <arglist>(SCIP *scip, SCIP_Real solvaldelta)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocostCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>add11ccf4d0e8823b6b424b9e32177693</anchor>
      <arglist>(SCIP *scip, SCIP_Real solvaldelta)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocostCount</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3cef732249613ca9e5cfa38fbb2cc11e</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocostCountCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abbfc548c17148b7e7e7232e0d3a15f3e</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocostScore</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab76cbada1841c8f4a204fb474089daf1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocostScoreCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2d6e802390395e2386318a9d88b6fefd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgConflictScore</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa24ce24458f9bdd63dc35f743ca18e27</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgConflictScoreCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a05ebf73755ebf8a3e9683b6c1451bd6f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgInferences</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>addcd8e5d8e440a31da60fdac4ef18e4e</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgInferencesCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af2afd5d59dfa79fce52cbea701b41102</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgConflictlengthScore</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3570f17d8caf75dc8752d4f4eaf5351d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgConflictlengthScoreCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>acbd9bdbf2697fff0c504852fb2208ecd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgInferenceScore</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2a1d533eab0d4f74e5d0e3f281a06c9f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgInferenceScoreCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9e8811a9c82dd87ee92e6ee39067d841</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgCutoffs</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>afd6fcd1f689fe7ddcc1dac91ccbdd5a1</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgCutoffsCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0d41f91a49fc3ed61d740065b282e15e</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgCutoffScore</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aff19a038ec801327fa828a759eb76e9a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgCutoffScoreCurrentRun</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8d907a27755432f1195c543969f0ca57</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintOrigProblem</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab0fbe8783e109c1f89e47c63103a70e0</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *extension, SCIP_Bool genericnames)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintTransProblem</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aaea37b8cbddff8710cb4cb57ae01d521</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *extension, SCIP_Bool genericnames)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintStatistics</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6e7eb26b996d4466493a504a0924a35d</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintBranchingStatistics</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7292cb7e69a7b7ea2556576aa07cc336</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintDisplayLine</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6ea3dd40ac8b336dd0420090795acda7</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_VERBLEVEL verblevel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNImplications</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a1850178381f2a69f273f8bce8f19828b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteImplicationConflictGraph</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab6c11018b121421f05dab24f189fd9b3</anchor>
      <arglist>(SCIP *scip, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetTimeOfDay</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4e5e8c56298839c6c5bc5b7c02cef65f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateClock</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a185ff4a1a5ceddd5d122eaeaa09d38c1</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK **clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateCPUClock</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a43e64ffeb84cdc44496d277b980f2e40</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK **clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateWallClock</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac6f4dfffdca8d2e2f191ae95dc35e539</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK **clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeClock</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8ccd4a581e4a0e67fe18b0dd22741e75</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK **clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPresetClock</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2c20354b77e6d4752c50176158a9e366</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK *clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartClock</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aee369280c4ec16497e836c40db3bec30</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK *clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstopClock</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a56bd39850595740305b20f752bff4505</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK *clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetClockTime</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae29d0960525f972c49104aafe09a78dc</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK *clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetClockTime</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af4581f3f9c3be8463bedbad7c42ad3a1</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK *clck, SCIP_Real sec)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetTotalTime</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a8a25300e376653dd3b7e36e6c243a58d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetSolvingTime</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a86e3d773621b6918f1bbf6ef89f1edeb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetPresolvingTime</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aeb8aa9607912df47b5ed70eddd5a30ca</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPinfinity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a26c1965e7862c99be6f4d0cf292630c7</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPepsilon</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae3ad14fc5405972193b732f39bf4544d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPsumepsilon</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae44d10a77687edb9fca81317c91e2376</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfeastol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9057fa9938dced1686c54b8dd1639de9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPdualfeastol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9ecd9d48cd473b13c25f37749656cb97</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPbarrierconvtol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af17769328fb31dec31ef4962203c44dc</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgFeastol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a84074d45d8cad01fd62e1d40c76dab20</anchor>
      <arglist>(SCIP *scip, SCIP_Real feastol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgDualfeastol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>afe018e183e5a0c86551904ee86b2ede5</anchor>
      <arglist>(SCIP *scip, SCIP_Real dualfeastol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgBarrierconvtol</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>adb2c4a0dedcaf914db13ccd8cc1c0214</anchor>
      <arglist>(SCIP *scip, SCIP_Real barrierconvtol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmarkLimitChanged</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae37eec7a1a6ceea5b23956eb297b32a5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprintReal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6656e7198b300483b3e5540516278732</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_Real val, int width, int precision)</arglist>
    </member>
    <member kind="function">
      <type>BMS_BLKMEM *</type>
      <name>SCIPblkmem</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a13330793135e0be591485b51b9fda2ee</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetMemUsed</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a25226d1ea690f8147dd8c6be2433fae8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcalcMemGrowSize</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a45225e47a88493523a4518bcd8f7e18f</anchor>
      <arglist>(SCIP *scip, int num)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPensureBlockMemoryArray_call</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2db3bba0612b210613e08a4ad535de3b</anchor>
      <arglist>(SCIP *scip, void **arrayptr, size_t elemsize, int *arraysize, int minsize)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPallocBufferSize</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7a34fbe8a309e4702417f3e0bb5d71a4</anchor>
      <arglist>(SCIP *scip, void **ptr, int size)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPduplicateBufferSize</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad82dda91b29dfbba82eb73b58f2aac9b</anchor>
      <arglist>(SCIP *scip, void **ptr, const void *source, int size)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreallocBufferSize</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae892e4f5a969299adf86b7db73094839</anchor>
      <arglist>(SCIP *scip, void **ptr, int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPfreeBufferSize</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aafa14b0c468bccb8449542c4caf5ea01</anchor>
      <arglist>(SCIP *scip, void **ptr, int dummysize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprintMemoryDiagnostic</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a09d69a221bea08a0b314409bfc0ad1bb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisEQ</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac87687bf04e43f86291920b3a27a902c</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLT</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aebab0e8275ac5eb5c56fecf1445cae53</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLE</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6098874500a2c86a848a7ead51a271c5</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisGT</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aaeb5fa50b4e504158c6f57e62f898c9a</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisGE</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2a60428605ade992434594643bc291ee</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisInfinity</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6ac689c948511ea4a133e1187d33c60b</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisZero</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ada1c680e74f9164304d6a1b80a9d5ec4</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisPositive</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a534c8a89f5ed608b756fdd2549ed45a4</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisNegative</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab741e3e43e55fd314fb1ed22b4188bc8</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisIntegral</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3022a89ce7a688e8474ffd3a179f76e0</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisScalingIntegral</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abc3996b42b9c5d96eff9005ad19125b4</anchor>
      <arglist>(SCIP *scip, SCIP_Real val, SCIP_Real scalar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFracIntegral</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7f271cbe55369e9b8e20f19d8a9b0e00</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfloor</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a64b8534876012c1f65bc48ec8dee7039</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPceil</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab82261caf771bdd1d257928a7ecb49c1</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfrac</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa4ec45b5abe5092798ef65db57e65d1b</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumEQ</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7fbc455f596c206ab4c9aef793003eb2</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumLT</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6c5ad5e1d981673aae28a6cc76dd7dda</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumLE</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>afad73ad88bbd00e0d4d9fecdbe924840</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumGT</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af81d3e6d8669bd87cfe18b202ec47df8</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumGE</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9bb24cf1101995e1c8632dea7c3d4367</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumZero</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad085ed607bbe30c0018292d821c3dcac</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumPositive</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0ec6bbf0e38eb5aafef44d1f291cc6af</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumNegative</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a506d3e16e2110af1003cd5f1094f9d80</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasEQ</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5173b989825c4d92e3f5c1fdb3bda0da</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasLT</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a760c9e841bfb93dbb8b154a8c687e33d</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasLE</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7dd943a1dba3ef0c108f1202b8963ac2</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasGT</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac6a6239d776db49ce1ccf1e17750af27</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasGE</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a12aa46b95e92ca8a44ef4318fcabd318</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasZero</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a61425eb4e85f3edaeb8c227b98104018</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasPositive</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af8c5293ba162319535089cc7bb998135</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasNegative</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7b87f4153257434cc87cdc25b70b2057</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasIntegral</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a848f1b16088177dfe52cc9a831b7ae2d</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasFracIntegral</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2c907faa2bb47f34b1d2491cdcdc0aa7</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfeasFloor</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6796e3ecf99da9862e914747eaadd9cf</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfeasCeil</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a5c2e6890ce633de31011bda7875996b5</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfeasFrac</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a333a924a364d2882974062d9e006e4ff</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLbBetter</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a58dd466e39788971c7d4f22c00549915</anchor>
      <arglist>(SCIP *scip, SCIP_Real newlb, SCIP_Real oldlb, SCIP_Real oldub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisUbBetter</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a11a6ababcbe9f88558735dd63635a66b</anchor>
      <arglist>(SCIP *scip, SCIP_Real newub, SCIP_Real oldlb, SCIP_Real oldub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelEQ</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a099dd6dac1110e34019cdd637fded132</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelLT</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a36480411a3401805d9bb0bcfa2b06b30</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelLE</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a117adaa841ba0978065ae78c64bf9c6c</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelGT</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3aa55984855074f0e52a20d13f89cee4</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelGE</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a384b4766165749da514343138a334b76</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumRelEQ</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4591cd0403adc8515381ba1ef88bac7e</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumRelLT</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a70d2b54609bcd6fca99fc2c0741e9a71</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumRelLE</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a3685ea2563c2baa026bf157cae9eb2ce</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumRelGT</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a2562282385deb2faa61699107441d8b5</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumRelGE</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abbd1d627fc6ed441ed83adc3b4e0def9</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateRealarray</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4e6f109b64d20fc639e2ccea10dd7a07</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY **realarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeRealarray</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a95b7da914f268329fd08f130dcfb7c75</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY **realarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPextendRealarray</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad6ff2b6be1016150f38fdcff2b60de4b</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray, int minidx, int maxidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearRealarray</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>afd5142ff13d294cef7136c82c4720818</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRealarrayVal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a6dcdf27c793a3968fb52414a1b2110ff</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray, int idx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRealarrayVal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad93b72b65c0ce5880e02757ab6adf5d1</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray, int idx, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincRealarrayVal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a78496aa8fe43c55824197be198f41ade</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray, int idx, SCIP_Real incval)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetRealarrayMinIdx</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a0746387e946cb6c56533b62f794bf811</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetRealarrayMaxIdx</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a52f31bd1b1208325a27159f9014b33d4</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateIntarray</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aae2f6cf84273a6b575983d5151d496b4</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY **intarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeIntarray</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae76d1e41d86ed89540a4d03de98df65b</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY **intarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPextendIntarray</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a56ed132c02d68b6d51a9b0c71e96c838</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray, int minidx, int maxidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearIntarray</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab9cfb4664f3642d2003835f9982535a4</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetIntarrayVal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa4b80f736f40e21a5718709c8341ba56</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray, int idx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetIntarrayVal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aff5e9dfa1a71bac95f5d12d58b195923</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray, int idx, int val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincIntarrayVal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abaf6549f5af89c2d33b9e3cf2c9a39f7</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray, int idx, int incval)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetIntarrayMinIdx</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a4a0bc5da4b15e5e3cd2eb3a9b5ae05e3</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetIntarrayMaxIdx</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a437038afa999ca5fab8a8277fca27417</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateBoolarray</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>abbcffe275bb8f91b306d9617f5cc0a45</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY **boolarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeBoolarray</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aa50aca1a68d07eba80edcec530f22767</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY **boolarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPextendBoolarray</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a958b1e079b85c64810ea085b15ca2e9c</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray, int minidx, int maxidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearBoolarray</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af644d93483846007725cf6f76abd51fe</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPgetBoolarrayVal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a186c045fca2f197c421a71f50cb06c94</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray, int idx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBoolarrayVal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac90479c20564329855f180e8d88f8006</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray, int idx, SCIP_Bool val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetBoolarrayMinIdx</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a92224d59dfc96f2564dd55cfa6656683</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetBoolarrayMaxIdx</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab336c51102fb1836994d95d233de3a93</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreatePtrarray</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>afd49debdd6d6a47671b61d1e89a40ed9</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY **ptrarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreePtrarray</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a90c323657b014cc9b2c482ff52882143</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY **ptrarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPextendPtrarray</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>af2459cfe321058c510eb54563985e40e</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray, int minidx, int maxidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearPtrarray</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a29ba6b5eefcacce05abdb97fe1297cd0</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPgetPtrarrayVal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ac0016ddda5170cf0997ae10f3bbe87cc</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray, int idx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPtrarrayVal</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ab6a1bf17dbff7f0664e7b936862a58f6</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray, int idx, void *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetPtrarrayMinIdx</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a12e56e85d1eec46e4b45f681e5dc5c5e</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetPtrarrayMaxIdx</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>aaa2e5121082f66d69757d59e3146ffd6</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartDiveNLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a7a44bbbdfa1ce57980097fa0160199cf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPendDiveNLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a17997edc2b93dd62c26497f31eb241ad</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarObjDiveNLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ae37c66da85c2643d86ade053639ed85c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarBoundsDiveNLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a9c43186d72bb90c5ec8f429f2a1b470b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real lb, SCIP_Real ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarsBoundsDiveNLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>a33e4fe4b923a4a4b35bdef9b3ec66c77</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveDiveNLP</name>
      <anchorfile>scip_8c.html</anchorfile>
      <anchor>ad3e9ce6f9cc263009a6e4bf01dcda463</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>scip.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>scip_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__clock_8h" name="type_clock.h" local="yes" imported="no">scip/type_clock.h</includes>
    <includes id="type__misc_8h" name="type_misc.h" local="yes" imported="no">scip/type_misc.h</includes>
    <includes id="type__paramset_8h" name="type_paramset.h" local="yes" imported="no">scip/type_paramset.h</includes>
    <includes id="type__event_8h" name="type_event.h" local="yes" imported="no">scip/type_event.h</includes>
    <includes id="type__lp_8h" name="type_lp.h" local="yes" imported="no">scip/type_lp.h</includes>
    <includes id="type__nlp_8h" name="type_nlp.h" local="yes" imported="no">scip/type_nlp.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <includes id="type__prob_8h" name="type_prob.h" local="yes" imported="no">scip/type_prob.h</includes>
    <includes id="type__tree_8h" name="type_tree.h" local="yes" imported="no">scip/type_tree.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <includes id="type__branch_8h" name="type_branch.h" local="yes" imported="no">scip/type_branch.h</includes>
    <includes id="type__conflict_8h" name="type_conflict.h" local="yes" imported="no">scip/type_conflict.h</includes>
    <includes id="type__cons_8h" name="type_cons.h" local="yes" imported="no">scip/type_cons.h</includes>
    <includes id="type__dialog_8h" name="type_dialog.h" local="yes" imported="no">scip/type_dialog.h</includes>
    <includes id="type__disp_8h" name="type_disp.h" local="yes" imported="no">scip/type_disp.h</includes>
    <includes id="type__heur_8h" name="type_heur.h" local="yes" imported="no">scip/type_heur.h</includes>
    <includes id="type__nodesel_8h" name="type_nodesel.h" local="yes" imported="no">scip/type_nodesel.h</includes>
    <includes id="type__presol_8h" name="type_presol.h" local="yes" imported="no">scip/type_presol.h</includes>
    <includes id="type__pricer_8h" name="type_pricer.h" local="yes" imported="no">scip/type_pricer.h</includes>
    <includes id="type__reader_8h" name="type_reader.h" local="yes" imported="no">scip/type_reader.h</includes>
    <includes id="type__relax_8h" name="type_relax.h" local="yes" imported="no">scip/type_relax.h</includes>
    <includes id="type__sepa_8h" name="type_sepa.h" local="yes" imported="no">scip/type_sepa.h</includes>
    <includes id="type__prop_8h" name="type_prop.h" local="yes" imported="no">scip/type_prop.h</includes>
    <includes id="type__nlpi_8h" name="type_nlpi.h" local="yes" imported="no">nlpi/type_nlpi.h</includes>
    <includes id="pub__branch_8h" name="pub_branch.h" local="yes" imported="no">scip/pub_branch.h</includes>
    <includes id="pub__conflict_8h" name="pub_conflict.h" local="yes" imported="no">scip/pub_conflict.h</includes>
    <includes id="pub__cons_8h" name="pub_cons.h" local="yes" imported="no">scip/pub_cons.h</includes>
    <includes id="pub__cutpool_8h" name="pub_cutpool.h" local="yes" imported="no">scip/pub_cutpool.h</includes>
    <includes id="pub__dialog_8h" name="pub_dialog.h" local="yes" imported="no">scip/pub_dialog.h</includes>
    <includes id="pub__disp_8h" name="pub_disp.h" local="yes" imported="no">scip/pub_disp.h</includes>
    <includes id="pub__event_8h" name="pub_event.h" local="yes" imported="no">scip/pub_event.h</includes>
    <includes id="scip_2pub__expression_8h" name="scip/pub_expression.h" local="yes" imported="no">scip/pub_expression.h</includes>
    <includes id="pub__fileio_8h" name="pub_fileio.h" local="yes" imported="no">scip/pub_fileio.h</includes>
    <includes id="pub__heur_8h" name="pub_heur.h" local="yes" imported="no">scip/pub_heur.h</includes>
    <includes id="pub__implics_8h" name="pub_implics.h" local="yes" imported="no">scip/pub_implics.h</includes>
    <includes id="pub__lp_8h" name="pub_lp.h" local="yes" imported="no">scip/pub_lp.h</includes>
    <includes id="pub__nlp_8h" name="pub_nlp.h" local="yes" imported="no">scip/pub_nlp.h</includes>
    <includes id="pub__message_8h" name="pub_message.h" local="yes" imported="no">scip/pub_message.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <includes id="pub__nodesel_8h" name="pub_nodesel.h" local="yes" imported="no">scip/pub_nodesel.h</includes>
    <includes id="pub__paramset_8h" name="pub_paramset.h" local="yes" imported="no">scip/pub_paramset.h</includes>
    <includes id="pub__presol_8h" name="pub_presol.h" local="yes" imported="no">scip/pub_presol.h</includes>
    <includes id="pub__pricer_8h" name="pub_pricer.h" local="yes" imported="no">scip/pub_pricer.h</includes>
    <includes id="pub__reader_8h" name="pub_reader.h" local="yes" imported="no">scip/pub_reader.h</includes>
    <includes id="pub__relax_8h" name="pub_relax.h" local="yes" imported="no">scip/pub_relax.h</includes>
    <includes id="pub__sepa_8h" name="pub_sepa.h" local="yes" imported="no">scip/pub_sepa.h</includes>
    <includes id="pub__prop_8h" name="pub_prop.h" local="yes" imported="no">scip/pub_prop.h</includes>
    <includes id="pub__sol_8h" name="pub_sol.h" local="yes" imported="no">scip/pub_sol.h</includes>
    <includes id="pub__tree_8h" name="pub_tree.h" local="yes" imported="no">scip/pub_tree.h</includes>
    <includes id="pub__var_8h" name="pub_var.h" local="yes" imported="no">scip/pub_var.h</includes>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPversion</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa6bd4ec02060cb8abac4bdc254b22f98</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPmajorVersion</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad75a4783b7164191b3e35560130b3911</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPminorVersion</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8480404a196ebd5812c733be7255d822</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPtechVersion</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab4301f3a3e1601d9afdcfb807d9b10b6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPsubversion</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a23ec8370d5d433e1cb47922a170d9abf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprintVersion</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aaa53a38f12aa2f66ce5590a1b914ea1d</anchor>
      <arglist>(FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprintError</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aae67ce48816eb43163f9441f12b854f9</anchor>
      <arglist>(SCIP_RETCODE retcode, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreate</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>acf9182389e37e83d75f471f907250081</anchor>
      <arglist>(SCIP **scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfree</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abbb652f903ff17766b15cf578c717e71</anchor>
      <arglist>(SCIP **scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_STAGE</type>
      <name>SCIPgetStage</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aecb56f0f1a9be97fda98ea9fdcf61d2c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintStage</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a29b05cad88abcc216a8f4f6974b3caa0</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_STATUS</type>
      <name>SCIPgetStatus</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>adfa940b47f19c0863d400b554378ef45</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintStatus</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a80b0dfb8dfac80f47a11cef68019a21a</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisTransformed</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a276205c51844317fddb4015d27cad154</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisExactSolve</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>afe5d752623d89a0be8804a7ca97fa85b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPpressedCtrlC</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7fbd6310ff628af203e56df753c93419</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisStopped</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abaf6b1008463bd1c0459ea7b8f97976f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyPlugins</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a03064c5e5c62ea22cce2f0fd60bd0a19</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_Bool copyreaders, SCIP_Bool copypricers, SCIP_Bool copyconshdlrs, SCIP_Bool copyconflicthdlrs, SCIP_Bool copypresolvers, SCIP_Bool copyrelaxators, SCIP_Bool copyseparators, SCIP_Bool copypropagators, SCIP_Bool copyheuristics, SCIP_Bool copyeventhdlrs, SCIP_Bool copynodeselectors, SCIP_Bool copybranchrules, SCIP_Bool copydisplays, SCIP_Bool copydialogs, SCIP_Bool copynlpis, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyProb</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6e4030d237369441234bce59eb1d8707</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarCopy</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac60a98f090438914344937bccbcd6ff0</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_VAR *sourcevar, SCIP_VAR **targetvar, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool global)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1805aa332d0b93f7f255d719eebea066</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool global)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetConsCopy</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6e0b613906dbabb0d812e0d24e35f504</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_CONS *sourcecons, SCIP_CONS **targetcons, SCIP_CONSHDLR *sourceconshdlr, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, const char *name, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode, SCIP_Bool global, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyConss</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad9e82dbef9b681fc0063ea36e5cc4671</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool global, SCIP_Bool enablepricing, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopyParamSettings</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ade1245b4b0ecd94c85251d9330ed85ef</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcopy</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0b02ced4ec30b680f85f50d0d088851c</anchor>
      <arglist>(SCIP *sourcescip, SCIP *targetscip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, const char *suffix, SCIP_Bool global, SCIP_Bool enablepricing, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateMessagehdlr</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7011fcc9263ad11d668bed492811bd96</anchor>
      <arglist>(SCIP_MESSAGEHDLR **messagehdlr, SCIP_Bool bufferedoutput, SCIP_DECL_MESSAGEERROR((*messageerror)), SCIP_DECL_MESSAGEWARNING((*messagewarning)), SCIP_DECL_MESSAGEDIALOG((*messagedialog)), SCIP_DECL_MESSAGEINFO((*messageinfo)), SCIP_MESSAGEHDLRDATA *messagehdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeMessagehdlr</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6180783ed2b2a3f3051aea5367ed6ec0</anchor>
      <arglist>(SCIP_MESSAGEHDLR **messagehdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetMessagehdlr</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6592d0e9f9b21b395fc1938c7d8f55e7</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetDefaultMessagehdlr</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a666b0195d1f0cf4027cb71620f266691</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_MESSAGEHDLR *</type>
      <name>SCIPgetMessagehdlr</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0b55cc5ee4fc4916dab301baa98f90ad</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPdialogMessage</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9714c0ef46d46c786c8b22fadd5cd72b</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPinfoMessage</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0539bdb9cd224f8b4bceafb87accfe1a</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPverbMessage</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a15a74fb5047e7a4241df8cd139e2570a</anchor>
      <arglist>(SCIP *scip, SCIP_VERBLEVEL msgverblevel, FILE *file, const char *formatstr,...)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VERBLEVEL</type>
      <name>SCIPgetVerbLevel</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a171ae3f547f462b5ecaa5db6442dae65</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddBoolParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad6b8cd6aca5599ac7a6d672c925a00ea</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, SCIP_Bool *valueptr, SCIP_Bool isadvanced, SCIP_Bool defaultvalue, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddIntParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a21615f4989022ab770f3dfdd68467f48</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int *valueptr, SCIP_Bool isadvanced, int defaultvalue, int minvalue, int maxvalue, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLongintParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0afd51696f55ab5000e82f4603c3466a</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, SCIP_Longint *valueptr, SCIP_Bool isadvanced, SCIP_Longint defaultvalue, SCIP_Longint minvalue, SCIP_Longint maxvalue, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddRealParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4b1bf7a9fc9d69430ed67c6fdb1dfe9c</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, SCIP_Real *valueptr, SCIP_Bool isadvanced, SCIP_Real defaultvalue, SCIP_Real minvalue, SCIP_Real maxvalue, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCharParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1978388236498b6fc623317e00a73937</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, char *valueptr, SCIP_Bool isadvanced, char defaultvalue, const char *allowedvalues, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddStringParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a45be3ad6cfa4f827ddc23cb7f6974c85</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, char **valueptr, SCIP_Bool isadvanced, const char *defaultvalue, SCIP_DECL_PARAMCHGD((*paramchgd)), SCIP_PARAMDATA *paramdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetBoolParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a032d442659fb5a2dba465cd2fc699aa7</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Bool *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetIntParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ade9cb72570b041b5c5549ce36be944ee</anchor>
      <arglist>(SCIP *scip, const char *name, int *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLongintParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad742f55244be27341d49c1e1d204c8d4</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Longint *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetRealParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6f8029234396592dc48285f35e9eacf2</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Real *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetCharParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>afd8cf8567761340ea093c9398e44bfeb</anchor>
      <arglist>(SCIP *scip, const char *name, char *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetStringParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac09875c22b4979b6102f3023d5e4354e</anchor>
      <arglist>(SCIP *scip, const char *name, char **value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBoolParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aeb1efbc3feae45fbfe8776f96f7cc6c1</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Bool value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetIntParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a623d0ee8fcfea556a1a060863c6d41e5</anchor>
      <arglist>(SCIP *scip, const char *name, int value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetLongintParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a46a3604d3c1eafa2c0bbc3f6da6bc014</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Longint value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRealParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af367ec136692408de9b4d9f126792292</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_Real value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetCharParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab739570062ae299c4cf96f07e5c581ac</anchor>
      <arglist>(SCIP *scip, const char *name, char value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetStringParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abded6552fdd02388b762c79f0782405f</anchor>
      <arglist>(SCIP *scip, const char *name, const char *value)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadParams</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a888d25795f5442b4f53ea2ecbd1a3988</anchor>
      <arglist>(SCIP *scip, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteParams</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9ded708f49a2be041bb9f0fa50aabe27</anchor>
      <arglist>(SCIP *scip, const char *filename, SCIP_Bool comments, SCIP_Bool onlychanged)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPresetParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa0328c5017b76792d6f13e4cd9670d2e</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPresetParams</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a15d4e88fa7b7d26d4530127baf25c67b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetEmphasis</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3a7bc3389ae07fd2aec05b1f470c4036</anchor>
      <arglist>(SCIP *scip, SCIP_PARAMSETTING paramsetting, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSubscipsOff</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6de4d1f7072ecd38201c92f0638098bc</anchor>
      <arglist>(SCIP *scip, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetHeuristics</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4c6399f0b7350398902a5e5dcaa7343c</anchor>
      <arglist>(SCIP *scip, SCIP_PARAMSETTING paramsetting, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPresolving</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa40bcb511bcc988f381902d8e719631e</anchor>
      <arglist>(SCIP *scip, SCIP_PARAMSETTING paramsetting, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSeparating</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af91abf95639f1bf2022c11d13a032b10</anchor>
      <arglist>(SCIP *scip, SCIP_PARAMSETTING paramsetting, SCIP_Bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PARAM **</type>
      <name>SCIPgetParams</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5c513e97e96e80e3e9a119c93fed30d4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNParams</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3f11e69843067b4da6e7317a3ce155fd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeReader</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a08baa19972eb93902b49828126781590</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, const char *extension, SCIP_DECL_READERCOPY((*readercopy)), SCIP_DECL_READERFREE((*readerfree)), SCIP_DECL_READERREAD((*readerread)), SCIP_DECL_READERWRITE((*readerwrite)), SCIP_READERDATA *readerdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_READER *</type>
      <name>SCIPfindReader</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a211ed53db6f2439f75a56d9d98516b2c</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_READER **</type>
      <name>SCIPgetReaders</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3e33bcf8c4113365b354a2503209ed21</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNReaders</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a778e973b21037618f175b48eb1ace9cd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePricer</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac677945e92f9eb7b2ea34820dab4e7b8</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, SCIP_Bool delay, SCIP_DECL_PRICERCOPY((*pricercopy)), SCIP_DECL_PRICERFREE((*pricerfree)), SCIP_DECL_PRICERINIT((*pricerinit)), SCIP_DECL_PRICEREXIT((*pricerexit)), SCIP_DECL_PRICERINITSOL((*pricerinitsol)), SCIP_DECL_PRICEREXITSOL((*pricerexitsol)), SCIP_DECL_PRICERREDCOST((*pricerredcost)), SCIP_DECL_PRICERFARKAS((*pricerfarkas)), SCIP_PRICERDATA *pricerdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRICER *</type>
      <name>SCIPfindPricer</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a82153a7b60f2f2e2d6ca33d693116aa8</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRICER **</type>
      <name>SCIPgetPricers</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a548921cc3a565a75a773e5eaa614c0a5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPricers</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8f5c3f95531a275209efb42f13891126</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNActivePricers</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad8c2bd945c08e5c5bcd8616af949ddc0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPricerPriority</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a494da8f84cd394cbf2923b744ad479ba</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPactivatePricer</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a866b071558016fab02981ed0f0f566c8</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdeactivatePricer</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa7fc05af91ad4efb4ebc434afe0c7067</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConshdlr</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a40bf4175b4b9449262dfd5fd152f34d2</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int sepapriority, int enfopriority, int chckpriority, int sepafreq, int propfreq, int eagerfreq, int maxprerounds, SCIP_Bool delaysepa, SCIP_Bool delayprop, SCIP_Bool delaypresol, SCIP_Bool needscons, SCIP_DECL_CONSHDLRCOPY((*conshdlrcopy)), SCIP_DECL_CONSFREE((*consfree)), SCIP_DECL_CONSINIT((*consinit)), SCIP_DECL_CONSEXIT((*consexit)), SCIP_DECL_CONSINITPRE((*consinitpre)), SCIP_DECL_CONSEXITPRE((*consexitpre)), SCIP_DECL_CONSINITSOL((*consinitsol)), SCIP_DECL_CONSEXITSOL((*consexitsol)), SCIP_DECL_CONSDELETE((*consdelete)), SCIP_DECL_CONSTRANS((*constrans)), SCIP_DECL_CONSINITLP((*consinitlp)), SCIP_DECL_CONSSEPALP((*conssepalp)), SCIP_DECL_CONSSEPASOL((*conssepasol)), SCIP_DECL_CONSENFOLP((*consenfolp)), SCIP_DECL_CONSENFOPS((*consenfops)), SCIP_DECL_CONSCHECK((*conscheck)), SCIP_DECL_CONSPROP((*consprop)), SCIP_DECL_CONSPRESOL((*conspresol)), SCIP_DECL_CONSRESPROP((*consresprop)), SCIP_DECL_CONSLOCK((*conslock)), SCIP_DECL_CONSACTIVE((*consactive)), SCIP_DECL_CONSDEACTIVE((*consdeactive)), SCIP_DECL_CONSENABLE((*consenable)), SCIP_DECL_CONSDISABLE((*consdisable)), SCIP_DECL_CONSPRINT((*consprint)), SCIP_DECL_CONSCOPY((*conscopy)), SCIP_DECL_CONSPARSE((*consparse)), SCIP_CONSHDLRDATA *conshdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONSHDLR *</type>
      <name>SCIPfindConshdlr</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>adad138e3d0ff91c16b93d11e75731eb9</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONSHDLR **</type>
      <name>SCIPgetConshdlrs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae47f44194e8110f7e65e1630242884d8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNConshdlrs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3be289ebb05ff65ba463d6a72de21665</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeConflicthdlr</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aea34c108ef1b1a846af0e5b0e9e16cf6</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, SCIP_DECL_CONFLICTCOPY((*conflictcopy)), SCIP_DECL_CONFLICTFREE((*conflictfree)), SCIP_DECL_CONFLICTINIT((*conflictinit)), SCIP_DECL_CONFLICTEXIT((*conflictexit)), SCIP_DECL_CONFLICTINITSOL((*conflictinitsol)), SCIP_DECL_CONFLICTEXITSOL((*conflictexitsol)), SCIP_DECL_CONFLICTEXEC((*conflictexec)), SCIP_CONFLICTHDLRDATA *conflicthdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONFLICTHDLR *</type>
      <name>SCIPfindConflicthdlr</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a809ecf7415b588b9d073d057c99343ee</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONFLICTHDLR **</type>
      <name>SCIPgetConflicthdlrs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6df6dfa39724da63c9dc955d1ec1e6be</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNConflicthdlrs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa7e194cbede0e996ca08bea37acc62cf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConflicthdlrPriority</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aec576eb568feb5d1688107aa4c9586f8</anchor>
      <arglist>(SCIP *scip, SCIP_CONFLICTHDLR *conflicthdlr, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludePresol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a17450bffd69ed7588d9effda6319a2d6</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int maxrounds, SCIP_Bool delay, SCIP_DECL_PRESOLCOPY((*presolcopy)), SCIP_DECL_PRESOLFREE((*presolfree)), SCIP_DECL_PRESOLINIT((*presolinit)), SCIP_DECL_PRESOLEXIT((*presolexit)), SCIP_DECL_PRESOLINITPRE((*presolinitpre)), SCIP_DECL_PRESOLEXITPRE((*presolexitpre)), SCIP_DECL_PRESOLEXEC((*presolexec)), SCIP_PRESOLDATA *presoldata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRESOL *</type>
      <name>SCIPfindPresol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a392a6f5aeb8bc4ee7a4566858cc5500e</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PRESOL **</type>
      <name>SCIPgetPresols</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0a672e98ce284c1a922be543398e5a79</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPresols</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa79a49272f4ae34b90ceb2d91b9b93fe</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPresolPriority</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9dafa8435e229d73b7b1e1aa131f3396</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeRelax</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a13611bf68d15df7245ae993ac3994154</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int freq, SCIP_DECL_RELAXCOPY((*relaxcopy)), SCIP_DECL_RELAXFREE((*relaxfree)), SCIP_DECL_RELAXINIT((*relaxinit)), SCIP_DECL_RELAXEXIT((*relaxexit)), SCIP_DECL_RELAXINITSOL((*relaxinitsol)), SCIP_DECL_RELAXEXITSOL((*relaxexitsol)), SCIP_DECL_RELAXEXEC((*relaxexec)), SCIP_RELAXDATA *relaxdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RELAX *</type>
      <name>SCIPfindRelax</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aade5c7432d4446054eeb03c58ce88915</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RELAX **</type>
      <name>SCIPgetRelaxs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a06933c29ccbb89e8275189240edb1e1c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNRelaxs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1bdd4521104a0017395cca067a6a0ba8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxPriority</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8a2f8201d8abe0c31b090fea675d3caf</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepa</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aae39c83f65cb1f5eeced4a147d82335a</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int freq, SCIP_Real maxbounddist, SCIP_Bool usessubscip, SCIP_Bool delay, SCIP_DECL_SEPACOPY((*sepacopy)), SCIP_DECL_SEPAFREE((*sepafree)), SCIP_DECL_SEPAINIT((*sepainit)), SCIP_DECL_SEPAEXIT((*sepaexit)), SCIP_DECL_SEPAINITSOL((*sepainitsol)), SCIP_DECL_SEPAEXITSOL((*sepaexitsol)), SCIP_DECL_SEPAEXECLP((*sepaexeclp)), SCIP_DECL_SEPAEXECSOL((*sepaexecsol)), SCIP_SEPADATA *sepadata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SEPA *</type>
      <name>SCIPfindSepa</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac9acfc257cbd5b48348c3e124faf03b2</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SEPA **</type>
      <name>SCIPgetSepas</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae9f1410ae78b2a4cd1c730c47f76f9ff</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNSepas</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a09b59c2b8901d1cde32d3748ac7f2a77</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSepaPriority</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8d6ea123fb44c10e6e37a2626a1a73f1</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeProp</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7b951b6add7cdd7a9d8e312548dbfabe</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int freq, SCIP_Bool delay, SCIP_DECL_PROPCOPY((*propcopy)), SCIP_DECL_PROPFREE((*propfree)), SCIP_DECL_PROPINIT((*propinit)), SCIP_DECL_PROPEXIT((*propexit)), SCIP_DECL_PROPINITSOL((*propinitsol)), SCIP_DECL_PROPEXITSOL((*propexitsol)), SCIP_DECL_PROPEXEC((*propexec)), SCIP_DECL_PROPRESPROP((*propresprop)), SCIP_PROPDATA *propdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PROP *</type>
      <name>SCIPfindProp</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a87ae3339fc365baf0620aed731125342</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PROP **</type>
      <name>SCIPgetProps</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4b6b82051c6b3b5a20e1b996c1dc0803</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNProps</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7879100c363d7d31dc7cb4efd8d0cb99</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPropPriority</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3ba1a41bdeaf7304ba47a1b8a87d1613</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeHeur</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae3b878bb9c0c9337bf53df5aabcb696c</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, char dispchar, int priority, int freq, int freqofs, int maxdepth, unsigned int timingmask, SCIP_Bool usessubscip, SCIP_DECL_HEURCOPY((*heurcopy)), SCIP_DECL_HEURFREE((*heurfree)), SCIP_DECL_HEURINIT((*heurinit)), SCIP_DECL_HEUREXIT((*heurexit)), SCIP_DECL_HEURINITSOL((*heurinitsol)), SCIP_DECL_HEUREXITSOL((*heurexitsol)), SCIP_DECL_HEUREXEC((*heurexec)), SCIP_HEURDATA *heurdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HEUR *</type>
      <name>SCIPfindHeur</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6c65034d0af7042da92e552f71bd043a</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HEUR **</type>
      <name>SCIPgetHeurs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4f5073b16c2470e3fb5d6610084f0002</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNHeurs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7795002b03c7490648ee3e151d4d63da</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetHeurPriority</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a07dfe26f10f38217feef352d98b386c7</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeEventhdlr</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a36b7b33964c406f53edea2502caf1d35</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, SCIP_DECL_EVENTCOPY((*eventcopy)), SCIP_DECL_EVENTFREE((*eventfree)), SCIP_DECL_EVENTINIT((*eventinit)), SCIP_DECL_EVENTEXIT((*eventexit)), SCIP_DECL_EVENTINITSOL((*eventinitsol)), SCIP_DECL_EVENTEXITSOL((*eventexitsol)), SCIP_DECL_EVENTDELETE((*eventdelete)), SCIP_DECL_EVENTEXEC((*eventexec)), SCIP_EVENTHDLRDATA *eventhdlrdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EVENTHDLR *</type>
      <name>SCIPfindEventhdlr</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a934b7ee85fb94e1086f41859282660d3</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_EVENTHDLR **</type>
      <name>SCIPgetEventhdlrs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac6906fba3863bdd322ec6fbd7280b627</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNEventhdlrs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aca8d7609b2fc33de2d5542cccd2eeb19</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNodesel</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad99b44a10a59bc0e7fafc003d7fc090d</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int stdpriority, int memsavepriority, SCIP_DECL_NODESELCOPY((*nodeselcopy)), SCIP_DECL_NODESELFREE((*nodeselfree)), SCIP_DECL_NODESELINIT((*nodeselinit)), SCIP_DECL_NODESELEXIT((*nodeselexit)), SCIP_DECL_NODESELINITSOL((*nodeselinitsol)), SCIP_DECL_NODESELEXITSOL((*nodeselexitsol)), SCIP_DECL_NODESELSELECT((*nodeselselect)), SCIP_DECL_NODESELCOMP((*nodeselcomp)), SCIP_NODESELDATA *nodeseldata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODESEL *</type>
      <name>SCIPfindNodesel</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7fb676dfa03a6f660888f1d29db2c354</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODESEL **</type>
      <name>SCIPgetNodesels</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab3670034787cfbddac86f7ead0a3b5c2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNNodesels</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab251ed96ee18630298d044a97e26a4c3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNodeselStdPriority</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a240493a26ac21386396d1ba4a5c9b3ee</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNodeselMemsavePriority</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad2d0f3ced90ade604cb51bb7deb4f3a8</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODESEL *</type>
      <name>SCIPgetNodesel</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5bb5e015af66b528895e7d671e18877f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeBranchrule</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abc1584df8f91652ee0e2dfc58e87c285</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int maxdepth, SCIP_Real maxbounddist, SCIP_DECL_BRANCHCOPY((*branchcopy)), SCIP_DECL_BRANCHFREE((*branchfree)), SCIP_DECL_BRANCHINIT((*branchinit)), SCIP_DECL_BRANCHEXIT((*branchexit)), SCIP_DECL_BRANCHINITSOL((*branchinitsol)), SCIP_DECL_BRANCHEXITSOL((*branchexitsol)), SCIP_DECL_BRANCHEXECLP((*branchexeclp)), SCIP_DECL_BRANCHEXECEXT((*branchexecext)), SCIP_DECL_BRANCHEXECPS((*branchexecps)), SCIP_BRANCHRULEDATA *branchruledata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BRANCHRULE *</type>
      <name>SCIPfindBranchrule</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5e3e59aad82224804d26fb84925efcb3</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_BRANCHRULE **</type>
      <name>SCIPgetBranchrules</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2c916aabbaccad48d5d51995ffc1564e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNBranchrules</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>adf8c5a3d21831c9dc0eb46559590267d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchrulePriority</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab715344f533d6066a8c79064acd60aee</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchruleMaxdepth</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae5dcaf1cd845d98239be6d455139c315</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, int maxdepth)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBranchruleMaxbounddist</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad69f37ff3ea128715b71464e2e572564</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, SCIP_Real maxbounddist)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeDisp</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa1c30dc6bab73c41e6718f49121932be</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, const char *header, SCIP_DISPSTATUS dispstatus, SCIP_DECL_DISPCOPY((*dispcopy)), SCIP_DECL_DISPFREE((*dispfree)), SCIP_DECL_DISPINIT((*dispinit)), SCIP_DECL_DISPEXIT((*dispexit)), SCIP_DECL_DISPINITSOL((*dispinitsol)), SCIP_DECL_DISPEXITSOL((*dispexitsol)), SCIP_DECL_DISPOUTPUT((*dispoutput)), SCIP_DISPDATA *dispdata, int width, int priority, int position, SCIP_Bool stripline)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DISP *</type>
      <name>SCIPfindDisp</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aafc23cb8c281b7118414b10b2963005e</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DISP **</type>
      <name>SCIPgetDisps</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3a74a293bb852b65634edfff5b9fb805</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNDisps</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a43f06cbf08f1f241940fd7727174ddcb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPautoselectDisps</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa50fd7e41e4d065f2fc35445e6260109</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeNlpi</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae3494767e3556b98fe34585f68d23a24</anchor>
      <arglist>(SCIP *scip, SCIP_NLPI *nlpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLPI *</type>
      <name>SCIPfindNlpi</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9656beff1923e7132c185efee1fd34fc</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLPI **</type>
      <name>SCIPgetNlpis</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8be6e127a2ef2ca9c5dbf5fd1856248b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNNlpis</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af17164e56637001da868f8874fac987d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNlpiPriority</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5d0234cb28dcf3f1cbd2265cfdd134f2</anchor>
      <arglist>(SCIP *scip, SCIP_NLPI *nlpi, int priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeExternalCodeInformation</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a22a72b9ce4ef0e6cd080ef1a160af00f</anchor>
      <arglist>(SCIP *scip, const char *name, const char *description)</arglist>
    </member>
    <member kind="function">
      <type>char *const</type>
      <name>SCIPgetExternalCodeNames</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aabb159a2336830a1ae78bf408bb409cd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>char *const</type>
      <name>SCIPgetExternalCodeDescriptions</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa26fd33769e73528b4a1fd1731b3ed2b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNExternalCodes</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4e6693d630645d39d34d84c0b882cc9c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprintExternalCodes</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa7d584a114aa5e22c44266e9a6f2554a</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeDialog</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2569322285b7ad3455ea4164fb81b286</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG **dialog, SCIP_DECL_DIALOGCOPY((*dialogcopy)), SCIP_DECL_DIALOGEXEC((*dialogexec)), SCIP_DECL_DIALOGDESC((*dialogdesc)), SCIP_DECL_DIALOGFREE((*dialogfree)), const char *name, const char *desc, SCIP_Bool issubmenu, SCIP_DIALOGDATA *dialogdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPexistsDialog</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a117acfa90723a698ff3af446a944c9b4</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcaptureDialog</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4e916caa40d6577f60aeb43a1ea0f363</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreleaseDialog</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0f3481d904ab9daaa5eba60086d99d90</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG **dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRootDialog</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7f76c206229ec13d077d8d9e9651cc4d</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_DIALOG *</type>
      <name>SCIPgetRootDialog</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab285c99d3a00215a9d0e690c03c2b8a1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddDialogEntry</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3ca45fcec64280040a7d357a07dac3a0</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG *dialog, SCIP_DIALOG *subdialog)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddDialogInputLine</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>adce214fd73c717bb37fbb256ff6e635b</anchor>
      <arglist>(SCIP *scip, const char *inputline)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddDialogHistoryLine</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac46ae5836821975293123e671d5c8d6c</anchor>
      <arglist>(SCIP *scip, const char *inputline)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartInteraction</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa7109df053dd40a20afa6991fb7866ff</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateProb</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae3a6c0d98f4b395ae14374565a0a54df</anchor>
      <arglist>(SCIP *scip, const char *name, SCIP_DECL_PROBDELORIG((*probdelorig)), SCIP_DECL_PROBTRANS((*probtrans)), SCIP_DECL_PROBDELTRANS((*probdeltrans)), SCIP_DECL_PROBINITSOL((*probinitsol)), SCIP_DECL_PROBEXITSOL((*probexitsol)), SCIP_DECL_PROBCOPY((*probcopy)), SCIP_PROBDATA *probdata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadProb</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af86148a97b0123d44562de425346a4c7</anchor>
      <arglist>(SCIP *scip, const char *filename, const char *extension)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteOrigProblem</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2f6d67a1ccef7a6363e6d6a56523c0d0</anchor>
      <arglist>(SCIP *scip, const char *filename, const char *extension, SCIP_Bool genericnames)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteTransProblem</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ada41a57fc5a464ad565763d24e588d3a</anchor>
      <arglist>(SCIP *scip, const char *filename, const char *extension, SCIP_Bool genericnames)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeProb</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9c7bee6cab2932a89e63bfb62053d72b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpermuteProb</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a15692dc3b258fc48103f8910d8cd6980</anchor>
      <arglist>(SCIP *scip, unsigned int randseed, SCIP_Bool permuteconss, SCIP_Bool permutebinvars, SCIP_Bool permuteintvars, SCIP_Bool permuteimplvars, SCIP_Bool permutecontvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_PROBDATA *</type>
      <name>SCIPgetProbData</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa49ecadcab6a4085933352f7a7e0750e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetProbData</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae3e190835aa7114e9557f3c44d6c0fbe</anchor>
      <arglist>(SCIP *scip, SCIP_PROBDATA *probdata)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>SCIPgetProbName</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a88671b657291dfdf5c28b28090271b53</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetProbName</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3d2b26268637b29981a0bd73bd3f9d11</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_OBJSENSE</type>
      <name>SCIPgetObjsense</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad7e1b206b58e4cc72297225693f57720</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetObjsense</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>acaafd4da695b9da0944066c0a2e842f0</anchor>
      <arglist>(SCIP *scip, SCIP_OBJSENSE objsense)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddObjoffset</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a82e04ca49cec47883fea80effd1d0431</anchor>
      <arglist>(SCIP *scip, SCIP_Real addval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetOrigObjoffset</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a59c91333c2b235724c903f3950e185d6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetOrigObjscale</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2b49a4faeeac43dc32fa78de755b3937</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetTransObjoffset</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4883711f4d331a693d540a8bcd59438a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetTransObjscale</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aef2ecea696400cc683703572bb2f2e1d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetObjlimit</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3fd90b931b38d2d8f344114babc2a67e</anchor>
      <arglist>(SCIP *scip, SCIP_Real objlimit)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetObjlimit</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8260017eb459df02bbc7a906ebe3ed32</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetObjIntegral</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a25eb39191c5832ce2b39d3a2895cec7d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisObjIntegral</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af0bb84247a426afaee84ec8ec55bb3b0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetObjNorm</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa39982e4dd7ded03cc2c931c23b163c1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1274092a607fc948803c8731f3dc26b4</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddPricedVar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2a4364fac6acb390e82d163d78dd939b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real score)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelVar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a47120c76351229a5bf5c86b3cdd2c94d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarsData</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a56aec2d4153071f0ede755f2f2892e25</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***vars, int *nvars, int *nbinvars, int *nintvars, int *nimplvars, int *ncontvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a990fb4f42228e44ec54d16855eac5070</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a86c71c9c58dac31be892721f1b9819b7</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNBinVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aeb541d48cb8b33adb07c721c15250b8d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNIntVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1d71a70818b9eeb4e4b9fe0a554d33a8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNImplVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a272f3ceba4a29b4f222905cbfa7cddaf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNContVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a28da7a0e0f57edb5cac29d448b7a5e4f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetFixedVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a82001d53885377c57d0f775ec8c55fa6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNFixedVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>adf2d390d059230dcc067138a89c6aec8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetOrigVarsData</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a26493edb8b80908a3c46ed8d66e335e9</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***vars, int *nvars, int *nbinvars, int *nintvars, int *nimplvars, int *ncontvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR **</type>
      <name>SCIPgetOrigVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abec020b8686cac2812d1028deece85f9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aac6e0dce5ed1e58242b015a469b7ce16</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigBinVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5627592739228c27bc44505e9926c79c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigIntVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6c4a087b20095944017d1fceb8823d37</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigImplVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a755ff7825cba845a96da5ffb016ca2f1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigContVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a61a8e5bd255dfb692bd7e0cd0ba569a2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetSolVarsData</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a182c44ef45bd12a2f4f8ae4b7ad53dd8</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_VAR ***vars, int *nvars, int *nbinvars, int *nintvars, int *nimplvars, int *ncontvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_VAR *</type>
      <name>SCIPfindVar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a20111cfbd93f5dc4c98108110ea856eb</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPallVarsInProb</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa67159c654dad0d66f0cf4a03c167e9c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a90f174ec35b95e762a2d9d09bf9b3d3a</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9aa8d02a007554a57d0277c9a2ddae8e</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS *</type>
      <name>SCIPfindCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3d31b66b9dc4523ba7d9942bbd99480c</anchor>
      <arglist>(SCIP *scip, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNUpgrConss</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8464874b5ad3272145264c21e37ccc17</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNConss</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9abdfcf450cb861852f342e4265644c1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS **</type>
      <name>SCIPgetConss</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1a4423f74fedb75f4c3b830653146aac</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNOrigConss</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a585df643d1a638a9669e374b2c1fe1a6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CONS **</type>
      <name>SCIPgetOrigConss</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>adcffd20ece2ba0d2f895acaa593e2513</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConsNode</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5fcf2b01b3850c5220113b2056b28152</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_CONS *cons, SCIP_NODE *validnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConsLocal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aeca8a3bd1ae7520ec26740fb100cfdea</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_NODE *validnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelConsNode</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2b6b0c525ffb2fd47da3dea12d8f64ab</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelConsLocal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4ece982fbd8fd41e86aea7df84be304f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLocalOrigEstimate</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3119f839770f71a66948db469a044175</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLocalTransEstimate</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af835eb011977a39e5bc8721c3bc83d3d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLocalDualbound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aebd11b66e4b6d9a14beee63f8bc69902</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLocalLowerbound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa07bfcab1e81fe74c27bea0ea3dcfe5d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetNodeDualbound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a135b276b666f7283ce8a47a72e8698e5</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetNodeLowerbound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af365112efafb8219d42ee2ab205be2e1</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateLocalDualbound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa911fe60542e7c0b508b34043a22e22d</anchor>
      <arglist>(SCIP *scip, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateLocalLowerbound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0a5dd08e62fcdcf3fc7e3386b39c6230</anchor>
      <arglist>(SCIP *scip, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateNodeDualbound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae991e5646cb4436977ecb2e7c2aecb81</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateNodeLowerbound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a03aa7633fb3c060f7cbcc7529e51d5fc</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgChildPrio</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ada44d4f2570b32e08905114615fb976b</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *child, SCIP_Real priority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtransformProb</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a04a0271b46551b48cbcee3eff245ca94</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpresolve</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5c4fd2a3c79f2b14a746d5b3e4cccc8b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolve</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ada79e0a57f2f33cf847831b66f70afec</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeSolve</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abd364f669ccdd7eba0a76c05c4320cbd</anchor>
      <arglist>(SCIP *scip, SCIP_Bool restart)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeTransform</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9c2399c2334680cd8ad14a1a5ac31622</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinterruptSolve</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab207a6210ea634cca6fae72dde4d9a91</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrestartSolve</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a08e665c374c599f96c4968ce8cf108ba</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisInRestart</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac64bb7328f10a53cca876473fed57495</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateVar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aadcc57e6efe08c07a23643d0e7fb3151</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **var, const char *name, SCIP_Real lb, SCIP_Real ub, SCIP_Real obj, SCIP_VARTYPE vartype, SCIP_Bool initial, SCIP_Bool removable, SCIP_DECL_VARDELORIG((*vardelorig)), SCIP_DECL_VARTRANS((*vartrans)), SCIP_DECL_VARDELTRANS((*vardeltrans)), SCIP_DECL_VARCOPY((*varcopy)), SCIP_VARDATA *vardata)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteVarName</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3bfa5d963bf67fe07256b7f69e569b5a</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteVarsList</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a03bd0e68aecfcf884adbd1468aacae7a</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_VAR **vars, int nvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteVarsLinearsum</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af9cb69f06f38c1d6d269a66fc6f2e10a</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_VAR **vars, SCIP_Real *vals, int nvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparseVar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a96a24250b3fea72291cbf47f27e74743</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **var, const char *str, SCIP_Bool initial, SCIP_Bool removable, SCIP_DECL_VARCOPY((*varcopy)), SCIP_DECL_VARDELORIG((*vardelorig)), SCIP_DECL_VARTRANS((*vartrans)), SCIP_DECL_VARDELTRANS((*vardeltrans)), SCIP_VARDATA *vardata, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparseVarName</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1e5825d3af5683654c8cc6aa577a7f04</anchor>
      <arglist>(SCIP *scip, const char *str, SCIP_VAR **var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparseVarsList</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a485a3edf8a5bcfdabcd14028a1d811d9</anchor>
      <arglist>(SCIP *scip, const char *str, SCIP_VAR **vars, int *nvars, int varssize, int *requiredsize, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcaptureVar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae5c349629db606a8f1f466a5fd8b002f</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreleaseVar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a738c6f77f0dcbe17cf8faa97c7573585</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtransformVar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aae5d1f2ae5de0dc9d0b7600e488ca5cd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR **transvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtransformVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a68533d7aeaf9c6baadcbd3c12a4e9cfd</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, SCIP_VAR **transvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetTransformedVar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae01de0744cef850ee4971ca3f53aa062</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR **transvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetTransformedVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a29c5500e7db8b5b0dec01232a2198038</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, SCIP_VAR **transvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNegatedVar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a94ec8a6bca8e6e621751b4257bf0d4c1</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR **negvar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetBinvarRepresentative</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac9e77c3155c3beb051205d666c1e57cd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR **repvar, SCIP_Bool *negated)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPflattenVarAggregationGraph</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a924498dfffc795b176d114d757797d1a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetProbvarLinearSum</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0509a5028381b92e3e40cde775db7ac9</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **vars, SCIP_Real *scalars, int *nvars, int varssize, SCIP_Real *constant, int *requiredsize, SCIP_Bool mergemultiples)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarRedcost</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aaf433501c90408634e7311e96649f5b4</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarFarkasCoef</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5efe1f2786c99fae016a6bad651dae80</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a94bba755d3a2b9204fe8e784d1e843ad</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarSols</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac682731957512141f35d0caa5e89b7ef</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearRelaxSolVals</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a766a73f354ab0072d886d206d2adeba6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxSolVal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aeafc74bc25930a606e451faabe6a63bd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxSolVals</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a624500e108054c71b6aaebd2caad1f0a</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRelaxSolValsSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af1fa8f6afa3d316a32542061c0263e6e</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelaxSolValid</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8bcd6356c607920d6ca508d359923e00</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmarkRelaxSolValid</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a89e124b459807c4f5ac974886a7fb7a1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmarkRelaxSolInvalid</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab2f6c3ae2f4d40de14bcb552ef869043</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRelaxSolVal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a84b391b9cb0e80c34ddee0ed120df03c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRelaxSolObj</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a022bd27b74f4ddc92a3d540df81d57c6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartStrongbranch</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a695a5dce1b5342ed6a32eb92b7340d63</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPendStrongbranch</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2882f2fb7c2c240a7163b5bfc23677e5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarStrongbranchFrac</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af3aba48ec612d657392b69fedcb426d3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, SCIP_Bool *downinf, SCIP_Bool *upinf, SCIP_Bool *downconflict, SCIP_Bool *upconflict, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarStrongbranchInt</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6489cf6b682d2ce1205aec6f213dca4c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, SCIP_Bool *downinf, SCIP_Bool *upinf, SCIP_Bool *downconflict, SCIP_Bool *upconflict, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarsStrongbranchesFrac</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7c2f59c88cdffcd3b1dbe416b6b9e552</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **vars, int nvars, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, SCIP_Bool *downinf, SCIP_Bool *upinf, SCIP_Bool *downconflict, SCIP_Bool *upconflict, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarsStrongbranchesInt</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab5212411fe3f9ac9307f7fc78a30fa54</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **vars, int nvars, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, SCIP_Bool *downinf, SCIP_Bool *upinf, SCIP_Bool *downconflict, SCIP_Bool *upconflict, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarStrongbranchLast</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad4a941c5912e57c70b39ba4939e07a4d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, SCIP_Real *solval, SCIP_Real *lpobjval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetVarStrongbranchNode</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a66be6ab86b510c7a0a9d61f94c58fa7b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetVarStrongbranchLPAge</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a646b7a6277666ce6bf35da35bcbf4e04</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetVarNStrongbranchs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad27bb7229c0670f9f4ad64bf95508d4a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarLocks</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0a00fbe33ee7405aedb341f606d35417</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int nlocksdown, int nlocksup)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlockVarCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a11a8c70148f7c0b29daaee46d99581dc</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_CONS *cons, SCIP_Bool lockdown, SCIP_Bool lockup)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPunlockVarCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5d2b963f461728ba6d9931dceeaa0673</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_CONS *cons, SCIP_Bool lockdown, SCIP_Bool lockup)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarObj</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac8033a7019d8bd6f9e6889cd2edc4463</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newobj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarObj</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>afc4b73416ee1c9aa2d891ae24e556eac</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real addobj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPadjustedVarLb</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a868dca51fa585a23aa4dfe4cf949d6af</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real lb)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPadjustedVarUb</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a74df87f5fe89f8a2ffbc308f2208c192</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLb</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a28fcf0e964533760e3822fed102d57bd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUb</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a467948c18929421bcc14c1c009f58c56</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLbNode</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abf19e0473a2fe31118fad33b48ba45ea</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUbNode</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a47046aeb6c243f2e1399c9bccd51c174</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLbGlobal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7a1f905c4d0358ff60f6e97e8d3bd73c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUbGlobal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa159d42658a5672b655e88e08b48fbcb</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLbLazy</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a64ba33cedd7cd556a5ada18f752a2c6d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real lazylb)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUbLazy</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac0d20a8f3ae90d45d7ca0eadb7006d4a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real lazyub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtightenVarLb</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a060edd63613b646299b7a7f36f751e3d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtightenVarUb</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4dc171f23cee0def640b29627250850d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferVarLbCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab3dde7eba569deda9dddfe11720f9094</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_CONS *infercons, int inferinfo, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferVarUbCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a413e36fae9f597c1b0a8bc25f32eb4e2</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_CONS *infercons, int inferinfo, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferBinvarCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac2f992010162d09cfd2cd446fe069730</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Bool fixedval, SCIP_CONS *infercons, int inferinfo, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferVarLbProp</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>afa85d91b170a432767e0b864842497ec</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_PROP *inferprop, int inferinfo, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferVarUbProp</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a203ddedb24fe38ea3a44c599a5c8c58a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_PROP *inferprop, int inferinfo, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinferBinvarProp</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aedb1fa111c6a4c3864943153f217edfd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Bool fixedval, SCIP_PROP *inferprop, int inferinfo, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtightenVarLbGlobal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af8582c5dac4810817cd41977f4f66562</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtightenVarUbGlobal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a220d36f83ba06abc45f3aae95c7e9a64</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound, SCIP_Bool force, SCIP_Bool *infeasible, SCIP_Bool *tightened)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarClosestVlb</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8c7c56f0cc70d7527c5789017a1a9fcc</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_SOL *sol, SCIP_Real *closestvlb, int *closestvlbidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetVarClosestVub</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a601084882554619feafcab28ac40bacd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_SOL *sol, SCIP_Real *closestvub, int *closestvubidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarVlb</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a59fa8edc99f1bc99015da01c67a87d88</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR *vlbvar, SCIP_Real vlbcoef, SCIP_Real vlbconstant, SCIP_Bool *infeasible, int *nbdchgs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarVub</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a52dd692311ad45a46181771f55c216e0</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VAR *vubvar, SCIP_Real vubcoef, SCIP_Real vubconstant, SCIP_Bool *infeasible, int *nbdchgs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarImplication</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a991b0a366cb4931960f8bfe038d5c3eb</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Bool varfixing, SCIP_VAR *implvar, SCIP_BOUNDTYPE impltype, SCIP_Real implbound, SCIP_Bool *infeasible, int *nbdchgs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddClique</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a861d802f88cbd8bac8238a93302e782b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR **vars, SCIP_Bool *values, int nvars, SCIP_Bool *infeasible, int *nbdchgs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcalcCliquePartition</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a20a4c05f87a3b9659406cd03b39510a2</anchor>
      <arglist>(SCIP *const scip, SCIP_VAR **const vars, int const nvars, int *const cliquepartition, int *const ncliques)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcalcNegatedCliquePartition</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2f2e7ca11149486161d9800e8e6931b8</anchor>
      <arglist>(SCIP *const scip, SCIP_VAR **const vars, int const nvars, int *const cliquepartition, int *const ncliques)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNCliques</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa85f51072ffcfd6f00dfbaa990d6eefa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CLIQUE **</type>
      <name>SCIPgetCliques</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a807a0465b410d8b327f5caab084af6fa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarBranchFactor</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af616016202a9ea9eb28f6d3d8da555ef</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real branchfactor)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPscaleVarBranchFactor</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a26c7b3dd464874b33c4b073d1ed137a5</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real scale)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarBranchFactor</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a70639c80f0a6fcee486265a6e83f99b3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real addfactor)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarBranchPriority</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5a932c46db33e505a802313a4b1d973f</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int branchpriority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateVarBranchPriority</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a36c61578436878725fef2908edc9bfa4</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int branchpriority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarBranchPriority</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aae296c43c772d38e1abee9685cfea125</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int addpriority)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarBranchDirection</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a52c61ed29f62e26268ff43d4918618c3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR branchdirection)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarType</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a58cf52fded98dc4402de49218bf7f8f6</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_VARTYPE vartype)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfixVar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab29ea185d867f9878e688fec44f2536f</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real fixedval, SCIP_Bool *infeasible, SCIP_Bool *fixed)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaggregateVars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a411f21f9c5bba17aecdb029a870c48ff</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *varx, SCIP_VAR *vary, SCIP_Real scalarx, SCIP_Real scalary, SCIP_Real rhs, SCIP_Bool *infeasible, SCIP_Bool *redundant, SCIP_Bool *aggregated)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmultiaggregateVar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6c9e8818ee3ce60386b056b4de7a9455</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int naggvars, SCIP_VAR **aggvars, SCIP_Real *scalars, SCIP_Real constant, SCIP_Bool *infeasible, SCIP_Bool *aggregated)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPdoNotMultaggrVar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3d26e5140edce87471df4583787d25aa</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmarkDoNotMultaggrVar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab1a43ef481f9ab4379e543f413142f37</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPupdateVarPseudocost</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa7b9a8d8fed4a503aad1d81ac0525c43</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real solvaldelta, SCIP_Real objdelta, SCIP_Real weight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostVal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7f6345436bbbcb545ef3312a1649ab3e</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real solvaldelta)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostValCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa6fe5d09216dbdd0a6c6e9ddcabf208e</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real solvaldelta)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocost</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3e62f81f45a4652311ae0f43268ee3ed</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2f8c4d99d9fa26627b54f0d26c9e2dad</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostCount</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2a753fe2a2c4529b6e1f226c358652b1</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostCountCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a253ca440bedc3e8436c52d4737d6df95</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostScore</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae64ee113c092b13220b33701256e881b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real solval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarPseudocostScoreCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a96d739af71b09479a72084e07d0038f1</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real solval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarVSIDS</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad54f9e61ad6762d2607555491c21a6af</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarVSIDSCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad6613826f27b955c3163ab6fd90a8995</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarConflictScore</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abe818b6232abbe608946efe099a55a76</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarConflictScoreCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae0932bbd8dea9fd1ec946e0702190e7e</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarConflictlengthScore</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a82d18083d6700612251b005969ef88c4</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarConflictlengthScoreCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad5d7e3885b7ff149b63f867332e3b5b0</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgConflictlength</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a38ab0f38326dbf42abfd0caca163fd7c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgConflictlengthCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af37df16399615f364f1ae99f5323ff86</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferences</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aeaffa3202880cdcc2b95b90ee94c9f1a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferencesCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a481c258e252b20e140c16a95aa853f2d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferenceScore</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a25d21f0d3646eefb0705012b82d6e471</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferenceScoreCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a22abc8f5ea3edd8b800950ffecfcc345</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinitVarBranchStats</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5e4bd54ff9aebd988e027dd20b71a941</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real downpscost, SCIP_Real uppscost, SCIP_Real downconf, SCIP_Real upconf, SCIP_Real downconflen, SCIP_Real upconflen, SCIP_Real downinfer, SCIP_Real upinfer, SCIP_Real downcutoff, SCIP_Real upcutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgCutoffs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8718b800b6189cd2a8d16b0fe0666e25</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgCutoffsCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a60f05c953a62737df3bd81d5ba8f348b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgCutoffScore</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abea19804750bde393ea63191371057c5</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgCutoffScoreCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3f917fc055dfaa23f1206a1d7ae70bf6</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferenceCutoffScore</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aca6c1af251f11ed89882a95b6449fe01</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real cutoffweight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarAvgInferenceCutoffScoreCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab38da7dfd620375996e9626b9aef3d33</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real cutoffweight)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintVar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abe853cebc32b6448e3acdeba0db2c2ba</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPinitConflictAnalysis</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5bd55a3aecfe869a6aa6b0cbf94c7c30</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConflictLb</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a00bb542034657c5e850779556d033de3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConflictUb</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2136d87b957b9ca7bf845c3f1a92bd54</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BDCHGIDX *bdchgidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConflictBd</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a758d29b6760cf072694ef6868db6d954</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_BOUNDTYPE boundtype, SCIP_BDCHGIDX *bdchgidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConflictBinvar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>acd62edc8da6ffb9dc9ba7ae721a798cf</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPanalyzeConflict</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5d2a29ad1600fff8965339fc77e4c5c1</anchor>
      <arglist>(SCIP *scip, int validdepth, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPanalyzeConflictCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad1edb437a787afb03807e8c205f5f702</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8d771b778ea2599827e84d01c0aceaf2</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_CONSHDLR *conshdlr, SCIP_CONSDATA *consdata, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPparseCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae08b5c83d5d7f09cfe05eaafcbae4498</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *str, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcaptureCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af2c901adf9df145228b0201c1f3014aa</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreleaseCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae7055a40bc1c895c4acb118bcb8de4de</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsInitial</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a767d273ef318836ef77decd4b02b5321</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool initial)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsSeparated</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a51499b9a87befa968ffb99aaa0546f8b</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool separate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsEnforced</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a777b82d3a8bf0448381ecdaece613e15</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool enforce)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsChecked</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aef0cc53f1f5e27c65ff99fa0801ec16a</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool check)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsPropagated</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae814f28bdb0d9ee9b09f805fb726c3f8</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool propagate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsLocal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abce093a878ce0d23e623fe192612c36e</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool local)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsDynamic</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6f930e0991172fed4c158741aebcc24c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool dynamic)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsRemovable</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab8cbcd48267c18fa3be668fa4d2f012f</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetConsStickingAtNode</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3b45642b5e2c03640b45bacaf12690ae</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Bool stickingatnode)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtransformCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae8ff27f22c89e978e52abcb22575c1a9</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_CONS **transcons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtransformConss</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4ad44c3ffedd1b91095521e27bea47e1</anchor>
      <arglist>(SCIP *scip, int nconss, SCIP_CONS **conss, SCIP_CONS **transconss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetTransformedCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac783997fa88d9b38b4bb7cfc0c101e95</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_CONS **transcons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetTransformedConss</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a11bfa7463e407dab949f3ac77e2e051b</anchor>
      <arglist>(SCIP *scip, int nconss, SCIP_CONS **conss, SCIP_CONS **transconss)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConsAge</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>adfa594f26adbfb32c7a84bc6ce54febf</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_Real deltaage)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincConsAge</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af39d9421a898c74956b052a66894b221</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPresetConsAge</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab10a47ebc2d63f6e70871d916e9b6548</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPenableCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a297c0150613e1d2744bd1ed0d7c4beb6</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdisableCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9b5344874bd5b0a1b710c1890a4d59a1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPenableConsSeparation</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8d28170a37433a9a038f0c8ecd09ef33</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdisableConsSeparation</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0957013bf161486c4d40716967f51100</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPenableConsPropagation</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4b10aa132be56937a450629b47741ff1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdisableConsPropagation</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ade149b54b701d267408f99bb60b639e1</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddConsLocks</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac2a3a1a932df4bc25580dd44095ab4ae</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, int nlockspos, int nlocksneg)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a121549cffb357a8f9677fb10ffca5a4c</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, SCIP_SOL *sol, SCIP_Bool checkintegrality, SCIP_Bool checklprows, SCIP_Bool printreason, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintCons</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4709d1eb7cde28185dfc231028dfced9</anchor>
      <arglist>(SCIP *scip, SCIP_CONS *cons, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhasCurrentNodeLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a02a3a55b60591b9d6eeda076b1897ddb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLPConstructed</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a32d9de0e4eca8657e393fb0b3f7f28ac</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPconstructLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a19a1cee7756e1634ee2bed27b27db61f</anchor>
      <arglist>(SCIP *scip, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPflushLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a026f97fc433a5be0ceecce03e875eea3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_LPSOLSTAT</type>
      <name>SCIPgetLPSolstat</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a945a2147af32e9893f5a434516e12b0f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLPRelax</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a24d0f7c9072bd1d0403896d73f8c0ca5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPObjval</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab1a9445b8d8ec0be5e1880411803f3a0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPColumnObjval</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7135587f761b225c04c2c9e8f3ec38bc</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPLooseObjval</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0f564d46fb90cd64483dbd68b7e65057</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetPseudoObjval</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5459bf89fdb0084e2053944806327ed2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRootLPRelax</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aff99bfac5e4bdf41b5d9d8eb39b4db73</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPRootObjval</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa08b252170415305b44f67f70985b57d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPRootColumnObjval</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab1a20752259c87ff47127c369d747e5f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLPRootLooseObjval</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad799c809647ce631d888f852f1fdf437</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPColsData</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a467ad5849b0d39db009c3badad756d69</anchor>
      <arglist>(SCIP *scip, SCIP_COL ***cols, int *ncols)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_COL **</type>
      <name>SCIPgetLPCols</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a17aa956266d8f1eb61d0d339a4fd4568</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLPCols</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac09084135572e531028e3e942ee52bde</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPRowsData</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a488366019cc364f8cb723f7a3e6f3c7b</anchor>
      <arglist>(SCIP *scip, SCIP_ROW ***rows, int *nrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW **</type>
      <name>SCIPgetLPRows</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa76344fd1742a554ece3442accf18295</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLPRows</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7582fa81662a80545d21d32dc62286dc</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPallColsInLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aab701549b059bf7cdd8be07959c11fa7</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLPSolBasic</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ace392f53d4615f0d4baaf49fc46d1c05</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBasisInd</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a34284f0925e5b7b90e256a8cb7faaf20</anchor>
      <arglist>(SCIP *scip, int *basisind)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBInvRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a43173ae0f870d3970f9d3829f3e699f4</anchor>
      <arglist>(SCIP *scip, int r, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBInvCol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af867bda680fb097018e831d0b2b3eaef</anchor>
      <arglist>(SCIP *scip, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBInvARow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0e7d7e87304db8c49fb5ea9317b6c433</anchor>
      <arglist>(SCIP *scip, int r, SCIP_Real *binvrow, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBInvACol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac973e7b26de136d59ccfff53da3ddb40</anchor>
      <arglist>(SCIP *scip, int c, SCIP_Real *coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsumLPRows</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a84cd8c42e3ae3f497e0328f226faca3b</anchor>
      <arglist>(SCIP *scip, SCIP_Real *weights, SCIP_REALARRAY *sumcoef, SCIP_Real *sumlhs, SCIP_Real *sumrhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcalcMIR</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a41e215477edaa89ca72c4ccfdbd5908a</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Real boundswitch, SCIP_Bool usevbds, SCIP_Bool allowlocal, SCIP_Bool fixintegralrhs, int *boundsfortrans, SCIP_BOUNDTYPE *boundtypesfortrans, int maxmksetcoefs, SCIP_Real maxweightrange, SCIP_Real minfrac, SCIP_Real maxfrac, SCIP_Real *weights, SCIP_Real scale, SCIP_Real *mksetcoefs, SCIP_Bool *mksetcoefsvalid, SCIP_Real *mircoef, SCIP_Real *mirrhs, SCIP_Real *cutactivity, SCIP_Bool *success, SCIP_Bool *cutislocal)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcalcStrongCG</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a95392323ca7198506debcea5073b0728</anchor>
      <arglist>(SCIP *scip, SCIP_Real boundswitch, SCIP_Bool usevbds, SCIP_Bool allowlocal, int maxmksetcoefs, SCIP_Real maxweightrange, SCIP_Real minfrac, SCIP_Real maxfrac, SCIP_Real *weights, SCIP_Real scale, SCIP_Real *mircoef, SCIP_Real *mirrhs, SCIP_Real *cutactivity, SCIP_Bool *success, SCIP_Bool *cutislocal)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreadSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4312fff0495bec0484a8fd9cd60cae8b</anchor>
      <arglist>(SCIP *scip, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6b306059929a7554f7984efa221e3034</anchor>
      <arglist>(SCIP *scip, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteMIP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2f0e0443716888f7997515058bb9fc60</anchor>
      <arglist>(SCIP *scip, const char *fname, SCIP_Bool genericnames, SCIP_Bool origobj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPI</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a84f176a95066f42c46a4a9f0538cc756</anchor>
      <arglist>(SCIP *scip, SCIP_LPI **lpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetColRedcost</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a15b7c94bbf02123c6f6ab57d52cf63a7</anchor>
      <arglist>(SCIP *scip, SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetColFarkasCoef</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac418cae8f6b4d2e6bba6bc0335477ecb</anchor>
      <arglist>(SCIP *scip, SCIP_COL *col)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0f3f5d2982142da67c59fb8de0ccbd9c</anchor>
      <arglist>(SCIP *scip, SCIP_ROW **row, const char *name, int len, SCIP_COL **cols, SCIP_Real *vals, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateEmptyRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad250ffa5f36870fc0eb2c10e1e2eaa67</anchor>
      <arglist>(SCIP *scip, SCIP_ROW **row, const char *name, SCIP_Real lhs, SCIP_Real rhs, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool removable)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcaptureRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab345eca97c49f56815689281d381d2e6</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreleaseRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab48075e03669d070432ec340313b6c14</anchor>
      <arglist>(SCIP *scip, SCIP_ROW **row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgRowLhs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a21c81ede04e2dba3780ffe487d9a3e4a</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_Real lhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgRowRhs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>acb6669f0f75661fbc069e625ec624042</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcacheRowExtensions</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1d39aa6fb12d8346eb92a7077ab95ca8</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPflushRowExtensions</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a864bcec8e332c76091ba3a253511e848</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarToRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9f2afff8303839bd7f8ac530e1231b16</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarsToRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae2ed7224e5436ad91be4626fdf301c8f</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddVarsToRowSameCoef</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a609cc51c16d6b454da46522b613f919a</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, int nvars, SCIP_VAR **vars, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcalcRowIntegralScalar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af541a92b85d7c66b30653a312eb12874</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_Real mindelta, SCIP_Real maxdelta, SCIP_Longint maxdnom, SCIP_Real maxscale, SCIP_Bool usecontvars, SCIP_Real *intscalar, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPmakeRowIntegral</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a99fc1f122370a2345bde9c6c501723d8</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_Real mindelta, SCIP_Real maxdelta, SCIP_Longint maxdnom, SCIP_Real maxscale, SCIP_Bool usecontvars, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowMinCoef</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0ab71dc044765bfe98443629da0d98cf</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowMaxCoef</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a02b4458c98fc07be4d9c4919af5cf178</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowMinActivity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a37352529ce67547337fca182c3d88df9</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowMaxActivity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7557f2d4f6c4bc80f25443754623af77</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcRowLPActivity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abb48dd3a265d49568d947446782dce4f</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowLPActivity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a57712688056c7770913db67d4aac048b</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowLPFeasibility</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aca759620ea1974b142f09a7b88d854d4</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcRowPseudoActivity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7ef297232e9ca78238c345bbf41ddb89</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowPseudoActivity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a90a4988f89d869dfa22fe48d339ce741</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowPseudoFeasibility</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab4819e4b6783d5eda8114adb477fad32</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcRowActivity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a87db79897c4a893f6b9f96344129eaa4</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowActivity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aaf9dc7e33e9f31516dadd3223b806923</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowFeasibility</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3e46033937fea1b2f2cbdc99a5381b9d</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowSolActivity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af6ae6ae93a9e1ee50b84882dadfa1327</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRowSolFeasibility</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab3ad8a0489ccd2023f711bacd2921f78</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa0c3e91d42a44b101de0fc9cd8c35894</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmarkContinuousNonlinearitiesPresent</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1c303a86b8cab9eb1d02ece45d51c9c1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmarkNonlinearitiesPresent</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0951e76feb0d9a9d27b21f9757b672fb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmarkRequireNLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7051a110c3cbbb581f135f03cbda5e05</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhasContinuousNonlinearitiesPresent</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9550fc7a87980e11e6d8be27ae61b5f0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPhasNonlinearitiesPresent</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abf860074efee08ab369bb53baaaaf40e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisNLPRequired</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a25ad6594fcbf74e5346e7ad85e17ee69</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisNLPConstructed</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a562cf9826f085b4e02787614b4b38668</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLP *</type>
      <name>SCIPgetNLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4c3f077dd362c6a62ea6e47d4eae4d19</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPflushNLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4226a39fb23d4ec15b491932b7cc06b7</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNLPVarsData</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad5540efd0674ee3a72e811cd7860be9c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***vars, int *nvars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNLPNlRowsData</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa0f0be508a594224bf3ee5611a10d894</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW ***nlrows, int *nnlrows)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddNlRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3e4c5bde3054ec3a272316eaa483da2a</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNLPInitialGuess</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6b5cc3df5f3ecc23242e7f76f0d39855</anchor>
      <arglist>(SCIP *scip, SCIP_Real *initialguess)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNLPInitialGuessSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9710017805f464a0fbbb1619538d2721</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveNLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6c7f6d48572cf6445baee477076526a6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NLPSOLSTAT</type>
      <name>SCIPgetNLPSolstat</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a61b3739965b6389428b8c2b03609ba39</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateNLPSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5761efbf8552b7977c4e2908c14573a7</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetNLPObjval</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6c69fcf176c6fd1ab0f699b4c8dd977a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteNLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9a1f13a05b69c63c5c965a0f697a7164</anchor>
      <arglist>(SCIP *scip, const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNLPI</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3db96babf8cfdbedbe2999f8d32e7c71</anchor>
      <arglist>(SCIP *scip, SCIP_NLPI **nlpi)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartDiveNLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7a44bbbdfa1ce57980097fa0160199cf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPendDiveNLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a17997edc2b93dd62c26497f31eb241ad</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarObjDiveNLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae37c66da85c2643d86ade053639ed85c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarBoundsDiveNLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9c43186d72bb90c5ec8f429f2a1b470b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real lb, SCIP_Real ub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarsBoundsDiveNLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a33e4fe4b923a4a4b35bdef9b3ec66c77</anchor>
      <arglist>(SCIP *scip, int nvars, SCIP_VAR **vars, SCIP_Real *lbs, SCIP_Real *ubs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveDiveNLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad3e9ce6f9cc263009a6e4bf01dcda463</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateNlRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a331d2b0853f4485e68e8b9a80e85f7de</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW **nlrow, const char *name, SCIP_Real constant, int nlinvars, SCIP_VAR **linvars, SCIP_Real *lincoefs, int nquadvars, SCIP_VAR **quadvars, int nquadelems, SCIP_QUADELEM *quadelems, SCIP_EXPRTREE *expression, SCIP_Real lhs, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateEmptyNlRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a309c9770b77ef8cebd82ba19fae4050a</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW **nlrow, const char *name, SCIP_Real lhs, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateNlRowFromRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae478ad08ce59537b9182159ea487cebf</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW **nlrow, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcaptureNlRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2af6ee81f098ff5b4a4b1c1f7da44888</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreleaseNlRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9194db31eec1c7d7c29d1be47862b3a5</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW **nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgNlRowLhs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa60e949fca9500159904868ee05bf4bf</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real lhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgNlRowConstant</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa0154b2373e111b26b7c2bbd9f9556cc</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real constant)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgNlRowRhs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6b1d5435734f68b24ee33dae52ba31f2</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real rhs)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLinearCoefToNlRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a236d7e9bc0361107e87205947f68dd32</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddLinearCoefsToNlRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af38a1b4955c0238ac22e065be38cd79d</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgNlRowLinearCoef</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a408f2386bf2185502773ee14a3e0df42</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_VAR *var, SCIP_Real coef)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgNlRowQuadElement</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af322854725f24efa99334d8988216ec4</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_QUADELEM quadelement)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddQuadVarToNlRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a99b53fe0cf36b8109c0fe91958435532</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddQuadVarsToNlRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8c2ed060cca110198b8e03049a21b979</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, int nvars, SCIP_VAR **vars)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddQuadElementToNlRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aeb38782dc8c697517b3d4a344e0eeda6</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_QUADELEM quadelem)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddQuadElementsToNlRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad35631afec785ff81dcfa6086c4024dd</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, int nquadelems, SCIP_QUADELEM *quadelems)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNlRowExprtree</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aab02b26a61423f714a60ab512fec7f5a</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_EXPRTREE *exprtree)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNlRowExprtreeParam</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a294fc36703aa901ebaf492a70d1e7502</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, int paramidx, SCIP_Real paramval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetNlRowExprtreeParams</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2f6f68a4e301bf556cc2a54c2b494b59</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *paramvals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcNlRowNLPActivity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2d06e1bbfa342da888e85efd5aef0039</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowNLPActivity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab61afbb67d3ffa420f46c68cb39d7858</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *activity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowNLPFeasibility</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a479e9fa869745defc53487ad279ab873</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *feasibility)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcNlRowPseudoActivity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af90ba8ce15ef0a986e39df879be360c9</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowPseudoActivity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4ae45a1e66edbc0cab2b41f8e3a2a17d</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *pseudoactivity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowPseudoFeasibility</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abd37a29c66e60e3b130a38d85593414f</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *pseudofeasibility)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrecalcNlRowActivity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa44aa02d5eeaa3d3f99621780836f2bb</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowActivity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a46d670b092ef96f754c8643de7602bf5</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *activity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowFeasibility</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a99e235c5844982832703f0c8f5eb65b0</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *feasibility)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowSolActivity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>adbb1cea254cc953927bd748c90c3f1c0</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_SOL *sol, SCIP_Real *activity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowSolFeasibility</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3ea4c1137d26a66bc9b613089e8c0f7d</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_SOL *sol, SCIP_Real *feasibility)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetNlRowActivityBounds</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1035347fe11413aeebea5d33aeb3e6a2</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, SCIP_Real *minactivity, SCIP_Real *maxactivity)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintNlRow</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad6e8dd0bf1c06a3dfa7b4452d4555c97</anchor>
      <arglist>(SCIP *scip, SCIP_NLROW *nlrow, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetCutEfficacy</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1ad915425fe64b2720c131d55dfbeef6</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_ROW *cut)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisCutEfficacious</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6fd0ac77dd084954dcf9cd9f360854ed</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_ROW *cut)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisEfficacious</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a816a17fea3a4bf6c06ff4ba3ed329f29</anchor>
      <arglist>(SCIP *scip, SCIP_Real efficacy)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVectorEfficacyNorm</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>accab5fc5fe2e981e65c0579a489ab3aa</anchor>
      <arglist>(SCIP *scip, SCIP_Real *vals, int nvals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCut</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a04afcc23c6c21a921cd5e9e2f86d77ea</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_ROW *cut, SCIP_Bool forcecut)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddPoolCut</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a14b5af5c0722ae6284b2a2d2eb0b3d5b</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelPoolCut</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae1c513033b7202a8acb2e6edfc56308b</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CUT **</type>
      <name>SCIPgetPoolCuts</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6a27a2619f62e4a7d3f446b2a438b3b4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPoolCuts</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa56411a63a1a23fb1fc229d87d7084b5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_CUTPOOL *</type>
      <name>SCIPgetGlobalCutpool</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aba942d7f191c2bb818c6be4e9cd3d013</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateCutpool</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abdeafe1f2f0e38de38c5933d544e00fa</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL **cutpool, int agelimit)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeCutpool</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae1f61832da62775b9b43f09f14654f11</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL **cutpool)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddRowCutpool</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a61713c68c848ed6f8549acaede0b86a3</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL *cutpool, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddNewRowCutpool</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae228bdca2589466a7941bd78b203a6c4</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL *cutpool, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdelRowCutpool</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a41a61c4b60e6266a9a31210f49d201c1</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL *cutpool, SCIP_ROW *row)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPseparateCutpool</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4ca195a9817a9a121eac1335e1555178</anchor>
      <arglist>(SCIP *scip, SCIP_CUTPOOL *cutpool, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPseparateSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>accde7b091593debbf8ee401cdc42e7a9</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool pretendroot, SCIP_Bool onlydelayed, SCIP_Bool *delayed, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_ROW **</type>
      <name>SCIPgetCuts</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a957ce862ee379dcf71c6fbb647807c1f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNCuts</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>adc98be8927b43b367b240db63c62f63e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearCuts</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abde3f19da11334be15a64c7fbe9bae69</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartDive</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a61e0d3177ad999bf713b05bfa53c65ae</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPendDive</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aca241eeebf5de4468c5326c6fed83408</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarObjDive</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9b8a6dbfee0cb4c2dd532cd56206c3f4</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newobj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLbDive</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a074bbbcaad8d4b1f4c04d07134f73a1b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUbDive</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a15db9438be54d34bc8e790d876de17ea</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarObjDive</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a49d469652cef4f79245a790d41e16721</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarLbDive</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3d3566c787ebedbd6e947e84c4ebbbe3</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetVarUbDive</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a46d00e8906fa7831426af4e4d5a6b164</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveDiveLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4ee99b4a1a8861615fd7abdc827ea9ef</anchor>
      <arglist>(SCIP *scip, int itlim, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetLastDivenode</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>adeb4b598c00ac6e0316ba48fb4479ee4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPinProbing</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6f5e2d470a20df93c8b2905404218ce6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartProbing</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a71a4ba1e820f5e875b940a801bcc1e8e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPnewProbingNode</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a951ef10b2149e7486a00226c8a9b1be6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetProbingDepth</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a047975ac149dd68a48689941535dc7be</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbacktrackProbing</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a62f00b4ed2fcfd059c0e053f366b0af2</anchor>
      <arglist>(SCIP *scip, int probingdepth)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPendProbing</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aeeb10b28f05c36a512da9f2ae4cdb9e5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarLbProbing</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4c9f785ad44bc720cebcc693e8fc917e</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgVarUbProbing</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a31569f9abf01c44c924dd74b8bfc29cf</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real newbound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfixVarProbing</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae0bd0314ebf25502c36a896f9a9b9773</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real fixedval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpropagateProbing</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4d2897d28c9f217f1cbc0c1578e9ff4f</anchor>
      <arglist>(SCIP *scip, int maxproprounds, SCIP_Bool *cutoff, SCIP_Longint *ndomredsfound)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPpropagateProbingImplications</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ada03244e7f13a6b40bf617d5e62d7050</anchor>
      <arglist>(SCIP *scip, SCIP_Bool *cutoff)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveProbingLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a975f966f47fcdf85d1a86e613e2e1888</anchor>
      <arglist>(SCIP *scip, int itlim, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsolveProbingLPWithPricing</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6b46193f6cab1d45c7934955fd21fd88</anchor>
      <arglist>(SCIP *scip, SCIP_Bool pretendroot, SCIP_Bool displayinfo, int maxpricerounds, SCIP_Bool *lperror)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLPBranchCands</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a04924d1578c8b893f8420001445210fd</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***lpcands, SCIP_Real **lpcandssol, SCIP_Real **lpcandsfrac, int *nlpcands, int *npriolpcands)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLPBranchCands</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac948f7043edfb733dca98965ef2ce192</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioLPBranchCands</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aca0d050de167f447d0980d356f564d54</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetExternBranchCands</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1c3662e210e4a159e5a08cf1c3e1928a</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***externcands, SCIP_Real **externcandssol, SCIP_Real **externcandsscore, int *nexterncands, int *nprioexterncands, int *nprioexternbins, int *nprioexternints, int *nprioexternimpls)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNExternBranchCands</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abbe8ab137a366b1ff0bd7f2ece467421</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioExternBranchCands</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abf7eb9b3f81fca081086b26fc4595aee</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioExternBranchBins</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab26869db67b61cae8cb74f90c2c5a9e3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioExternBranchInts</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9a636a11f9355d276522ac0e22f97c6d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioExternBranchImpls</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac565048c1a09a7f2cd5a5a61b1d3b074</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioExternBranchConts</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a17645a48bfbe63e50fa909080a6f6ecb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddExternBranchCand</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a32935485576c3f1aa4e0784a17ef3b9e</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real score, SCIP_Real solval)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPclearExternBranchCands</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a94cc7772f105dfd089ddcaf3c4b3222b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPcontainsExternBranchCand</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af1d0917028c016dd17fc61a5ba02011b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetPseudoBranchCands</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>acb6423287e73b4c01172b888b615d5d6</anchor>
      <arglist>(SCIP *scip, SCIP_VAR ***pseudocands, int *npseudocands, int *npriopseudocands)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPseudoBranchCands</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>affcbbff89a112152b9c53c5b6082b1f4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioPseudoBranchCands</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a979ba10cff60431c1b4817743daf6846</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioPseudoBranchBins</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5ae75d2b7769967aa701d04e5083d58e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioPseudoBranchInts</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3b9055d77a4025302267c34dab42713b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrioPseudoBranchImpls</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7c55c8f13395c395e6759ba9690a1be0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetBranchScore</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>adad5155935c4ddb41411c24198049850</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real downgain, SCIP_Real upgain)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetBranchScoreMultiple</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>accaba8412271cfd682eb8ca4a1e338d0</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, int nchildren, SCIP_Real *gains)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetBranchingPoint</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3ebbb1c37814cfee5b82de308dc9b0a9</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real suggestion)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcalcNodeselPriority</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad9741839e2b8ec912e36884076f8959d</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real targetvalue)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPcalcChildEstimate</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a48fa1990192d55e91ad429e99787425b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real targetvalue)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateChild</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad2acad3baa29cfaa154e00f24ce7ed76</anchor>
      <arglist>(SCIP *scip, SCIP_NODE **node, SCIP_Real nodeselprio, SCIP_Real estimate)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbranchVar</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abb0e80df81b921f02e8d63ec44de609c</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_NODE **downchild, SCIP_NODE **eqchild, SCIP_NODE **upchild)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbranchVarVal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7e3f1f78081aa6334a1e2cbb3fd6e12b</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_Real val, SCIP_NODE **downchild, SCIP_NODE **eqchild, SCIP_NODE **upchild)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbranchLP</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac95c263bceda5b9a1ed58f8a6ef28e5d</anchor>
      <arglist>(SCIP *scip, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbranchExtern</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a62764d72fde4914941fdacc22e3675cd</anchor>
      <arglist>(SCIP *scip, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPbranchPseudo</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae7444dff2944b8bd256dd5de1fe3892b</anchor>
      <arglist>(SCIP *scip, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a03da404f4153d8f673e87fb28bc7d552</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateLPSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a722713bfce39442851599ccec206a5ac</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateRelaxSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a90fb3c4e2451dc19d07885e70d2319e4</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreatePseudoSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aed592c1f6559db530bb85cffaaba7efd</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateCurrentSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4932b7d51737d48f02cd609c705d532b</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateUnknownSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0db508df4ed974dceb64fd24fb3cb0da</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateOrigSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a84ea192b17b635835e7841762e3281ba</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateSolCopy</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a25c5da29caf1d233a2ccfea5d5eb320f</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_SOL *sourcesol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a37c2084d02924f6540e1e5936f590285</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlinkLPSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac998bae233c4ae9fdf4f930e07d8b2bc</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlinkRelaxSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab98aadcdf38d05c7866da542799a6509</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlinkPseudoSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0594e249860131e4a9e4932e795017e2</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPlinkCurrentSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a73e509652c444869b96cdbdd1cd7a1ab</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a56349f981723444c03bdd1aac62c8131</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPunlinkSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a88085d62c37e99253eb3bcb63a47293a</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSolVal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>adbb9f3c0c0b462481fe5eff677463258</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_VAR *var, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetSolVals</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab4007453cafad788430c2ad55129479f</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincSolVal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa080f80744eed3b1c8d8429c90231126</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_VAR *var, SCIP_Real incval)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetSolVal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>adbd8d051e9c1b3f2d84be42fb140c112</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetSolVals</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a982669e32c6756f863a1cc3741ecf32c</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, int nvars, SCIP_VAR **vars, SCIP_Real *vals)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetSolOrigObj</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac9efcb03da88bb6acf38f69bd5598af0</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetSolTransObj</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ade249a928a8f6dcb0b254a98779ed324</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPtransformObj</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5a61c75e77b23d6c459bc78d513cb41d</anchor>
      <arglist>(SCIP *scip, SCIP_Real obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPretransformObj</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae4f655408936ee19f141c9c86df4b8c0</anchor>
      <arglist>(SCIP *scip, SCIP_Real obj)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetSolTime</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>acdb4255415fbf913d034f73fa724b871</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetSolRunnum</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a07245cd923bed863675c4c3129e86a9b</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetSolNodenum</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa7962e1cf606e7cb968558a77d72533e</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_HEUR *</type>
      <name>SCIPgetSolHeur</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8c54a56bb9c6fa715d74a3ea9d5c21ec</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPareSolsEqual</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a517e9932344fec6606f3a2ef0b538cf8</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol1, SCIP_SOL *sol2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3bd6c0f66c0179c77cf4c708ee2bef45</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, FILE *file, SCIP_Bool printzeros)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintTransSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a18132f192e81da44ae7cedf9e83a3a23</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, FILE *file, SCIP_Bool printzeros)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNSols</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a64244b2bbdea03fc80580bb0d4f22c86</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SOL **</type>
      <name>SCIPgetSols</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9a6a0a948f27da830ca9acc5da098b93</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_SOL *</type>
      <name>SCIPgetBestSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5978378526107a47fb4965d0167a65d6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintBestSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2d0d56545651587e0becf282706860e0</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_Bool printzeros)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintBestTransSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7d7ba6596fb55a1596bc5548fb1970fd</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_Bool printzeros)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIProundSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa21b685b67e0c27028fcfb10f62b4d68</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool *success)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9b51e1c9e28d3f6f9f45f37bfdb77897</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddSolFree</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a39900eaed373281cde8f8cd7c1120042</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPaddCurrentSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a847421ea1ec92da72e12cc318a3df719</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtrySol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae4041777d638e0bcbbb592946b520f15</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool printreason, SCIP_Bool checkbounds, SCIP_Bool checkintegrality, SCIP_Bool checklprows, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtrySolFree</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af00de2379f996445b4497db79e7449f0</anchor>
      <arglist>(SCIP *scip, SCIP_SOL **sol, SCIP_Bool printreason, SCIP_Bool checkbounds, SCIP_Bool checkintegrality, SCIP_Bool checklprows, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPtryCurrentSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4dc3e04fe53ed2cbb9c09405fc25c102</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_Bool printreason, SCIP_Bool checkintegrality, SCIP_Bool checklprows, SCIP_Bool *stored)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a87ad26a90aa013915ab65cb2d49e01e5</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool printreason, SCIP_Bool checkbounds, SCIP_Bool checkintegrality, SCIP_Bool checklprows, SCIP_Bool *feasible)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcheckSolOrig</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0277de675980404cf9ae9087a4f6aa6c</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Bool *feasible, SCIP_Bool printreason, SCIP_Bool completely)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcatchEvent</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac05fe12d6ec0a9a0038098f5fed8073c</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int *filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdropEvent</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>afb9a71feec8d57a38929de13df701e4f</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcatchVarEvent</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3ca88edcea21c4e01433a7b42f468c72</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int *filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdropVarEvent</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3e9a0d6119568dda136e212824af7090</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcatchRowEvent</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aeb33cac5aafb665ff362639cb28d36ef</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int *filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPdropRowEvent</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3f10012cf2e84b9ee81d5c397a138c2f</anchor>
      <arglist>(SCIP *scip, SCIP_ROW *row, SCIP_EVENTTYPE eventtype, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA *eventdata, int filterpos)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetCurrentNode</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a869994597923e6fa9c1930b7b3e231b9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetRootNode</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>acbb3fc30caf49cf50754ac691115aae9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPinRepropagation</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2a4edb16b893695d8eb1a7c75ddaa072</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetChildren</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2c93e943a8d4fb918026ffbb87cae40a</anchor>
      <arglist>(SCIP *scip, SCIP_NODE ***children, int *nchildren)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNChildren</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1f5697589729356124199c16db1b492e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetSiblings</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa8dd0abb76dfa041640ed07581e238d1</anchor>
      <arglist>(SCIP *scip, SCIP_NODE ***siblings, int *nsiblings)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNSiblings</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1662f2e6f660f5bdbebc5b91462c77b8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPgetLeaves</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a57b5dbbcbde164e59fd8c7d57696fa24</anchor>
      <arglist>(SCIP *scip, SCIP_NODE ***leaves, int *nleaves)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLeaves</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8d18e736f44b47bc390fb112090ee809</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetPrioChild</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3f24043628a1f185e2d30d7782cbb4bd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetPrioSibling</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a71bace9eb8a20d438ca12c0acc4bfa17</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetBestChild</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a98b9f65219967bdb6acbef1bb216607f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetBestSibling</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abb6da922b7c8277351e3f14b170e42ba</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetBestLeaf</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae0bf4acb976ef18c5ecae5575eb28c96</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetBestNode</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0050d97837e8b24a6f9fc9f0ef362b02</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_NODE *</type>
      <name>SCIPgetBestboundNode</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a433ce895c25cec073958b114601f7993</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcutoffNode</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>adf578314e6cc05eb74619c7226a6428e</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPrepropagateNode</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1ccf8578f677d311fe7ac492c8eddd12</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetCutoffdepth</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7208fa603e52c67b3bb400d4c470fb42</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetRepropdepth</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad4a7d0354d2546df6b4e6e69183fdfb0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintNodeRootPath</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a77da882ad387b9b6cd4b123a445969f4</anchor>
      <arglist>(SCIP *scip, SCIP_NODE *node, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNRuns</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7da0fba0b618088984402dea1436ae8c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNNodes</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4549c064077c4bbe86077500221d674c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNTotalNodes</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a75bfc3f17379ce05fe6bdc1ca8733ca3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNNodesLeft</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2f8a5f5401289bdbe59353e3edc204cb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNLPs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a00bd2b03e4369dfbc336f8efd3a38752</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNLPIterations</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aefd01543c25ff377e46ff899f2299df2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNRootLPIterations</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9c1cba02217c841d69fc3cef21788cda</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrimalLPs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a597b1200db63832b02859268fab1d8bb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNPrimalLPIterations</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae5f3dbc630bb9023f0c952bce67575a9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNDualLPs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>afa460edacf0e1d8b184c88f9b8a99a76</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNDualLPIterations</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a824ba1f0cd6b4096c67b9c7017e1f58b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNBarrierLPs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae7b73bebddbd4698c64eb99ec913f066</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNBarrierLPIterations</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a257196dc0af4d07e2a4279ec05b950f3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNResolveLPs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>acf4b9f683dc63e6c54d5babb8c062ba2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNResolveLPIterations</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a40e6b4b2658fd78fd4cc491679f85d4d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPrimalResolveLPs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a492e6a3d41abad9186b41dc9e1798cc5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNPrimalResolveLPIterations</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9e08d9e824b9c90f9e2aec8b9b729be9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNDualResolveLPs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1777814844be2178dfb42e3ac4ed1e46</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNDualResolveLPIterations</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab2ad3dc04935b8f0e9e8d0a497510f79</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNNodeLPs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a19fd443d6298de7445434d972fab78b0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNNodeLPIterations</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7f74a5286d23806f10e06e9cb6dec694</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNNodeInitLPs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0a3a25e84ead7692f7b8fa1b7e8eade9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNNodeInitLPIterations</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad225e7f8e443b9be84a49d7cb8dc3d65</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNDivingLPs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a63d47d1b8d793e7e9ce681a4fbaedf3a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNDivingLPIterations</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2ca93cdaeb2c779c6943459741b2129c</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNStrongbranchs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>afa8eeac72d1ced8d5a7bdc064b309f07</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNStrongbranchLPIterations</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6877587cd382aebdb420450425e54e72</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNRootStrongbranchs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4e05302acb1ae96aa3b4369a767b2c63</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNRootStrongbranchLPIterations</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>afdf421bf7223b88c35da0dc67411c702</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPriceRounds</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a91e2b35dc6f27f57f237e338fd74dca3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPricevars</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4b037fe8922ccc57497bee7b154eaffa</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPricevarsFound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>acd5ede34fd319b8aa1dd4ea5131f32a2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNPricevarsApplied</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a68d93e1141d73204aa1e1c2cbe4decd2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNSepaRounds</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5b428523286ff757c5ccc1d472e2981d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNCutsFound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac2bcec94e1d9c1b03a42dcef02bd62ad</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNCutsFoundRound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5b9827007afd091606e9f2c75ded91c2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNCutsApplied</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6cc587f3f43c1483b8be7f1525a02963</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNConflictConssFound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>adb734513681bf126b4dcb10935a154c5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNConflictConssFoundNode</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae922e864839c8e54302f57ea498d105f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNConflictConssApplied</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abe08eff9f13c606dd62c12511797aece</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetDepth</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a832135c063903ff26794a40cfde8c6d6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetFocusDepth</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a39c1a939192ebdcf78c40a2ee815f6b5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetMaxDepth</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a242f779d9e85e8b7bbdb3a2a7f5bc45d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetMaxTotalDepth</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4aa2f63f3ee5607304ed38e53a318f47</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNBacktracks</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aaec97069bd5823e3602a56d0b0793467</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetPlungeDepth</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aaa502314ddd29c3d9de40bab0197ca4e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNActiveConss</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a89978d9776116bf035147ca470589a69</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNEnabledConss</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5a0864602287ccf44f0a46cf5cfd1926</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgDualbound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a97055e2233b0e52c3d7be7206d9864c4</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgLowerbound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a71e2fc6b7bd8cdff564bc8b0ba262127</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualbound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4fa1615e54c59b47f8156c64df11d8b3</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLowerbound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a701a29e227cf348a2d86031f9880cccf</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetDualboundRoot</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8d2b80bd1d195f98444c4dd6deb588bb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetLowerboundRoot</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a354387886f93bd54e8b47fce344c36f2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetPrimalbound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a23d44bb47495a9064ce375b448446feb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetUpperbound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a348c2e9e1c59b4664b128b79ba0cca92</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetCutoffbound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab87340eb66d6fddb826bf07bf4a650ec</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisPrimalboundSol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a14602d2ecb24cfec70492d4c84ec139d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetGap</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a408360be74ace621b7b361e543edeca7</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetTransGap</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab314a925bd8bebe145c8d9941e9208a0</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNSolsFound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a213d551c49588d84a239f133f468b8ff</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetNBestSolsFound</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab5d5272957a919f388821cd37b9a79da</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocost</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa5e8f23462892e17fb77ae56ccb3c564</anchor>
      <arglist>(SCIP *scip, SCIP_Real solvaldelta)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocostCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>add11ccf4d0e8823b6b424b9e32177693</anchor>
      <arglist>(SCIP *scip, SCIP_Real solvaldelta)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocostCount</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3cef732249613ca9e5cfa38fbb2cc11e</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocostCountCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abbfc548c17148b7e7e7232e0d3a15f3e</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocostScore</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab76cbada1841c8f4a204fb474089daf1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgPseudocostScoreCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2d6e802390395e2386318a9d88b6fefd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgConflictScore</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa24ce24458f9bdd63dc35f743ca18e27</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgConflictScoreCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a05ebf73755ebf8a3e9683b6c1451bd6f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgConflictlengthScore</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3570f17d8caf75dc8752d4f4eaf5351d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgConflictlengthScoreCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>acbd9bdbf2697fff0c504852fb2208ecd</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgInferences</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>addcd8e5d8e440a31da60fdac4ef18e4e</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgInferencesCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af2afd5d59dfa79fce52cbea701b41102</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgInferenceScore</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2a1d533eab0d4f74e5d0e3f281a06c9f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgInferenceScoreCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9e8811a9c82dd87ee92e6ee39067d841</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgCutoffs</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>afd6fcd1f689fe7ddcc1dac91ccbdd5a1</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgCutoffsCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0d41f91a49fc3ed61d740065b282e15e</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHDIR dir)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgCutoffScore</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aff19a038ec801327fa828a759eb76e9a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetAvgCutoffScoreCurrentRun</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8d907a27755432f1195c543969f0ca57</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintOrigProblem</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab0fbe8783e109c1f89e47c63103a70e0</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *extension, SCIP_Bool genericnames)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintTransProblem</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aaea37b8cbddff8710cb4cb57ae01d521</anchor>
      <arglist>(SCIP *scip, FILE *file, const char *extension, SCIP_Bool genericnames)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintStatistics</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6e7eb26b996d4466493a504a0924a35d</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintBranchingStatistics</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7292cb7e69a7b7ea2556576aa07cc336</anchor>
      <arglist>(SCIP *scip, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPprintDisplayLine</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6ea3dd40ac8b336dd0420090795acda7</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_VERBLEVEL verblevel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetNImplications</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1850178381f2a69f273f8bce8f19828b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPwriteImplicationConflictGraph</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab6c11018b121421f05dab24f189fd9b3</anchor>
      <arglist>(SCIP *scip, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetTimeOfDay</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4e5e8c56298839c6c5bc5b7c02cef65f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateClock</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a185ff4a1a5ceddd5d122eaeaa09d38c1</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK **clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateCPUClock</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a43e64ffeb84cdc44496d277b980f2e40</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK **clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateWallClock</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac6f4dfffdca8d2e2f191ae95dc35e539</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK **clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeClock</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8ccd4a581e4a0e67fe18b0dd22741e75</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK **clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPresetClock</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2c20354b77e6d4752c50176158a9e366</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK *clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstartClock</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aee369280c4ec16497e836c40db3bec30</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK *clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPstopClock</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a56bd39850595740305b20f752bff4505</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK *clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetClockTime</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae29d0960525f972c49104aafe09a78dc</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK *clck)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetClockTime</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af4581f3f9c3be8463bedbad7c42ad3a1</anchor>
      <arglist>(SCIP *scip, SCIP_CLOCK *clck, SCIP_Real sec)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetTotalTime</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8a25300e376653dd3b7e36e6c243a58d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetSolvingTime</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a86e3d773621b6918f1bbf6ef89f1edeb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetPresolvingTime</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aeb8aa9607912df47b5ed70eddd5a30ca</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPinfinity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a26c1965e7862c99be6f4d0cf292630c7</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPepsilon</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae3ad14fc5405972193b732f39bf4544d</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPsumepsilon</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae44d10a77687edb9fca81317c91e2376</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfeastol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9057fa9938dced1686c54b8dd1639de9</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPdualfeastol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9ecd9d48cd473b13c25f37749656cb97</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPbarrierconvtol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af17769328fb31dec31ef4962203c44dc</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgFeastol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a84074d45d8cad01fd62e1d40c76dab20</anchor>
      <arglist>(SCIP *scip, SCIP_Real feastol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgDualfeastol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>afe018e183e5a0c86551904ee86b2ede5</anchor>
      <arglist>(SCIP *scip, SCIP_Real dualfeastol)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPchgBarrierconvtol</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>adb2c4a0dedcaf914db13ccd8cc1c0214</anchor>
      <arglist>(SCIP *scip, SCIP_Real barrierconvtol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPmarkLimitChanged</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae37eec7a1a6ceea5b23956eb297b32a5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisEQ</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac87687bf04e43f86291920b3a27a902c</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLT</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aebab0e8275ac5eb5c56fecf1445cae53</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLE</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6098874500a2c86a848a7ead51a271c5</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisGT</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aaeb5fa50b4e504158c6f57e62f898c9a</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisGE</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2a60428605ade992434594643bc291ee</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisInfinity</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6ac689c948511ea4a133e1187d33c60b</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisZero</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ada1c680e74f9164304d6a1b80a9d5ec4</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisPositive</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a534c8a89f5ed608b756fdd2549ed45a4</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisNegative</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab741e3e43e55fd314fb1ed22b4188bc8</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisIntegral</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3022a89ce7a688e8474ffd3a179f76e0</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisScalingIntegral</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abc3996b42b9c5d96eff9005ad19125b4</anchor>
      <arglist>(SCIP *scip, SCIP_Real val, SCIP_Real scalar)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFracIntegral</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7f271cbe55369e9b8e20f19d8a9b0e00</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfloor</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a64b8534876012c1f65bc48ec8dee7039</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPceil</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab82261caf771bdd1d257928a7ecb49c1</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfrac</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa4ec45b5abe5092798ef65db57e65d1b</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumEQ</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7fbc455f596c206ab4c9aef793003eb2</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumLT</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6c5ad5e1d981673aae28a6cc76dd7dda</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumLE</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>afad73ad88bbd00e0d4d9fecdbe924840</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumGT</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af81d3e6d8669bd87cfe18b202ec47df8</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumGE</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a9bb24cf1101995e1c8632dea7c3d4367</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumZero</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad085ed607bbe30c0018292d821c3dcac</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumPositive</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0ec6bbf0e38eb5aafef44d1f291cc6af</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumNegative</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a506d3e16e2110af1003cd5f1094f9d80</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasEQ</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5173b989825c4d92e3f5c1fdb3bda0da</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasLT</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a760c9e841bfb93dbb8b154a8c687e33d</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasLE</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7dd943a1dba3ef0c108f1202b8963ac2</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasGT</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac6a6239d776db49ce1ccf1e17750af27</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasGE</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a12aa46b95e92ca8a44ef4318fcabd318</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasZero</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a61425eb4e85f3edaeb8c227b98104018</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasPositive</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af8c5293ba162319535089cc7bb998135</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasNegative</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7b87f4153257434cc87cdc25b70b2057</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasIntegral</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a848f1b16088177dfe52cc9a831b7ae2d</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisFeasFracIntegral</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2c907faa2bb47f34b1d2491cdcdc0aa7</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfeasFloor</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6796e3ecf99da9862e914747eaadd9cf</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfeasCeil</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a5c2e6890ce633de31011bda7875996b5</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPfeasFrac</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a333a924a364d2882974062d9e006e4ff</anchor>
      <arglist>(SCIP *scip, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisLbBetter</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a58dd466e39788971c7d4f22c00549915</anchor>
      <arglist>(SCIP *scip, SCIP_Real newlb, SCIP_Real oldlb, SCIP_Real oldub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisUbBetter</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a11a6ababcbe9f88558735dd63635a66b</anchor>
      <arglist>(SCIP *scip, SCIP_Real newub, SCIP_Real oldlb, SCIP_Real oldub)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelEQ</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a099dd6dac1110e34019cdd637fded132</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelLT</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a36480411a3401805d9bb0bcfa2b06b30</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelLE</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a117adaa841ba0978065ae78c64bf9c6c</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelGT</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3aa55984855074f0e52a20d13f89cee4</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisRelGE</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a384b4766165749da514343138a334b76</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumRelEQ</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4591cd0403adc8515381ba1ef88bac7e</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumRelLT</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a70d2b54609bcd6fca99fc2c0741e9a71</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumRelLE</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a3685ea2563c2baa026bf157cae9eb2ce</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumRelGT</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2562282385deb2faa61699107441d8b5</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPisSumRelGE</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abbd1d627fc6ed441ed83adc3b4e0def9</anchor>
      <arglist>(SCIP *scip, SCIP_Real val1, SCIP_Real val2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprintReal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6656e7198b300483b3e5540516278732</anchor>
      <arglist>(SCIP *scip, FILE *file, SCIP_Real val, int width, int precision)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateRealarray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4e6f109b64d20fc639e2ccea10dd7a07</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY **realarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeRealarray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a95b7da914f268329fd08f130dcfb7c75</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY **realarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPextendRealarray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad6ff2b6be1016150f38fdcff2b60de4b</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray, int minidx, int maxidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearRealarray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>afd5142ff13d294cef7136c82c4720818</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Real</type>
      <name>SCIPgetRealarrayVal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a6dcdf27c793a3968fb52414a1b2110ff</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray, int idx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetRealarrayVal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad93b72b65c0ce5880e02757ab6adf5d1</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray, int idx, SCIP_Real val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincRealarrayVal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a78496aa8fe43c55824197be198f41ade</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray, int idx, SCIP_Real incval)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetRealarrayMinIdx</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0746387e946cb6c56533b62f794bf811</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetRealarrayMaxIdx</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a52f31bd1b1208325a27159f9014b33d4</anchor>
      <arglist>(SCIP *scip, SCIP_REALARRAY *realarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateIntarray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aae2f6cf84273a6b575983d5151d496b4</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY **intarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeIntarray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae76d1e41d86ed89540a4d03de98df65b</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY **intarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPextendIntarray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a56ed132c02d68b6d51a9b0c71e96c838</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray, int minidx, int maxidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearIntarray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab9cfb4664f3642d2003835f9982535a4</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetIntarrayVal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa4b80f736f40e21a5718709c8341ba56</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray, int idx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetIntarrayVal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aff5e9dfa1a71bac95f5d12d58b195923</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray, int idx, int val)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincIntarrayVal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abaf6549f5af89c2d33b9e3cf2c9a39f7</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray, int idx, int incval)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetIntarrayMinIdx</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a4a0bc5da4b15e5e3cd2eb3a9b5ae05e3</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetIntarrayMaxIdx</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a437038afa999ca5fab8a8277fca27417</anchor>
      <arglist>(SCIP *scip, SCIP_INTARRAY *intarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreateBoolarray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abbcffe275bb8f91b306d9617f5cc0a45</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY **boolarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreeBoolarray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa50aca1a68d07eba80edcec530f22767</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY **boolarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPextendBoolarray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a958b1e079b85c64810ea085b15ca2e9c</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray, int minidx, int maxidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearBoolarray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af644d93483846007725cf6f76abd51fe</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Bool</type>
      <name>SCIPgetBoolarrayVal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a186c045fca2f197c421a71f50cb06c94</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray, int idx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetBoolarrayVal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac90479c20564329855f180e8d88f8006</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray, int idx, SCIP_Bool val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetBoolarrayMinIdx</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a92224d59dfc96f2564dd55cfa6656683</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetBoolarrayMaxIdx</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab336c51102fb1836994d95d233de3a93</anchor>
      <arglist>(SCIP *scip, SCIP_BOOLARRAY *boolarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcreatePtrarray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>afd49debdd6d6a47671b61d1e89a40ed9</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY **ptrarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPfreePtrarray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a90c323657b014cc9b2c482ff52882143</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY **ptrarray)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPextendPtrarray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af2459cfe321058c510eb54563985e40e</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray, int minidx, int maxidx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPclearPtrarray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a29ba6b5eefcacce05abdb97fe1297cd0</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>SCIPgetPtrarrayVal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac0016ddda5170cf0997ae10f3bbe87cc</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray, int idx)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPsetPtrarrayVal</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab6a1bf17dbff7f0664e7b936862a58f6</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray, int idx, void *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetPtrarrayMinIdx</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a12e56e85d1eec46e4b45f681e5dc5c5e</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPgetPtrarrayMaxIdx</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aaa2e5121082f66d69757d59e3146ffd6</anchor>
      <arglist>(SCIP *scip, SCIP_PTRARRAY *ptrarray)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocMemory</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a69bb8c4b5c729a6bc77a39fec688ef7f</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocMemoryArray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2e9869c02c5edcfbed011d68ffc7ca92</anchor>
      <arglist>(scip, ptr, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocMemorySize</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ab140f477213da7ac288a0724310fde5d</anchor>
      <arglist>(scip, ptr, size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPreallocMemoryArray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a20e80b236a1b02f31bc161789aa92bf0</anchor>
      <arglist>(scip, ptr, newnum)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPreallocMemorySize</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>acad34844be85b4449216c2ccd497709f</anchor>
      <arglist>(scip, ptr, newsize)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPduplicateMemory</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aaf16b11e01d9975ab61f43b1544f4dda</anchor>
      <arglist>(scip, ptr, source)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPduplicateMemoryArray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7bf1b0212707c10cd8f75ed4bc3d4163</anchor>
      <arglist>(scip, ptr, source, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeMemory</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a98ff2645b1fedf0c324cf9f9521112d8</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeMemoryNull</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7726daa48af0e1e735c3a07ed5a23241</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeMemoryArray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a83405eb60ac3084508f14d96ffcb057c</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeMemoryArrayNull</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a15097ac98d84a45e19449bf62bf2de7b</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeMemorySize</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a61d218357d6bd83a6698e942a65999a6</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeMemorySizeNull</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2059093fd0da269516d38dcc7ee54451</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocBlockMemory</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae80dc62a38e224199b3bbbe98689bc9a</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocBlockMemoryArray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa66577fa64e76c373c343e9245fecf21</anchor>
      <arglist>(scip, ptr, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocBlockMemorySize</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abe43a7160843a5eeb9ccd01174469416</anchor>
      <arglist>(scip, ptr, size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPreallocBlockMemoryArray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aaf3a00d8990be5f31185cdaca9e92355</anchor>
      <arglist>(scip, ptr, oldnum, newnum)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPreallocBlockMemorySize</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>af723bf97debedd8abef5d2d8630eec3a</anchor>
      <arglist>(scip, ptr, oldsize, newsize)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPduplicateBlockMemory</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2d521c5d6675385dcc2641142a4413ed</anchor>
      <arglist>(scip, ptr, source)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPduplicateBlockMemoryArray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aebb4b739a5130a72765e9c8b4a4c6209</anchor>
      <arglist>(scip, ptr, source, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPensureBlockMemoryArray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2f6e0de0970205fd23e27c4abf07d94c</anchor>
      <arglist>(scip, ptr, arraysizeptr, minsize)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBlockMemory</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>abfd452f3193371cdf445274f4e09c600</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBlockMemoryNull</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae1bb30061d794a4837b1b35b18988893</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBlockMemoryArray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a1688d33950532ec7e43a9ac8bfcf7818</anchor>
      <arglist>(scip, ptr, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBlockMemoryArrayNull</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac90a2bac8f2b464f32b4dc43507dd97c</anchor>
      <arglist>(scip, ptr, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBlockMemorySize</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ac397b4d47c189ae8b24c63a813cd574b</anchor>
      <arglist>(scip, ptr, size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBlockMemorySizeNull</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a875519c06e080d6303b38e6553732c26</anchor>
      <arglist>(scip, ptr, size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocBuffer</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aa76d3698235585cabdb680561740ad0a</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPallocBufferArray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a50dbfd1d4da55dd4f7a8efbd3535577f</anchor>
      <arglist>(scip, ptr, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPreallocBufferArray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a60e2d6c96f86d889e50cbb7b4992bc5c</anchor>
      <arglist>(scip, ptr, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPduplicateBuffer</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aee18beb49ae38cf4c838ad5e45a82cf8</anchor>
      <arglist>(scip, ptr, source)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPduplicateBufferArray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a8dabe10c58f640cc0864017ac31d7930</anchor>
      <arglist>(scip, ptr, source, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBuffer</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a0e1c6a591d440eadf004aa7c4fd6381c</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBufferNull</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae9fb600d607d0826acdcc2599e6ad694</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBufferArray</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a76b05271bb27a75ebbe902125bec6782</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIPfreeBufferArrayNull</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae46d28746546790d08ac7e3843d9b3fc</anchor>
      <arglist>(scip, ptr)</arglist>
    </member>
    <member kind="function">
      <type>BMS_BLKMEM *</type>
      <name>SCIPblkmem</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a13330793135e0be591485b51b9fda2ee</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_Longint</type>
      <name>SCIPgetMemUsed</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a25226d1ea690f8147dd8c6be2433fae8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SCIPcalcMemGrowSize</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a45225e47a88493523a4518bcd8f7e18f</anchor>
      <arglist>(SCIP *scip, int num)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPensureBlockMemoryArray_call</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a2db3bba0612b210613e08a4ad535de3b</anchor>
      <arglist>(SCIP *scip, void **arrayptr, size_t elemsize, int *arraysize, int minsize)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPallocBufferSize</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a7a34fbe8a309e4702417f3e0bb5d71a4</anchor>
      <arglist>(SCIP *scip, void **ptr, int size)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPduplicateBufferSize</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ad82dda91b29dfbba82eb73b58f2aac9b</anchor>
      <arglist>(SCIP *scip, void **ptr, const void *source, int size)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPreallocBufferSize</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>ae892e4f5a969299adf86b7db73094839</anchor>
      <arglist>(SCIP *scip, void **ptr, int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPfreeBufferSize</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>aafa14b0c468bccb8449542c4caf5ea01</anchor>
      <arglist>(SCIP *scip, void **ptr, int dummysize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCIPprintMemoryDiagnostic</name>
      <anchorfile>scip_8h.html</anchorfile>
      <anchor>a09d69a221bea08a0b314409bfc0ad1bb</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_cgmip.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__cgmip_8c</filename>
    <includes id="sepa__cgmip_8h" name="sepa_cgmip.h" local="yes" imported="no">scip/sepa_cgmip.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_NAME</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>ac332c84ab25c218d1d8202c6146caefd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DESC</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a45cf8e00d2f940825fa84fa77186db3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_PRIORITY</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a0535caa45f9e1afe1cd95c9966944eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_FREQ</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>ab5f039f7abda813877aaaa6f3963a30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_MAXBOUNDDIST</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>aa8023c88e4055fc0ef214cf626ffcc8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_USESSUBSCIP</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a5e087d59f6ad6100a861f130f6b74ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DELAY</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a1a9c881b7658edfd3ce81261dd862fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDS</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>ad1a925058883d0cd959cea25479f6436</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDSROOT</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a5c62f47fd3344274a3ec1b924cdc2a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DYNAMICCUTS</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a371bcfe5582f0dd63d774b66a8d7771f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_TIMELIMIT</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>af861d41e260672cb12bac4a6bb4ccdec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MEMORYLIMIT</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>adfc0259339909c8990d6c61c65364a13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NODELIMIT</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a7b1655abf110d85ca845d255ed8cac4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_OBJWEIGHT</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a27ba16f074f3d6e4582e9f33b86afba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USECMIR</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>ae3f5d2488de056239fb06161ca96a1d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_CMIROWNBOUNDS</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a806b5ec4e72e8226a5165871c256aceb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ALLOWLOCAL</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a33304542b2fc3cbfbac3174fb1ef502c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ONLYINTVARS</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a5bb54eab72c75fdd2a6b7716a86d9242</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ONLYACTIVEROWS</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>ac8898b10b113f96d7b05be305053119c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USECUTPOOL</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a06347ead67b6a2517d51b4903fef54b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PRIMALSEPARATION</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>aa3063e928b5c05669d80c7e951beb97d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ONLYRANKONE</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a712fecaaa403ab562be548d6dbade6a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_EARLYTERM</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a9613ac0f1b241584946e8a1b7f92bbb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ADDVIOLATIONCONS</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a1bb6f87e9d6c635bcdd67aa621117537</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ADDVIOLCONSHDLR</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a0f5d01b86e5f2aed6883bd91eaf4b3f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_CONSHDLRUSENORM</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a0a1d6fbae8e5e65596c90d7c011ffa8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_OBJLONE</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a853f96333383f47f040840177bdb2560</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NROWSTOOSMALL</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a32cd772b1d546ea33584dcf87910edc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NCOLSTOOSMALL</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a5b05b67c6ce8a63dad647329b1e06406</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSILONVALUE</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a01e0b41742d9b1d650381c9770e4935c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BETAEPSILONVALUE</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>aaf56da78053ea0e161e2526b61b5ce1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CUTCOEFBND</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>aed5372be059953330193132ae420cfa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STALLNODELIMIT</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>af008b7b944e4f2abab8f5a8bad9917c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINEFFICACY</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>aeb5e0f639d3d58355dc539d497db33b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOUNDSWITCH</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a1a447f376cecdc9b6aedde50d6c470b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USEVBDS</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a9e8a9590dc1814a1ac94b16eea7dd151</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINFRAC</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>ab98154852fd7c0b318a9b61ffb529cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXFRAC</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a30f87df2f7125fd62e77170223080fff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FIXINTEGRALRHS</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a7fc280cb443cd312301d4f27aea5af71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAKECONTINTEGRAL</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a579dafd8430545ce4e5884e4c535867c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXWEIGHTRANGE</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>ab7234f8a26e287b5dbfe75b1c71434fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXAGGRLEN</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>abb589f7728d5576efea04f13acab67d8</anchor>
      <arglist>(nvars)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_NAME</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>ae7664ee3a76f4898578799b9194a783d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONSHDLR_DESC</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a1fa323744fa4e37db6300fbd6be84b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitCGMIP</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>ab0cba1fc12bf2558df21cdee8d44baee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitCGMIP</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a15445e9efb8e6fceb7a73575aa75e0f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitsolCGMIP</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>ad93e4fa30a03c16411e49918493b76e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitsolCGMIP</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>ac7e49d7a4e66f859503efc8ee39efc03</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExecsolCGMIP</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a0d353c88e18cdfeb2f53c8dc83314515</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum CGMIP_ColType</type>
      <name>CGMIP_COLTYPE</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>af5c9321d290980eae54a265d82730a7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CGMIP_MIPData</type>
      <name>CGMIP_MIPDATA</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a9ae48273b5faddbea9498cbb8a1950f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>CGMIP_ColType</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a5041a1931bcbffd95dbc29254b288fb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>colPresent</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a5041a1931bcbffd95dbc29254b288fb4a983132bf86655e83e81440b060994c1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>colContinuous</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a5041a1931bcbffd95dbc29254b288fb4a5be054b6c9a860a1afffa602eca5846c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>colAtUb</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a5041a1931bcbffd95dbc29254b288fb4ad08e6d49ccb578a1764beebf2d0f35ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>colAtLb</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a5041a1931bcbffd95dbc29254b288fb4adb703764f320abdcad88c217cfc4214b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaCGMIP</name>
      <anchorfile>sepa__cgmip_8c.html</anchorfile>
      <anchor>a69c90dfe63c76fae4cfb392383c58f08</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_cgmip.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__cgmip_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaCGMIP</name>
      <anchorfile>sepa__cgmip_8h.html</anchorfile>
      <anchor>a69c90dfe63c76fae4cfb392383c58f08</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_clique.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__clique_8c</filename>
    <includes id="sepa__clique_8h" name="sepa_clique.h" local="yes" imported="no">scip/sepa_clique.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_NAME</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>ac332c84ab25c218d1d8202c6146caefd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DESC</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>a45cf8e00d2f940825fa84fa77186db3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_PRIORITY</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>a0535caa45f9e1afe1cd95c9966944eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_FREQ</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>ab5f039f7abda813877aaaa6f3963a30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_MAXBOUNDDIST</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>aa8023c88e4055fc0ef214cf626ffcc8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_USESSUBSCIP</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>a5e087d59f6ad6100a861f130f6b74ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DELAY</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>a1a9c881b7658edfd3ce81261dd862fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SCALEVAL</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>a06e0e7734762b3d8c3dd2ad31cc0da08</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXTREENODES</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>a0d8cbbc58e394c5cdd48031aa8651856</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_BACKTRACKFREQ</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>a50fbba319609bf8b8dafd1bcc627019a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTS</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>ac1ee053eab0810875e4ad04309d47ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXZEROEXTENSIONS</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>a6a129bb5b211bbc5ae86a8fd0e7cd789</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_CLIQUETABLEMEM</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>a5bf3a2903b58aeafdca59a40dea46e5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_CLIQUEDENSITY</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>a24fd6d8905428d0b62219f089598a882</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitClique</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>ab7475d018f486a2919bb737e60498726</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitClique</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>ab48013ea09848d0c644fd052c77c7904</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitsolClique</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>aacb13a27978cae90280f36f885d5a0a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaClique</name>
      <anchorfile>sepa__clique_8c.html</anchorfile>
      <anchor>a5ddb896ec754c805aefbf06788fd921b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_clique.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__clique_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaClique</name>
      <anchorfile>sepa__clique_8h.html</anchorfile>
      <anchor>a5ddb896ec754c805aefbf06788fd921b</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_cmir.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__cmir_8c</filename>
    <includes id="sepa__cmir_8h" name="sepa_cmir.h" local="yes" imported="no">scip/sepa_cmir.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_NAME</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>ac332c84ab25c218d1d8202c6146caefd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DESC</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a45cf8e00d2f940825fa84fa77186db3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_PRIORITY</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a0535caa45f9e1afe1cd95c9966944eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_FREQ</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>ab5f039f7abda813877aaaa6f3963a30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_MAXBOUNDDIST</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>aa8023c88e4055fc0ef214cf626ffcc8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_USESSUBSCIP</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a5e087d59f6ad6100a861f130f6b74ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DELAY</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a1a9c881b7658edfd3ce81261dd862fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDS</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>ad1a925058883d0cd959cea25479f6436</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDSROOT</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a5c62f47fd3344274a3ec1b924cdc2a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXTRIES</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a05f042f376fb126e5da25fd5147bbaf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXTRIESROOT</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a7698a7d364a741dcb49f7c1d23f7db7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXFAILS</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a2f950bff901b6ccc494e1742e5fad8f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXFAILSROOT</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a5a76f89cbf681e264c12aca7fdee927b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXAGGRS</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a290c590f54c0da81d60a7e67c861d5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXAGGRSROOT</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a5bc2d57cf1c45b57b824abc2d3790dd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTS</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>ac1ee053eab0810875e4ad04309d47ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTSROOT</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a869aa0207dd459a9bbc8cb7b4c18084e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSLACK</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a6d31d0ab81e3ed640f82b682941e1c78</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSLACKROOT</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a508937286ce802b2f917888ebafa51a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DENSITYSCORE</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a87adc00f9a8ddc3cfe604d4eeb952c41</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SLACKSCORE</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a24e85e86ad75f31b84698defeb3de1fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXAGGDENSITY</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>ac3296a433bfda3f9164380ef6053faff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROWDENSITY</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>af3c520d1996caca87c8e4289f9dd5bac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DENSITYOFFSET</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a88e7d46734b4fe0814574fcb0b4e1fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROWFAC</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a7df43ad69198618ca87668a42df8db40</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXTESTDELTA</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>aa2b2e28c5ec571875fc426767cf8c20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXCONTS</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a3076cd4979f7a2a3b47266ccb57e8f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXCONTSROOT</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a5e8c874b835ebe8d6a42675e2828c86d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_AGGRTOL</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a36af0ae05242e0aa825ac3e6fe140e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_TRYNEGSCALING</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a736324b2d9984f47fc237cc70099133c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_FIXINTEGRALRHS</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a8e0520a586d3351a898239ab23608ce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DYNAMICCUTS</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a371bcfe5582f0dd63d774b66a8d7771f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOUNDSWITCH</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a1a447f376cecdc9b6aedde50d6c470b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USEVBDS</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a9e8a9590dc1814a1ac94b16eea7dd151</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALLOWLOCAL</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a63f49a1ccaf2623490789eeb0abd1fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINFRAC</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>ab98154852fd7c0b318a9b61ffb529cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXFRAC</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a30f87df2f7125fd62e77170223080fff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAKECONTINTEGRAL</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a579dafd8430545ce4e5884e4c535867c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMPLINTSARECONT</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a24450d939db01b95d7b246de9672b599</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXAGGRLEN</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>abb589f7728d5576efea04f13acab67d8</anchor>
      <arglist>(nvars)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitCmir</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a03ca2c679d47dfc5835fbe4585cb7c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitCmir</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a025797279b9cab9bcdf24afeaa432cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitsolCmir</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>a4b833d70d710f2ffb99e7be44b85cbe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitsolCmir</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>ab073dc0f061c48acca0364ca3fcf0b33</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcutGenerationHeuristicCmir</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>ae15b8244880b13a733db514b295c1a82</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Real *varsolvals, int maxtestdelta, SCIP_Real *rowweights, SCIP_Real boundswitch, SCIP_Bool usevbds, SCIP_Bool allowlocal, SCIP_Bool fixintegralrhs, int maxmksetcoefs, SCIP_Real maxweightrange, SCIP_Real minfrac, SCIP_Real maxfrac, SCIP_Bool trynegscaling, SCIP_Bool cutremovable, const char *cutclassname, int *ncuts, SCIP_Real *delta, SCIP_Bool *deltavalid)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaCmir</name>
      <anchorfile>sepa__cmir_8c.html</anchorfile>
      <anchor>ae85301baa9e6fe709194a72f116003af</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_cmir.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__cmir_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPcutGenerationHeuristicCmir</name>
      <anchorfile>sepa__cmir_8h.html</anchorfile>
      <anchor>ae15b8244880b13a733db514b295c1a82</anchor>
      <arglist>(SCIP *scip, SCIP_SOL *sol, SCIP_Real *varsolvals, int maxtestdelta, SCIP_Real *rowweights, SCIP_Real boundswitch, SCIP_Bool usevbds, SCIP_Bool allowlocal, SCIP_Bool fixintegralrhs, int maxmksetcoefs, SCIP_Real maxweightrange, SCIP_Real minfrac, SCIP_Real maxfrac, SCIP_Bool trynegscaling, SCIP_Bool cutremovable, const char *cutclassname, int *ncuts, SCIP_Real *delta, SCIP_Bool *deltavalid)</arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaCmir</name>
      <anchorfile>sepa__cmir_8h.html</anchorfile>
      <anchor>ae85301baa9e6fe709194a72f116003af</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_flowcover.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__flowcover_8c</filename>
    <includes id="sepa__flowcover_8h" name="sepa_flowcover.h" local="yes" imported="no">scip/sepa_flowcover.h</includes>
    <includes id="cons__knapsack_8h" name="cons_knapsack.h" local="yes" imported="no">scip/cons_knapsack.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_NAME</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>ac332c84ab25c218d1d8202c6146caefd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DESC</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a45cf8e00d2f940825fa84fa77186db3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_PRIORITY</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a0535caa45f9e1afe1cd95c9966944eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_FREQ</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>ab5f039f7abda813877aaaa6f3963a30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_MAXBOUNDDIST</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>aa8023c88e4055fc0ef214cf626ffcc8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_USESSUBSCIP</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a5e087d59f6ad6100a861f130f6b74ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DELAY</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a1a9c881b7658edfd3ce81261dd862fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDS</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>ad1a925058883d0cd959cea25479f6436</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDSROOT</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a5c62f47fd3344274a3ec1b924cdc2a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXTRIES</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a05f042f376fb126e5da25fd5147bbaf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXTRIESROOT</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a7698a7d364a741dcb49f7c1d23f7db7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXFAILS</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a2f950bff901b6ccc494e1742e5fad8f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXFAILSROOT</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a5a76f89cbf681e264c12aca7fdee927b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTS</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>ac1ee053eab0810875e4ad04309d47ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTSROOT</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a869aa0207dd459a9bbc8cb7b4c18084e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSLACK</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a6d31d0ab81e3ed640f82b682941e1c78</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSLACKROOT</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a508937286ce802b2f917888ebafa51a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SLACKSCORE</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a24e85e86ad75f31b84698defeb3de1fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROWDENSITY</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>af3c520d1996caca87c8e4289f9dd5bac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DYNAMICCUTS</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a371bcfe5582f0dd63d774b66a8d7771f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXTESTDELTA</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>aa2b2e28c5ec571875fc426767cf8c20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MULTBYMINUSONE</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a139c464b09650fd2bdba33c3c75789a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOUNDSWITCH</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a1a447f376cecdc9b6aedde50d6c470b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALLOWLOCAL</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a63f49a1ccaf2623490789eeb0abd1fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DENSSCORE</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>ae508649d87144a1d53499810401a3b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINFRAC</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>ab98154852fd7c0b318a9b61ffb529cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXFRAC</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a30f87df2f7125fd62e77170223080fff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FIXINTEGRALRHS</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a7fc280cb443cd312301d4f27aea5af71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXDNOM</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a15826381c8e8f7a1c28ffd6756f273db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINDELTA</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a88b8f46286cdbba35fd3eba01ea38d74</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXDELTA</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a5cbe1f7d4536ef1fe57e651bc838711a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSCALE</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a5d1a2a1a1e28a7bcf48b1c9be1689abd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXDYNPROGSPACE</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>aa96e1ba192ecc62a65c2562a1f720286</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXAGGRLEN</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>abb589f7728d5576efea04f13acab67d8</anchor>
      <arglist>(nvars)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXABSVBCOEF</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>ad5220578600b445b27e18d964f18c07d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitFlowcover</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a26fde7e858efdeaa05c4cb6abca70cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitFlowcover</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a65b2e05fb284a68d41a60bda5a4d2511</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitsolFlowcover</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>ab51cb7f0ec60dc46227ea00a350ad2fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitsolFlowcover</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>a06d51d3ec7a14ac8a516372bc4fe8e4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaFlowcover</name>
      <anchorfile>sepa__flowcover_8c.html</anchorfile>
      <anchor>aaf4f275c9e2b242c523f5a75c30609f5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_flowcover.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__flowcover_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaFlowcover</name>
      <anchorfile>sepa__flowcover_8h.html</anchorfile>
      <anchor>aaf4f275c9e2b242c523f5a75c30609f5</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_gomory.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__gomory_8c</filename>
    <includes id="sepa__gomory_8h" name="sepa_gomory.h" local="yes" imported="no">scip/sepa_gomory.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_NAME</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>ac332c84ab25c218d1d8202c6146caefd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DESC</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a45cf8e00d2f940825fa84fa77186db3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_PRIORITY</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a0535caa45f9e1afe1cd95c9966944eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_FREQ</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>ab5f039f7abda813877aaaa6f3963a30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_MAXBOUNDDIST</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>aa8023c88e4055fc0ef214cf626ffcc8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_USESSUBSCIP</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a5e087d59f6ad6100a861f130f6b74ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DELAY</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a1a9c881b7658edfd3ce81261dd862fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDS</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>ad1a925058883d0cd959cea25479f6436</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDSROOT</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a5c62f47fd3344274a3ec1b924cdc2a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTS</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>ac1ee053eab0810875e4ad04309d47ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTSROOT</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a869aa0207dd459a9bbc8cb7b4c18084e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DYNAMICCUTS</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a371bcfe5582f0dd63d774b66a8d7771f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXWEIGHTRANGE</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a279e269bbbbe9916cfc10b324618cad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAKECUTINTEGRAL</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a1eef88b3296ec767c3f2e26d99a36004</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORCECUTINTEGRAL</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>aab43338d49251c9a7438df575bc65337</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPARATEROWS</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a65cf8746505ac6548bf66e057912626b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOUNDSWITCH</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a1a447f376cecdc9b6aedde50d6c470b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USEVBDS</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a9e8a9590dc1814a1ac94b16eea7dd151</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALLOWLOCAL</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a63f49a1ccaf2623490789eeb0abd1fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FIXINTEGRALRHS</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a7fc280cb443cd312301d4f27aea5af71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAKECONTINTEGRAL</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a579dafd8430545ce4e5884e4c535867c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINFRAC</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>ab98154852fd7c0b318a9b61ffb529cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXFRAC</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a30f87df2f7125fd62e77170223080fff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXAGGRLEN</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>abb589f7728d5576efea04f13acab67d8</anchor>
      <arglist>(nvars)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitGomory</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a6ff1fd079ba31fb125769a30085c0596</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitGomory</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a53bf29c24c3ddee607977439f3312749</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitsolGomory</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a4c1edc1203a7bef5d306df8243cd06c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitsolGomory</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>a1ef1ceaaa23bd5030e99363e1c67cc82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExecsolGomory</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>ae38d44db0ea089f94ace3484877f872c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaGomory</name>
      <anchorfile>sepa__gomory_8c.html</anchorfile>
      <anchor>af62d66cb36a24adce8603c9fde9eeac2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_gomory.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__gomory_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaGomory</name>
      <anchorfile>sepa__gomory_8h.html</anchorfile>
      <anchor>af62d66cb36a24adce8603c9fde9eeac2</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_impliedbounds.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__impliedbounds_8c</filename>
    <includes id="sepa__impliedbounds_8h" name="sepa_impliedbounds.h" local="yes" imported="no">scip/sepa_impliedbounds.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_NAME</name>
      <anchorfile>sepa__impliedbounds_8c.html</anchorfile>
      <anchor>ac332c84ab25c218d1d8202c6146caefd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DESC</name>
      <anchorfile>sepa__impliedbounds_8c.html</anchorfile>
      <anchor>a45cf8e00d2f940825fa84fa77186db3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_PRIORITY</name>
      <anchorfile>sepa__impliedbounds_8c.html</anchorfile>
      <anchor>a0535caa45f9e1afe1cd95c9966944eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_FREQ</name>
      <anchorfile>sepa__impliedbounds_8c.html</anchorfile>
      <anchor>ab5f039f7abda813877aaaa6f3963a30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_MAXBOUNDDIST</name>
      <anchorfile>sepa__impliedbounds_8c.html</anchorfile>
      <anchor>aa8023c88e4055fc0ef214cf626ffcc8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_USESSUBSCIP</name>
      <anchorfile>sepa__impliedbounds_8c.html</anchorfile>
      <anchor>a5e087d59f6ad6100a861f130f6b74ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DELAY</name>
      <anchorfile>sepa__impliedbounds_8c.html</anchorfile>
      <anchor>a1a9c881b7658edfd3ce81261dd862fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaFreeImpliedbounds</name>
      <anchorfile>sepa__impliedbounds_8c.html</anchorfile>
      <anchor>ae3d668a73a96ae553d00ea3699e01208</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitImpliedbounds</name>
      <anchorfile>sepa__impliedbounds_8c.html</anchorfile>
      <anchor>ad407e8195d86a9cec5ab9be22a678957</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitImpliedbounds</name>
      <anchorfile>sepa__impliedbounds_8c.html</anchorfile>
      <anchor>af9e332c43332e20570e0e03d3dec25db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitsolImpliedbounds</name>
      <anchorfile>sepa__impliedbounds_8c.html</anchorfile>
      <anchor>a7f4ef1c8299e704e3be0f078d653183c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitsolImpliedbounds</name>
      <anchorfile>sepa__impliedbounds_8c.html</anchorfile>
      <anchor>a36756068acc4900cea5b00ed29020c3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaImpliedbounds</name>
      <anchorfile>sepa__impliedbounds_8c.html</anchorfile>
      <anchor>a7a678e395b274809eb4820ddfcfea9ef</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_impliedbounds.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__impliedbounds_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaImpliedbounds</name>
      <anchorfile>sepa__impliedbounds_8h.html</anchorfile>
      <anchor>a7a678e395b274809eb4820ddfcfea9ef</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_intobj.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__intobj_8c</filename>
    <includes id="sepa__intobj_8h" name="sepa_intobj.h" local="yes" imported="no">scip/sepa_intobj.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_NAME</name>
      <anchorfile>sepa__intobj_8c.html</anchorfile>
      <anchor>ac332c84ab25c218d1d8202c6146caefd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DESC</name>
      <anchorfile>sepa__intobj_8c.html</anchorfile>
      <anchor>a45cf8e00d2f940825fa84fa77186db3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_PRIORITY</name>
      <anchorfile>sepa__intobj_8c.html</anchorfile>
      <anchor>a0535caa45f9e1afe1cd95c9966944eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_FREQ</name>
      <anchorfile>sepa__intobj_8c.html</anchorfile>
      <anchor>ab5f039f7abda813877aaaa6f3963a30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_MAXBOUNDDIST</name>
      <anchorfile>sepa__intobj_8c.html</anchorfile>
      <anchor>aa8023c88e4055fc0ef214cf626ffcc8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_USESSUBSCIP</name>
      <anchorfile>sepa__intobj_8c.html</anchorfile>
      <anchor>a5e087d59f6ad6100a861f130f6b74ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DELAY</name>
      <anchorfile>sepa__intobj_8c.html</anchorfile>
      <anchor>a1a9c881b7658edfd3ce81261dd862fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_NAME</name>
      <anchorfile>sepa__intobj_8c.html</anchorfile>
      <anchor>aea7e068fd23523fb86409f7437f49851</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENTHDLR_DESC</name>
      <anchorfile>sepa__intobj_8c.html</anchorfile>
      <anchor>acd6ea343facf9430a46f3d1f3d6c675b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitIntobj</name>
      <anchorfile>sepa__intobj_8c.html</anchorfile>
      <anchor>a077b5f0fb2839b9eb7246f64b1ef3095</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitsolIntobj</name>
      <anchorfile>sepa__intobj_8c.html</anchorfile>
      <anchor>af9b9cb1fd69ff0f49659649b3f28c8e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>eventFreeIntobj</name>
      <anchorfile>sepa__intobj_8c.html</anchorfile>
      <anchor>acfd76be1de9a6d2872a192f95d6a5e89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>eventInitsolIntobj</name>
      <anchorfile>sepa__intobj_8c.html</anchorfile>
      <anchor>aa8b6794dcf20220faeb2750de491593e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>eventExitsolIntobj</name>
      <anchorfile>sepa__intobj_8c.html</anchorfile>
      <anchor>a4a614bffdb20f8492478344340a6069f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>eventDeleteIntobj</name>
      <anchorfile>sepa__intobj_8c.html</anchorfile>
      <anchor>aa565e9b05b8aee19060cc55be49957d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaIntobj</name>
      <anchorfile>sepa__intobj_8c.html</anchorfile>
      <anchor>a2edbf206b7425ef1bf6a16c778e52841</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_intobj.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__intobj_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaIntobj</name>
      <anchorfile>sepa__intobj_8h.html</anchorfile>
      <anchor>a2edbf206b7425ef1bf6a16c778e52841</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_mcf.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__mcf_8c</filename>
    <includes id="sepa__mcf_8h" name="sepa_mcf.h" local="yes" imported="no">scip/sepa_mcf.h</includes>
    <includes id="cons__knapsack_8h" name="cons_knapsack.h" local="yes" imported="no">scip/cons_knapsack.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BETTERWEIGHTFORDEMANDNODES</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>ad40459a21c3e3ea80a289c1c8efab8e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_NAME</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>ac332c84ab25c218d1d8202c6146caefd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DESC</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a45cf8e00d2f940825fa84fa77186db3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_PRIORITY</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a0535caa45f9e1afe1cd95c9966944eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_FREQ</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>ab5f039f7abda813877aaaa6f3963a30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_MAXBOUNDDIST</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>aa8023c88e4055fc0ef214cf626ffcc8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_USESSUBSCIP</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a5e087d59f6ad6100a861f130f6b74ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DELAY</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a1a9c881b7658edfd3ce81261dd862fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NCLUSTERS</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>aa591fd07ebfa4a5b1d76404a4192ade6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXWEIGHTRANGE</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a279e269bbbbe9916cfc10b324618cad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXTESTDELTA</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>aa2b2e28c5ec571875fc426767cf8c20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_TRYNEGSCALING</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a736324b2d9984f47fc237cc70099133c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_FIXINTEGRALRHS</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a8e0520a586d3351a898239ab23608ce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DYNAMICCUTS</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a371bcfe5582f0dd63d774b66a8d7771f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MODELTYPE</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a2300c3030941ac36aff24c515da7fa94</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTS</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>ac1ee053eab0810875e4ad04309d47ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTSROOT</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a869aa0207dd459a9bbc8cb7b4c18084e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXINCONSISTENCYRATIO</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>afb84cb85e2f8554d690afdd163941531</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXARCINCONSISTENCYRATIO</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a2942f46cf982c008130be1887786b236</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_CHECKCUTSHORECONNECTIVITY</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a6e7311b6a62732bec48b320f2215e08f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SEPARATESINGLENODECUTS</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a867d57a786fe14516446564e60b33407</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SEPARATEFLOWCUTSET</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a4be9e37943add456312aad70b77c0b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SEPARATEKNAPSACK</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>afb1fa8d191a3f8e5fd476cbbe254c6f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOUNDSWITCH</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a1a447f376cecdc9b6aedde50d6c470b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USEVBDS</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a9e8a9590dc1814a1ac94b16eea7dd151</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALLOWLOCAL</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a63f49a1ccaf2623490789eeb0abd1fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINFRAC</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>ab98154852fd7c0b318a9b61ffb529cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXFRAC</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a30f87df2f7125fd62e77170223080fff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXCOLS</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a6a83dc415ae5e205183f0488b46228c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXAGGRLEN</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>abb589f7728d5576efea04f13acab67d8</anchor>
      <arglist>(nvars)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINCOLROWRATIO</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>acad9b65760f4ac0a2033533d623c7e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXCOLROWRATIO</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a7cd54c6d7f9acf87dda64275b5045df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXFLOWVARFLOWROWRATIO</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a87adc2e4448e2a0fe3931c7f2486ac9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXARCNODERATIO</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>ad09a9efdca875cfb12ee06e633ae8d89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXNETWORKS</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>ac966e15b02dbde636575dbe9f5d4e927</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXFLOWCANDDENSITY</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>afcf612555729d35e3a4cd1445c4786b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINCOMNODESFRACTION</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>ad4f1d8ce6ecef173354631b589e353f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINNODES</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a0714905b9ad8663109ec30eaa1f3cdb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINARCS</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>acf269b6446a9411678c06fb00808b7ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXCAPACITYSLACK</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a3a19de7dbc3db28ea28e1a364b1f8b06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNCAPACITATEDARCSTRESHOLD</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a56095a3bda1f770d0ccf0db472075e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASHSIZE_NODEPAIRS</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a4d3b610c5f816f1c1222265da3b443ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MCFdebugMessage</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a704ca422cacf2fbb661cc7b6a49515d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LHSPOSSIBLE</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>ae055c2d494929f75c75bfa4d73899e22</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RHSPOSSIBLE</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a6eb3f839ab716380088824ff8561eb58</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LHSASSIGNED</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>abff8a59bddc9d9dfa0143706c4c585b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RHSASSIGNED</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>aefe6a7f74a2a3633d2a51f1bd581a0a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INVERTED</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>ab05995eec69c22f9170313d727c35788</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISCARDED</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a5f93d9770df9717c26bc883797bdc07e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNDIRECTED</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a6e7c76db5301e49e48cacdd2453732fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNKNOWN</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>ac1ae4add974b9cfc6b5aaf8a578f01ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ONSTACK</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>afd08bf2eee10e9e438f7f349c828e6bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VISITED</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a28615ad40e5d11edaefd903c02206f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitMcf</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>adfdda1a341ebf1b90d90a57f2e06f51e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitMcf</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a76499b9da3b822ead13e39a26b30d31a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_McfModeltype</type>
      <name>SCIP_MCFMODELTYPE</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a79bb2c77d0201a3ac555ce052373d583</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum McfEffortLevel</type>
      <name>MCFEFFORTLEVEL</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a3cdbfd5e8251d6978505a81dd877e7e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_McfNetwork</type>
      <name>SCIP_MCFNETWORK</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a179cdcf37686e558dd0c79b017f1017c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct mcfdata</type>
      <name>MCFDATA</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a577e7eb37f6b19ee08479f4cda2f4ae2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct nodepair</type>
      <name>NODEPAIRENTRY</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a22287af6df73483afc6f3785b6d3e82a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct nodepairqueue</type>
      <name>NODEPAIRQUEUE</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a7ff37769a6870b9fec1a038397217d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct nodepartition</type>
      <name>NODEPARTITION</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a2a410827266dd8e02e4823ac3a41b963</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_McfModeltype</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>ae04c1d004c2b6802d8571e4554750bd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_MCFMODELTYPE_AUTO</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>ae04c1d004c2b6802d8571e4554750bd7a076a05a6f06d97e2225bf01a00dc50df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_MCFMODELTYPE_DIRECTED</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>ae04c1d004c2b6802d8571e4554750bd7af79ce492b23e36cd24103faa34ca70f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_MCFMODELTYPE_UNDIRECTED</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>ae04c1d004c2b6802d8571e4554750bd7a61091254433d5ae9a112035f922b3c7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>McfEffortLevel</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a63f865780b09e6d07dfd412e7484efd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MCFEFFORTLEVEL_OFF</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a63f865780b09e6d07dfd412e7484efd6a18fb751c37b5cda895cc0b5c2252c2bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MCFEFFORTLEVEL_DEFAULT</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a63f865780b09e6d07dfd412e7484efd6a6a8be24856f9b3ab37c6cd657f8ea50d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MCFEFFORTLEVEL_AGGRESSIVE</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a63f865780b09e6d07dfd412e7484efd6acaf314e10385676ed482b899f5d2b339</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaMcf</name>
      <anchorfile>sepa__mcf_8c.html</anchorfile>
      <anchor>a19ef83abde30deba9bcfaf179478264f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_mcf.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__mcf_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaMcf</name>
      <anchorfile>sepa__mcf_8h.html</anchorfile>
      <anchor>a19ef83abde30deba9bcfaf179478264f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_oddcycle.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__oddcycle_8c</filename>
    <includes id="sepa__oddcycle_8h" name="sepa_oddcycle.h" local="yes" imported="no">scip/sepa_oddcycle.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <includes id="dijkstra__bh_8h" name="dijkstra_bh.h" local="yes" imported="no">dijkstra/dijkstra_bh.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_NAME</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>ac332c84ab25c218d1d8202c6146caefd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DESC</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a45cf8e00d2f940825fa84fa77186db3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_PRIORITY</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a0535caa45f9e1afe1cd95c9966944eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_FREQ</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>ab5f039f7abda813877aaaa6f3963a30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_MAXBOUNDDIST</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>aa8023c88e4055fc0ef214cf626ffcc8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_USESSUBSCIP</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a5e087d59f6ad6100a861f130f6b74ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DELAY</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a1a9c881b7658edfd3ce81261dd862fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SCALE_FACTOR</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>ac86dd87fca03cae7515255c77585a05f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USE_CLASSICAL</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a303cec0085ccc9b02372aa5af8873c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_LIFT</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a3e7a763c52bfa2bd1f3260fc2894a76a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_REPAIR_CYCLES</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a878bc6b828374907260b7e40d1cf4b63</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ADD_SELF_ARCS</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a0e7061d035543710f6d0e3b5e9df9f12</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_INCLUDE_TRIANGLES</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>aee517d9afaeee300b95e224486366915</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SEARCH_MULTIPLE_CUTS_PER_NODE</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>ad955fe4249fda644d43804fc33dbd322</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ALLOW_MULTIPLE_CUTS_PER_NODE</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a8f57e0dfb3532ff15ed30918c7622746</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_LPWEIGHTED_LIFTCOEF</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a0505c005a9d5985010c05c322dad4d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_CALC_LIFTCOEF_PER_STEP</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>adc7c632e7889412e0edf88785e53f885</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTS</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>ac1ee053eab0810875e4ad04309d47ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTSROOT</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a869aa0207dd459a9bbc8cb7b4c18084e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PERCENT_TESTVARS</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a123a8fe1ef75012c89f0cf38e06afb68</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_OFFSET_TESTVARS</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a539ce6757e18377eb170b78f92055f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXCUTSPERROOT</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a6934c60b96d47c7abbc2fa71be488495</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SORTSWITCH</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>ab68f13dfca08367d77f19f6925e42d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXREFERENCE</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>af872fb7b62ef77480650e206dcf02844</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDS</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>ad1a925058883d0cd959cea25479f6436</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDSROOT</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a5c62f47fd3344274a3ec1b924cdc2a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXNLEVELS</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a6915811d50f0d2815fee8e347ecbb31e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PERCENT_GRAPHNODES_PER_LEVEL</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>aa7591a6cf3bacee61bc022d0d1fa54dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_OFFSET_GRAPHNODES_PER_LEVEL</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a98b156e34069b47a7b49fae89991b657</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SORT_ROOT_NEIGHBORS</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>abd8b06d11a31c0c77fface492c78fd6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXCUTSPERLEVEL</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a70a39e9c16c4be55d254621dae3c7276</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitOddcycle</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a6778699d174fab9636f93e63354715d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitsolOddcycle</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a8cf52304f66680f2b58c72d2d38a84a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitsolOddcycle</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a59118322d92400fa9faeaddc649ed3ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExecsolOddcycle</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>ab224d4239785b8a83e769428685b1040</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct levelGraph</type>
      <name>LEVELGRAPH</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>adb303bf48ba4891041886933358171c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum sorttype</type>
      <name>SORTTYPE</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>ac8d3276298cba79505098a94747f717b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>sorttype</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a51674ec4673448e761cbd760bb879587</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSORTED</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a51674ec4673448e761cbd760bb879587a1a2838b9d343551f39b940a4001bb6f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAXIMAL_LP_VALUE</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a51674ec4673448e761cbd760bb879587a2b5816fae053c6175fb58bc49c0b0d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINIMAL_LP_VALUE</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a51674ec4673448e761cbd760bb879587af74dc25ab01eccb07e0b9f7f5de4af09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAXIMAL_FRACTIONALITY</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a51674ec4673448e761cbd760bb879587a88d512c57ae27e462d6c7ad5623b4ecd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MINIMAL_FRACTIONALITY</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a51674ec4673448e761cbd760bb879587a46cf59c3d9ef8c657d29a360b93002ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaOddcycle</name>
      <anchorfile>sepa__oddcycle_8c.html</anchorfile>
      <anchor>a72a57e303c78268177f3af242b36040e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_oddcycle.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__oddcycle_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaOddcycle</name>
      <anchorfile>sepa__oddcycle_8h.html</anchorfile>
      <anchor>a72a57e303c78268177f3af242b36040e</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_rapidlearning.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__rapidlearning_8c</filename>
    <includes id="sepa__rapidlearning_8h" name="sepa_rapidlearning.h" local="yes" imported="no">scip/sepa_rapidlearning.h</includes>
    <includes id="pub__var_8h" name="pub_var.h" local="yes" imported="no">scip/pub_var.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_NAME</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>ac332c84ab25c218d1d8202c6146caefd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DESC</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>a45cf8e00d2f940825fa84fa77186db3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_PRIORITY</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>a0535caa45f9e1afe1cd95c9966944eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_FREQ</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>ab5f039f7abda813877aaaa6f3963a30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_MAXBOUNDDIST</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>aa8023c88e4055fc0ef214cf626ffcc8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_USESSUBSCIP</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>a5e087d59f6ad6100a861f130f6b74ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DELAY</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>a1a9c881b7658edfd3ce81261dd862fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_APPLYCONFLICTS</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>ac084f849f664c21ca11b1459d80ffc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_APPLYBDCHGS</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>ae4b85c03e054d0aa4017f73bd3a3c4ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_APPLYINFERVALS</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>af6610a62849179947e21fb9609214e81</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_APPLYPRIMALSOL</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>aeb71784f73e4292e45eaa1b0ea74844b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_APPLYSOLVED</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>a43f77f478400ceeb5c5bc8e4e5e4a470</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXNVARS</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>a7d1412dd67bb8b65af116e2bbdf695ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXNCONSS</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>a0748efdaecd9b7b13d2484c74af780bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINNODES</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>a3da17bad844be18620349fa5350fa3b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXNODES</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>a3522837756f274876c305e4c1b4f6df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitRapidlearning</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>aa2c43cdb3791cfbca36f7ead54f2a6bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitRapidlearning</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>a4c5c0b89ae68ba8065e1ba5b7057014d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitsolRapidlearning</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>a5912629dd50480750e08987a32b3156c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitsolRapidlearning</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>a7d75db3c53e0b2f431c6bc8138946c22</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExecsolRapidlearning</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>a6b35ba8fdc8291a8375a28759a6cfbfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaRapidlearning</name>
      <anchorfile>sepa__rapidlearning_8c.html</anchorfile>
      <anchor>a296cdc6f6ccc4941ca6ff7153fce691a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_rapidlearning.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__rapidlearning_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaRapidlearning</name>
      <anchorfile>sepa__rapidlearning_8h.html</anchorfile>
      <anchor>a296cdc6f6ccc4941ca6ff7153fce691a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_redcost.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__redcost_8c</filename>
    <includes id="sepa__redcost_8h" name="sepa_redcost.h" local="yes" imported="no">scip/sepa_redcost.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_NAME</name>
      <anchorfile>sepa__redcost_8c.html</anchorfile>
      <anchor>ac332c84ab25c218d1d8202c6146caefd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DESC</name>
      <anchorfile>sepa__redcost_8c.html</anchorfile>
      <anchor>a45cf8e00d2f940825fa84fa77186db3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_PRIORITY</name>
      <anchorfile>sepa__redcost_8c.html</anchorfile>
      <anchor>a0535caa45f9e1afe1cd95c9966944eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_FREQ</name>
      <anchorfile>sepa__redcost_8c.html</anchorfile>
      <anchor>ab5f039f7abda813877aaaa6f3963a30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_MAXBOUNDDIST</name>
      <anchorfile>sepa__redcost_8c.html</anchorfile>
      <anchor>aa8023c88e4055fc0ef214cf626ffcc8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_USESSUBSCIP</name>
      <anchorfile>sepa__redcost_8c.html</anchorfile>
      <anchor>a5e087d59f6ad6100a861f130f6b74ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DELAY</name>
      <anchorfile>sepa__redcost_8c.html</anchorfile>
      <anchor>a1a9c881b7658edfd3ce81261dd862fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_CONTINUOUS</name>
      <anchorfile>sepa__redcost_8c.html</anchorfile>
      <anchor>a73f55e50eaef8e28c55b0141de5ca287</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitRedcost</name>
      <anchorfile>sepa__redcost_8c.html</anchorfile>
      <anchor>aa85c334f97a7879692f30a07a854a94c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitRedcost</name>
      <anchorfile>sepa__redcost_8c.html</anchorfile>
      <anchor>a36074c8bd5f515aebedff80819e05f1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitsolRedcost</name>
      <anchorfile>sepa__redcost_8c.html</anchorfile>
      <anchor>aae5c310fd32f8c4b5266dacb5cc9cac2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitsolRedcost</name>
      <anchorfile>sepa__redcost_8c.html</anchorfile>
      <anchor>ab8b6534f0713c22e6d531716f6570655</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExecsolRedcost</name>
      <anchorfile>sepa__redcost_8c.html</anchorfile>
      <anchor>ad73484bf8752028c0091457be0f495aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaRedcost</name>
      <anchorfile>sepa__redcost_8c.html</anchorfile>
      <anchor>ad2c8aee26278e6c1af65a3a4c34727da</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_redcost.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__redcost_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaRedcost</name>
      <anchorfile>sepa__redcost_8h.html</anchorfile>
      <anchor>ad2c8aee26278e6c1af65a3a4c34727da</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_strongcg.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__strongcg_8c</filename>
    <includes id="sepa__strongcg_8h" name="sepa_strongcg.h" local="yes" imported="no">scip/sepa_strongcg.h</includes>
    <includes id="pub__misc_8h" name="pub_misc.h" local="yes" imported="no">scip/pub_misc.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_NAME</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>ac332c84ab25c218d1d8202c6146caefd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DESC</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a45cf8e00d2f940825fa84fa77186db3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_PRIORITY</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a0535caa45f9e1afe1cd95c9966944eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_FREQ</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>ab5f039f7abda813877aaaa6f3963a30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_MAXBOUNDDIST</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>aa8023c88e4055fc0ef214cf626ffcc8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_USESSUBSCIP</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a5e087d59f6ad6100a861f130f6b74ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DELAY</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a1a9c881b7658edfd3ce81261dd862fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDS</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>ad1a925058883d0cd959cea25479f6436</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDSROOT</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a5c62f47fd3344274a3ec1b924cdc2a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTS</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>ac1ee053eab0810875e4ad04309d47ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTSROOT</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a869aa0207dd459a9bbc8cb7b4c18084e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DYNAMICCUTS</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a371bcfe5582f0dd63d774b66a8d7771f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXWEIGHTRANGE</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a279e269bbbbe9916cfc10b324618cad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAKECUTINTEGRAL</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a1eef88b3296ec767c3f2e26d99a36004</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORCECUTINTEGRAL</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>aab43338d49251c9a7438df575bc65337</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPARATEROWS</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a65cf8746505ac6548bf66e057912626b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOUNDSWITCH</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a1a447f376cecdc9b6aedde50d6c470b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USEVBDS</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a9e8a9590dc1814a1ac94b16eea7dd151</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALLOWLOCAL</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a63f49a1ccaf2623490789eeb0abd1fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAKECONTINTEGRAL</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a579dafd8430545ce4e5884e4c535867c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINFRAC</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>ab98154852fd7c0b318a9b61ffb529cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXFRAC</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a30f87df2f7125fd62e77170223080fff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXAGGRLEN</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>abb589f7728d5576efea04f13acab67d8</anchor>
      <arglist>(nvars)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitStrongcg</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a8feb481910787e59ec3f9ad386c22a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitStrongcg</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a79de6107fc27c0f4f5f4f0664c137c1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitsolStrongcg</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>afca1517361eab0da8d5fe225f5ec5059</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitsolStrongcg</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a17e1184620d9ee1e6b0d31de1d2edfae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExecsolStrongcg</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>a91887d89741ee4a2b06aa58f862d2222</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaStrongcg</name>
      <anchorfile>sepa__strongcg_8c.html</anchorfile>
      <anchor>aab8f7ae818e9240d481998b8eec6cd9a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_strongcg.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__strongcg_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaStrongcg</name>
      <anchorfile>sepa__strongcg_8h.html</anchorfile>
      <anchor>aab8f7ae818e9240d481998b8eec6cd9a</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_zerohalf.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__zerohalf_8c</filename>
    <includes id="sepa__zerohalf_8h" name="sepa_zerohalf.h" local="yes" imported="no">sepa_zerohalf.h</includes>
    <includes id="cons__linear_8h" name="cons_linear.h" local="yes" imported="no">scip/cons_linear.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_NAME</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ac332c84ab25c218d1d8202c6146caefd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DESC</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a45cf8e00d2f940825fa84fa77186db3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_PRIORITY</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a0535caa45f9e1afe1cd95c9966944eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_FREQ</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ab5f039f7abda813877aaaa6f3963a30c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_USESSUBSCIP</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a5e087d59f6ad6100a861f130f6b74ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SEPA_DELAY</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a1a9c881b7658edfd3ce81261dd862fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ad1a925058883d0cd959cea25479f6436</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXROUNDSROOT</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a5c62f47fd3344274a3ec1b924cdc2a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ac1ee053eab0810875e4ad04309d47ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXSEPACUTSROOT</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a869aa0207dd459a9bbc8cb7b4c18084e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DYNAMICCUTS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a371bcfe5582f0dd63d774b66a8d7771f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_DECOMPOSEPROBLEM</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>afea89e062537a30d73dcf034f317475d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXDEPTH</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a69c3dd048ddbd996343653d828f95a38</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MINVIOLATION</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a6f6f3f610da914580473f3d2d0efa760</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_FORCECUTSTOLP</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>aca0b648d2de181b489bf161bab2e1c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_FORCECUTSTOSEPASTORE</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>abba7d558dc425c4db66620ad04ecc454</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXCUTS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a0376e429412633f4ef111e1103c9e3a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXCUTSROOT</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a52b79b65cb30c9de4c4fce1964cb9b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SUBSCIPOBJECTIVE</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>aeedd30f5c9697abbadf5765645ae8cb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_RELAXCONTVARS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a9ce8fd9c58887c52718b48a79fc564d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SCALEFRACCOEFFS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ab3e3e48a873fe4bda6fd8ecb6f3f6efb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SUBSCIPSETTINGS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a25172def654139886cb468e3d8f6d11b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SUBSCIPSOLLIMIT</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a6f5e6fee5bdc7373d7189604ab8e3417</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SUBSCIPUSEALLSOLS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a1e93c481ddde5dbca458c891a2db73b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PPDELTA</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a1cfe2c2932f41e1a103572a9b653b1d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SUBSCIPOBJPEN</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a8f948ad0b2b2cf7a886f51d27c7c1c3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_PPMETHODS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a7ccd51c3d5f03ceb2653328f8b23cd7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_SEPAMETHODS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a7d33652e089575b945e2f60e165f9856</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXNCALLS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a5a5e8ff39f02557e35d5e43623f9275a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_IGNOREPREVIOUSZHCUTS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a05c005fa2d475f1522028f6803bec77d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_ONLYORIGROWS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a658dd3b7128c485401399217174e6e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_USEZHCUTPOOL</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a71e260677fb2cf9fa3043bba52bcc3db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_MAXTESTDELTA</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>aa2b2e28c5ec571875fc426767cf8c20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_TRYNEGSCALING</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a736324b2d9984f47fc237cc70099133c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ORTHOFUNC</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>afe405d63ebbdf8fe0e1098614275caca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINORTHO</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>aa8579ccd634d28df8a7e860f2b707348</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NNONZOFFSET</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a1e425cc45aa5706152b391b7e6765124</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOUNDSWITCH</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a1a447f376cecdc9b6aedde50d6c470b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USEVBDS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a9e8a9590dc1814a1ac94b16eea7dd151</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALLOWLOCAL</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a63f49a1ccaf2623490789eeb0abd1fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FIXINTEGRALRHS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a7fc280cb443cd312301d4f27aea5af71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOUNDSFORTRANS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a686378cd4c31ab68235f71426e1f74b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOUNDTYPESFORTRANS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>adac7e7a41e0b4a026315aca172023767</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXWEIGHTRANGE</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ab7234f8a26e287b5dbfe75b1c71434fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MINFRAC</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ab98154852fd7c0b318a9b61ffb529cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXFRAC</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a30f87df2f7125fd62e77170223080fff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXDNOM</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a15826381c8e8f7a1c28ffd6756f273db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXSCALE</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a5d1a2a1a1e28a7bcf48b1c9be1689abd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USECONTVARS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a42851a3bafb528e869220cd9de6c9227</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USEVARBOUNDS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a6204ed7b68f609c303c4433a47cd0256</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXAGGRLEN</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>abb589f7728d5576efea04f13acab67d8</anchor>
      <arglist>(nvars)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ISEVEN</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a214ced826e1000dc9b0125bfae195269</anchor>
      <arglist>(scip, value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ISODD</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ae711586d17cb2f7017342a4e1367029f</anchor>
      <arglist>(scip, value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XOR</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>abee63f28794cb3e2d4fdb09591cceb93</anchor>
      <arglist>(bool1, bool2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIV</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a5327d0656f9f0558adfc441414ad6ae8</anchor>
      <arglist>(value1, powerof2value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MOD</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a6b7ab97c91ccea4138481ce0fba46e0e</anchor>
      <arglist>(value1, powerof2value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BMSmoveMemoryArray</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>aaa60821b79d3f9cf5198c339410f9a00</anchor>
      <arglist>(ptr, source, num)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZEROHALFstatistics</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>abbacfde5ac90c1998191cb6cd58e7c20</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZEROHALFstatisticsMessage</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a748b92d3b63fcb75faeb343f1822920e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZEROHALFcreateNewTimer</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a72e7591055d609fda03a4c9db4bc2f16</anchor>
      <arglist>(timervar)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZEROHALFcreateTimer</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a6cb18b69c84ff2c714dfafc35bcd17e3</anchor>
      <arglist>(timervar)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZEROHALFfreeTimer</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>afdc51bf0d26a7634de42a50c36ef7ea7</anchor>
      <arglist>(timervar)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZEROHALFresetTimer</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a62a3b670177811596706837b11588d42</anchor>
      <arglist>(timervar)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZEROHALFstartTimer</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a52e0e85fa1c31d47092c65f240b98228</anchor>
      <arglist>(timervar)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZEROHALFstopTimer</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>aa6ec2549d2d431d43c83c3951ee58644</anchor>
      <arglist>(timervar)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZEROHALFevalTimer</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ae6ed277eb410a6eecfda01e9dc05ba17</anchor>
      <arglist>(timervar)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IRRELEVANT</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>aef637dd657aa85548f98320c65b7200d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZERO_ROW</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ac6e04462534adc895517b41a472fc5d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IDENT_TO_ROW_WITH_SMALLER_SLACK</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>afa1c904c58b8c512d16029ad94a3d0a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLACK_GREATER_THAN_MAXSLACK</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a93d066bd8ba372241c6be7ad35dfb8ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFINES_VIOLATED_ZEROHALF_CUT</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a9528d07afa2ae46657fca5d833face41</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROW_IN_SUBPROB_WITHOUT_ODD_RHS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>aafed11e80ac7552059413671e196cff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NONEXISTENT_ROW</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a8662e68912dbac3c9767579f7232c1ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_RELEVANT_COLUMNS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a69f5e17b8052065f1273b42956731927</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLACK_GREATER_THAN_MSL_MINUS_SODD</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a28d788631d503d96620840221a98a7e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LARGE_COL_EXISTS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a5289cd840bd22fa3afc9cb0d6630bc83</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZERO_COLUMN</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a6b07bf37c29a35b42d24c1aaa2b59e4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IDENT_TO_ANOTHER_COLUMN</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ad1a6e055250312de620d8e127f3c460e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZERO_LP_SOL</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ad4cf3f9b85613ca9e26086291ec6c64e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LP_SOL_EQUALS_EVEN_LB</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a86e4d7ac0655bc71fd8074f53ce0831f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LP_SOL_EQUALS_ODD_LB</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>aa9be780d60de28cf5cf4752d6be8e196</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LP_SOL_EQUALS_EVEN_UB</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a5c00b6204b55f80b7fae68107dbac991</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LP_SOL_EQUALS_ODD_UB</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a02df96916f39ec881236800dbc03cf38</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SINGLETON_COLUMN</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a4b10eccbe315b846020bc2f64e692094</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONTINUOUS_VARIABLE</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a1064cf2976fe6f4cba4f3021a2b4cc14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SMALL_FRACSOL_HEUR</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>aa79bde77cae6025f9470f973b2512558</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALL_MATRIX_ROWS_DELETED</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a67f9ce5a2849a8b8f1ebe790cc6f7bd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLUMN_IN_SUBPROB_WITHOUT_ODD_RHS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>abcd76c5ffeefe390306e2841d48781df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITARRAYBASETYPE</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ad33f7eecfc4b3ca917a0a72b411eb72b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITARRAYBITMASKTYPE</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>aaf5a4e4033d51768984eff946e42f656</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITARRAY</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ae1847c0caa8ea1e5a250aef511a6e9ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITMASK</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a2669d028044004764e6679849c9f0c0e</anchor>
      <arglist>(pos)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITSET</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a529ecb9aca139e993d6f2ceccf08d7d3</anchor>
      <arglist>(var, pos)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITCLEAR</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ac57bf60beb0364725f9d744fbb29d3a9</anchor>
      <arglist>(var, pos)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITFLIP</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>aefc06d1263bc2809c8f1dba4dc69b7f7</anchor>
      <arglist>(var, pos)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITISSET</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a2f0e1244474befd68fa92d32549531a5</anchor>
      <arglist>(var, pos)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITARRAYBITSET</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a1e6c2d4dd50e71bb6d1f50bd98b091af</anchor>
      <arglist>(barray, pos)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITARRAYBITCLEAR</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a9b9eec901756d962b06f86ad0d8ca4fd</anchor>
      <arglist>(barray, pos)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITARRAYBITFLIP</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a21961e7914dd6897dcbb64c14b383ab8</anchor>
      <arglist>(barray, pos)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITARRAYBITISSET</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ae51f3083d0863d1486cfec0bbf784879</anchor>
      <arglist>(barray, pos)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITARRAYCLEAR</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>abd270d31f1408b4ecc313c43ba05193c</anchor>
      <arglist>(barray, barraysize)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GETREQUIREDBITARRAYSIZE</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a21f9bcc07d317a1cf8c8b773936f84c2</anchor>
      <arglist>(nvalstostore)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GETBITARRAYINDEX</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a60dd61b3210b9cfaec3b50a29f83b13f</anchor>
      <arglist>(pos)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GETBITARRAYMASK</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a93c9798649fb3f62d4f247f952dba8bd</anchor>
      <arglist>(pos)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITARRAYSFOREACH</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a8548948e13e9a34182b673ae45ef8d64</anchor>
      <arglist>(barray1, barray2, size, op)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITARRAYSAND</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a1ef7cb5195b91a1b7b6133a874b459a9</anchor>
      <arglist>(barray1, barray2, size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITARRAYSOR</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a94777859c5e7a3c885e887a3e0899bdb</anchor>
      <arglist>(barray1, barray2, size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITARRAYSXOR</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ab75e35fcf7a814631efb3db62d7cd851</anchor>
      <arglist>(barray1, barray2, size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITARRAYSNOT</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ae65d5c961566b50376ae9905bbf6bb31</anchor>
      <arglist>(barray1, barray2, size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BITARRAYSAREEQUAL</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a5ce1c437c1caecbee13ba6e2eedddd04</anchor>
      <arglist>(barray1, barray2, size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHPRIORITY__AVOID_BRANCHING</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a2187706768b3ab96eff4bd731e0bbb9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BRANCHPRIORITY__PREFER_BRANCHING</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a72032a14574b3ffa5b7a1af832ceb5c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitZerohalf</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a4901b27152cd635d005aa8d471452cba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitZerohalf</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a1ef3e16168945a90762785f27bd5fbfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaInitsolZerohalf</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a21eaf9131e05512e360f863b9aa14401</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExitsolZerohalf</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a0539f6e18f105961013320154eb95c2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>sepaExecsolZerohalf</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a0605dc37cf0cb4024052e63e2a148deb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum preprocessingmethods</type>
      <name>PREPROCESSINGMETHODS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>af8fbe92088038d8ea32a4ebbfc01c1da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum sepamethods</type>
      <name>SEPAMETHODS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a743dda0d6168e552bdfc01e071e3648e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum cutseparatedby</type>
      <name>CUTSEPARATEDBY</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a2785f6a21378b23ea30aeba3975ec90d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Zerohalf_SubLPData</type>
      <name>ZEROHALF_SUBLPDATA</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>aea5c07fc4ba1c5e5d8dc138d129dc995</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Zerohalf_LPData</type>
      <name>ZEROHALF_LPDATA</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a3c46cdb1c4c46b4189a0218d0c84c80f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Zerohalf_AuxIPData</type>
      <name>ZEROHALF_AUXIPDATA</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a223a7e029dd7b76ba4080b243762eb8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Zerohalf_Mod2Data</type>
      <name>ZEROHALF_MOD2DATA</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>af6972cccfc91a4ebbdcca47ee9bf8c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Zerohalf_CutData</type>
      <name>ZEROHALF_CUTDATA</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>acc5b7e69829558a69c7c39de20d17612</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Zerohalf_AuxGraph_Node</type>
      <name>ZEROHALF_AUXGRAPH_NODE</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a0ed8539e4e579fa1b72b8dab8ec8bad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Zerohalf_AuxGraph</type>
      <name>ZEROHALF_AUXGRAPH</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ab83e052116b170c5023bd6ce97977b53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>preprocessingmethods</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a262b10c15debb2cf9c314077857ff810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODGAUSSIANELIMINATION</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a262b10c15debb2cf9c314077857ff810ad9452bec58f57f01e8cc93c86cb42a19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETEZEROROWS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a262b10c15debb2cf9c314077857ff810a0505b8c40cc4d8dcfefba0add7629129</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETEZEROCOLS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a262b10c15debb2cf9c314077857ff810aafb577c892772aa8f2d91a508654b5e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETECOLSINGLETONS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a262b10c15debb2cf9c314077857ff810a68ba6e4368d288fa69b3e5f1f4fc8c08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADDTRIVIALCUTS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a262b10c15debb2cf9c314077857ff810a26113fd203ed5e9e626daefe3087aeda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETEIDENTROWS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a262b10c15debb2cf9c314077857ff810a648eecc7249c9060cfbe3a635288d644</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MERGEIDENTCOLS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a262b10c15debb2cf9c314077857ff810ab53d426dcc5c6973e09009ab28f6317a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETELARGESLACKROWS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a262b10c15debb2cf9c314077857ff810a453741ee8077554fc2f123e1a0bd27ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETESMALLFRACSOLCOLS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a262b10c15debb2cf9c314077857ff810a8e300b2c213395825a94286774ee7201</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETEROWSWRTMINSLACK</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a262b10c15debb2cf9c314077857ff810ae52913fe038498e1fa80f4a91d34038e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PPCOLUMNS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a262b10c15debb2cf9c314077857ff810a96771e2cc31bcc11ae37dd5f99d34e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PPROWS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a262b10c15debb2cf9c314077857ff810a3884ca07403eaa901061e4d514588b55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>sepamethods</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a9e8cc7a2a611b80959c04c5b8e1e483c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STOPIFCUTWASFOUND</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a9e8cc7a2a611b80959c04c5b8e1e483ca05cd6fe8fc2d06bfa67298afddab063d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLVEAUXSCIP</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a9e8cc7a2a611b80959c04c5b8e1e483ca84d01865306e95b7965549105f7af3d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLVEAUXSCIPEXACT</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a9e8cc7a2a611b80959c04c5b8e1e483cae1a74a6617741b04e516c5e5243a134d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENUMHEURNMAX1</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a9e8cc7a2a611b80959c04c5b8e1e483ca4249ca918f4c64df1eaa232efb232e79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENUMHEURNMAX2</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a9e8cc7a2a611b80959c04c5b8e1e483ca4971855733a2857988f98e7bc586c228</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GAUSSHEUR</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a9e8cc7a2a611b80959c04c5b8e1e483caaa468332a3bc32377ce38f355ab8d610</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX2ODDENTRIESPERROW</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a9e8cc7a2a611b80959c04c5b8e1e483ca93f69d335ab41cf49d2fa089a8358509</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>cutseparatedby</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ae3a360944266f285f625eeb2ebdd2c18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUXIP</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ae3a360944266f285f625eeb2ebdd2c18af71e3e52a0518e13a439f95ade32e092</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECOMPOSITION</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ae3a360944266f285f625eeb2ebdd2c18a18a09e1c53fa4f18f2132ed11514f6dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PPZEROONEROW</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ae3a360944266f285f625eeb2ebdd2c18a3f55a99df54f2324e08bf823ec24c24a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HEURISTICSENUM</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ae3a360944266f285f625eeb2ebdd2c18ac2e7e73a60764c63eac86f63b52b9c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HEURISTICSGAUSS</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ae3a360944266f285f625eeb2ebdd2c18a14fb8637abd66ae4439c0e9fa4b10db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AUXGRAPH</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>ae3a360944266f285f625eeb2ebdd2c18a434b919b5830665812f77d7331610213</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaZerohalf</name>
      <anchorfile>sepa__zerohalf_8c.html</anchorfile>
      <anchor>a0c5204d5a0d155da72415b8de968b8a8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sepa_zerohalf.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>sepa__zerohalf_8h</filename>
    <includes id="scip_8h" name="scip.h" local="yes" imported="no">scip/scip.h</includes>
    <member kind="function">
      <type>SCIP_RETCODE</type>
      <name>SCIPincludeSepaZerohalf</name>
      <anchorfile>sepa__zerohalf_8h.html</anchorfile>
      <anchor>a0c5204d5a0d155da72415b8de968b8a8</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tclique_branch.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/tclique/</path>
    <filename>tclique__branch_8c</filename>
    <includes id="tclique__def_8h" name="tclique_def.h" local="yes" imported="no">tclique/tclique_def.h</includes>
    <includes id="tclique__coloring_8h" name="tclique_coloring.h" local="yes" imported="no">tclique/tclique_coloring.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CHUNK_SIZE</name>
      <anchorfile>tclique__branch_8c.html</anchorfile>
      <anchor>aea3cfda4f3a9f978ec759f206cf186fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLIQUEHASH_INITSIZE</name>
      <anchorfile>tclique__branch_8c.html</anchorfile>
      <anchor>a6efd9395351de2afddb9497df64ae85a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct clique</type>
      <name>CLIQUE</name>
      <anchorfile>tclique__branch_8c.html</anchorfile>
      <anchor>a1ed35ccbf8b9aa6c4542ccf35cf8ba2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct cliquehash</type>
      <name>CLIQUEHASH</name>
      <anchorfile>tclique__branch_8c.html</anchorfile>
      <anchor>a71ba543b768c5bb24e225e4d5aa37fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tcliqueMaxClique</name>
      <anchorfile>tclique__branch_8c.html</anchorfile>
      <anchor>af4a5280f23c84d0c2a0790ef72c5bc34</anchor>
      <arglist>(TCLIQUE_GETNNODES((*getnnodes)), TCLIQUE_GETWEIGHTS((*getweights)), TCLIQUE_ISEDGE((*isedge)), TCLIQUE_SELECTADJNODES((*selectadjnodes)), TCLIQUE_GRAPH *tcliquegraph, TCLIQUE_NEWSOL((*newsol)), TCLIQUE_DATA *tcliquedata, int *maxcliquenodes, int *nmaxcliquenodes, TCLIQUE_WEIGHT *maxcliqueweight, TCLIQUE_WEIGHT maxfirstnodeweight, TCLIQUE_WEIGHT minweight, int maxntreenodes, int backtrackfreq, int maxnzeroextensions, int fixednode, TCLIQUE_STATUS *status)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tclique_coloring.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/tclique/</path>
    <filename>tclique__coloring_8c</filename>
    <includes id="tclique__def_8h" name="tclique_def.h" local="yes" imported="no">tclique/tclique_def.h</includes>
    <includes id="tclique__coloring_8h" name="tclique_coloring.h" local="yes" imported="no">tclique/tclique_coloring.h</includes>
    <member kind="function">
      <type>TCLIQUE_WEIGHT</type>
      <name>tcliqueColoring</name>
      <anchorfile>tclique__coloring_8c.html</anchorfile>
      <anchor>ac62c3d52873851323743b71983fe218b</anchor>
      <arglist>(TCLIQUE_GETNNODES((*getnnodes)), TCLIQUE_GETWEIGHTS((*getweights)), TCLIQUE_SELECTADJNODES((*selectadjnodes)), TCLIQUE_GRAPH *tcliquegraph, BMS_CHKMEM *mem, int *buffer, int *V, int nV, NBC *gsd, TCLIQUE_Bool *iscolored, TCLIQUE_WEIGHT *apbound, int *clique, int *nclique, TCLIQUE_WEIGHT *weightclique)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tclique_coloring.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/tclique/</path>
    <filename>tclique__coloring_8h</filename>
    <member kind="typedef">
      <type>struct _ITV</type>
      <name>ITV</name>
      <anchorfile>tclique__coloring_8h.html</anchorfile>
      <anchor>abdfa79339ec20e66fee7847f6ba56e11</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _LIST_ITV</type>
      <name>LIST_ITV</name>
      <anchorfile>tclique__coloring_8h.html</anchorfile>
      <anchor>a1cec391c84509e1d146da70dcdaa6124</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct _NBC</type>
      <name>NBC</name>
      <anchorfile>tclique__coloring_8h.html</anchorfile>
      <anchor>aa157a5d7cf6bb395b789bac65e39e371</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>TCLIQUE_WEIGHT</type>
      <name>tcliqueColoring</name>
      <anchorfile>tclique__coloring_8h.html</anchorfile>
      <anchor>ac62c3d52873851323743b71983fe218b</anchor>
      <arglist>(TCLIQUE_GETNNODES((*getnnodes)), TCLIQUE_GETWEIGHTS((*getweights)), TCLIQUE_SELECTADJNODES((*selectadjnodes)), TCLIQUE_GRAPH *tcliquegraph, BMS_CHKMEM *mem, int *buffer, int *V, int nV, NBC *gsd, TCLIQUE_Bool *iscolored, TCLIQUE_WEIGHT *apbound, int *clique, int *nclique, TCLIQUE_WEIGHT *weightclique)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tclique_def.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/tclique/</path>
    <filename>tclique__def_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>ALLOC_ABORT</name>
      <anchorfile>tclique__def_8h.html</anchorfile>
      <anchor>a590e4c53373abf11f45634e36f98fd9b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALLOC_FALSE</name>
      <anchorfile>tclique__def_8h.html</anchorfile>
      <anchor>a8f392c29af0e31fd7c0259617d32e0bb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>debug</name>
      <anchorfile>tclique__def_8h.html</anchorfile>
      <anchor>a1614f028c1fef258edfb81fb963609cb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>debugMessage</name>
      <anchorfile>tclique__def_8h.html</anchorfile>
      <anchor>af8afc5b10fab499ee5a6e3cb55ba9dcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>debugPrintf</name>
      <anchorfile>tclique__def_8h.html</anchorfile>
      <anchor>a94d76f325af05727bf195c75fedafa4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>infoMessage</name>
      <anchorfile>tclique__def_8h.html</anchorfile>
      <anchor>af422639d9b5ff8d503c9846c58aea7e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX</name>
      <anchorfile>tclique__def_8h.html</anchorfile>
      <anchor>aacc3ee1a7f283f8ef65cea31f4436a95</anchor>
      <arglist>(x, y)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tclique_graph.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/tclique/</path>
    <filename>tclique__graph_8c</filename>
    <includes id="tclique__def_8h" name="tclique_def.h" local="yes" imported="no">tclique/tclique_def.h</includes>
    <member kind="typedef">
      <type>struct _HEAD_ADJ</type>
      <name>HEAD_ADJ</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>a431d4e044b5d5e7860c4b5773ea57383</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TCLIQUE_GETNNODES</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>a35de5c6e1a1b9033877a7abf658a3ce1</anchor>
      <arglist>(tcliqueGetNNodes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TCLIQUE_GETWEIGHTS</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>ab0ac1c931da75654bbd9153c973cfe47</anchor>
      <arglist>(tcliqueGetWeights)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TCLIQUE_ISEDGE</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>a2a127ece8280d1a654c460b427b84bd1</anchor>
      <arglist>(tcliqueIsEdge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TCLIQUE_SELECTADJNODES</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>a78363063592bf7a09ee1c148a8e67ebc</anchor>
      <arglist>(tcliqueSelectAdjnodes)</arglist>
    </member>
    <member kind="function">
      <type>TCLIQUE_Bool</type>
      <name>tcliqueCreate</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>ada9ece43fd4f0a8a9598417333942eda</anchor>
      <arglist>(TCLIQUE_GRAPH **tcliquegraph)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tcliqueFree</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>a8b77aae721651d4e977edce34374a9d7</anchor>
      <arglist>(TCLIQUE_GRAPH **tcliquegraph)</arglist>
    </member>
    <member kind="function">
      <type>TCLIQUE_Bool</type>
      <name>tcliqueAddNode</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>ae2600a3e7d5ea55f74b093ec7188c729</anchor>
      <arglist>(TCLIQUE_GRAPH *tcliquegraph, int node, TCLIQUE_WEIGHT weight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tcliqueChangeWeight</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>a6670f76a6dee580bb82a397f0641cccd</anchor>
      <arglist>(TCLIQUE_GRAPH *tcliquegraph, int node, TCLIQUE_WEIGHT weight)</arglist>
    </member>
    <member kind="function">
      <type>TCLIQUE_Bool</type>
      <name>tcliqueAddEdge</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>af115ceef75c51edb409363e2f52fc823</anchor>
      <arglist>(TCLIQUE_GRAPH *tcliquegraph, int node1, int node2)</arglist>
    </member>
    <member kind="function">
      <type>TCLIQUE_Bool</type>
      <name>tcliqueFlush</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>aafcd3afc37d80d7f7f3433a8d804561e</anchor>
      <arglist>(TCLIQUE_GRAPH *tcliquegraph)</arglist>
    </member>
    <member kind="function">
      <type>TCLIQUE_Bool</type>
      <name>tcliqueLoadFile</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>a5bc4a404f331a73da710badab834dcc0</anchor>
      <arglist>(TCLIQUE_GRAPH **tcliquegraph, const char *filename, double scaleval, char *probname)</arglist>
    </member>
    <member kind="function">
      <type>TCLIQUE_Bool</type>
      <name>tcliqueSaveFile</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>acb4ac79b9b1e833369afb09f1747f4a5</anchor>
      <arglist>(TCLIQUE_GRAPH *tcliquegraph, const char *filename, double scaleval, const char *probname)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tcliqueGetNEdges</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>a47b06ddc7d4db33c583c2d0d4607ab3c</anchor>
      <arglist>(TCLIQUE_GRAPH *tcliquegraph)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>tcliqueGetDegrees</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>a49c601a77dbb3e0a198a3741503fefd2</anchor>
      <arglist>(TCLIQUE_GRAPH *tcliquegraph)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>tcliqueGetAdjnodes</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>a02e41746b6057a253f39b25a085918c1</anchor>
      <arglist>(TCLIQUE_GRAPH *tcliquegraph)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>tcliqueGetFirstAdjedge</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>afed7cbbc52574b62a708f2e9fda1d7b8</anchor>
      <arglist>(TCLIQUE_GRAPH *tcliquegraph, int node)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>tcliqueGetLastAdjedge</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>afeb4d2527757a9518939084824db21ea</anchor>
      <arglist>(TCLIQUE_GRAPH *tcliquegraph, int node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tcliquePrintGraph</name>
      <anchorfile>tclique__graph_8c.html</anchorfile>
      <anchor>a0e59538aaea8cdee9ad190d74ca9f8b5</anchor>
      <arglist>(TCLIQUE_GRAPH *tcliquegraph)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_branch.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__branch_8h</filename>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHCOPY</name>
      <anchorfile>type__branch_8h.html</anchorfile>
      <anchor>ac6db6a68b502e989adabb7ae43b1eda3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHFREE</name>
      <anchorfile>type__branch_8h.html</anchorfile>
      <anchor>acb427cf8c4d82d9c44d7e614be8945f3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHINIT</name>
      <anchorfile>type__branch_8h.html</anchorfile>
      <anchor>aa37dbc020e827bdaaf485d42576123a9</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHEXIT</name>
      <anchorfile>type__branch_8h.html</anchorfile>
      <anchor>acadff6a17dc2daeef6b4cd2b79f1cb12</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHINITSOL</name>
      <anchorfile>type__branch_8h.html</anchorfile>
      <anchor>a5e9c129ee7c8e38aecd7f8916eed4666</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHEXITSOL</name>
      <anchorfile>type__branch_8h.html</anchorfile>
      <anchor>aeb1e8b80fffbf00e00189b1deaa04816</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHEXECLP</name>
      <anchorfile>type__branch_8h.html</anchorfile>
      <anchor>a431c77bcbd592ef87be5fbf0ec21a2f1</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHEXECEXT</name>
      <anchorfile>type__branch_8h.html</anchorfile>
      <anchor>a47bf527ecab10bd124e7717a3131428f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_BRANCHEXECPS</name>
      <anchorfile>type__branch_8h.html</anchorfile>
      <anchor>a167b3381f1efeb3a65cfd460c45a5b2e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_BranchCand</type>
      <name>SCIP_BRANCHCAND</name>
      <anchorfile>type__branch_8h.html</anchorfile>
      <anchor>a9fbf53ca885c90b77cc111f117aec129</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Branchrule</type>
      <name>SCIP_BRANCHRULE</name>
      <anchorfile>type__branch_8h.html</anchorfile>
      <anchor>ad7a1ef4885679e08d1661acff6409cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_BranchruleData</type>
      <name>SCIP_BRANCHRULEDATA</name>
      <anchorfile>type__branch_8h.html</anchorfile>
      <anchor>ad8162ab474c0a3151abeccc89f3172ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_buffer.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__buffer_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_Buffer</type>
      <name>SCIP_BUFFER</name>
      <anchorfile>type__buffer_8h.html</anchorfile>
      <anchor>a3d88be8a6a63c2e10dbffa2e5a41bb73</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_clock.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__clock_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_ClockType</type>
      <name>SCIP_CLOCKTYPE</name>
      <anchorfile>type__clock_8h.html</anchorfile>
      <anchor>a48f472d3c0ca1d4e1142c06b0ece35bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Clock</type>
      <name>SCIP_CLOCK</name>
      <anchorfile>type__clock_8h.html</anchorfile>
      <anchor>a0b4dd054b775f3a4ba567a57cb62e75f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_CPUClock</type>
      <name>SCIP_CPUCLOCK</name>
      <anchorfile>type__clock_8h.html</anchorfile>
      <anchor>a67c613a49f2bf31236684e0287af7379</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_WallClock</type>
      <name>SCIP_WALLCLOCK</name>
      <anchorfile>type__clock_8h.html</anchorfile>
      <anchor>a7fefc16d3fee2ad438377c98b12b7592</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_ClockType</name>
      <anchorfile>type__clock_8h.html</anchorfile>
      <anchor>a83d6dd7c4ecd58afaf0b1856fa4723e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_CLOCKTYPE_DEFAULT</name>
      <anchorfile>type__clock_8h.html</anchorfile>
      <anchor>a83d6dd7c4ecd58afaf0b1856fa4723e8ac93742b0a4e0fe1012dfc1f9605c8769</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_CLOCKTYPE_CPU</name>
      <anchorfile>type__clock_8h.html</anchorfile>
      <anchor>a83d6dd7c4ecd58afaf0b1856fa4723e8a61b82696df8b741304ca7f51258e291f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_CLOCKTYPE_WALL</name>
      <anchorfile>type__clock_8h.html</anchorfile>
      <anchor>a83d6dd7c4ecd58afaf0b1856fa4723e8a3d0a3ebcf651a1a9ca0feeed39887b09</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_conflict.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__conflict_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONFLICTCOPY</name>
      <anchorfile>type__conflict_8h.html</anchorfile>
      <anchor>a3bc9d80075e3a7151077a7300387e3d4</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONFLICTFREE</name>
      <anchorfile>type__conflict_8h.html</anchorfile>
      <anchor>a6e74ec8f3458b618cd92227bbf13630e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONFLICTINIT</name>
      <anchorfile>type__conflict_8h.html</anchorfile>
      <anchor>aaeabc722dc7481b86e3bb3a662675e43</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONFLICTEXIT</name>
      <anchorfile>type__conflict_8h.html</anchorfile>
      <anchor>a2ee1f34be310417dca531cc06102a0d3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONFLICTINITSOL</name>
      <anchorfile>type__conflict_8h.html</anchorfile>
      <anchor>a54806db27897cb77175582880d1bae0b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONFLICTEXITSOL</name>
      <anchorfile>type__conflict_8h.html</anchorfile>
      <anchor>afebe775ff235666e5cbb017c82722b94</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONFLICTEXEC</name>
      <anchorfile>type__conflict_8h.html</anchorfile>
      <anchor>a4fd356f9d08ce87b104529f9e8174939</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Conflicthdlr</type>
      <name>SCIP_CONFLICTHDLR</name>
      <anchorfile>type__conflict_8h.html</anchorfile>
      <anchor>a20c6b1ffcc4221c8870e12365855b07f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ConflicthdlrData</type>
      <name>SCIP_CONFLICTHDLRDATA</name>
      <anchorfile>type__conflict_8h.html</anchorfile>
      <anchor>ae051b0bc4f72869c0e14b41829faf265</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ConflictSet</type>
      <name>SCIP_CONFLICTSET</name>
      <anchorfile>type__conflict_8h.html</anchorfile>
      <anchor>a46df02e703865e98ec6c2f298f8292db</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Conflict</type>
      <name>SCIP_CONFLICT</name>
      <anchorfile>type__conflict_8h.html</anchorfile>
      <anchor>a4cc73bb40aba654f568c0c23897ec59d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_cons.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__cons_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__var_8h" name="type_var.h" local="yes" imported="no">scip/type_var.h</includes>
    <includes id="type__sol_8h" name="type_sol.h" local="yes" imported="no">scip/type_sol.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSHDLRCOPY</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>ad1fbf03b7692ccc565b2107db3965c27</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSFREE</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>ae374fa77c1e2ea90677f3eae2290b1c0</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSINIT</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>ac2af95eeab68bf76a636f203d49838e2</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSEXIT</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a3dbd78915084e4048a6fd2b2ec7debc8</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSINITPRE</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a2a1d22ad8250529ce6a21727f777bb92</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSEXITPRE</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>ab2b9fcf8af077942042885ba9225bda3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSINITSOL</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a4969f04dfc1dbc086baa57f4cf601e2a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSEXITSOL</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>ade732129e1c1e829e1cf738c3eadb8e5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSDELETE</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a356ccbf8a6ac344c2b7fad0ad1e288b9</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSTRANS</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a9310b78181f94e2923716f4e6e02dda7</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSINITLP</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>aaa3496c95e47e4149a7e8dc629d3352a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSSEPALP</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a517c2525fd8d67fb72c51b74860bde48</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSSEPASOL</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>ae5aed12c51e87312fad8287c6b114bd4</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSENFOLP</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a19c17cc4fe1c293cfc1f2487b70046f0</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSENFOPS</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a8e37444d363c0d6b659cf95866118c2e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSCHECK</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>ad15dad558f571555f654cc052eb3fa38</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSPROP</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a7332f43c87e6e1c337c7e8a72f1660ee</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSPRESOL</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>aa1a9531dd2d21a1b43935038718325fb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSRESPROP</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a7ff294cd3a2a493e6e8b46dedd041b97</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSLOCK</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>ab2edc602ea1ed35423a229aefaee7aaa</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSACTIVE</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a85c40a321635910478b808910ba9adba</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSDEACTIVE</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a978ed7d67d8de87eeed9577a17b1744e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSENABLE</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>aa83f578d4cc68fc292c889f3b53cf23c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSDISABLE</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a51ab5dc422ca7a11f11a58eaa94109a9</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSPRINT</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a4d409d37c6071020639ea8379787ad60</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSCOPY</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>abf8e62f337ecf1d02581a514e99636ec</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_CONSPARSE</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a92afdd77b74d9cac38e48d072dd72067</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Conshdlr</type>
      <name>SCIP_CONSHDLR</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>ab396d8cbfe68a15f3c59d130e4ed0f90</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Cons</type>
      <name>SCIP_CONS</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a38a65729afa6b1cef58fcff906850886</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ConshdlrData</type>
      <name>SCIP_CONSHDLRDATA</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a4fbd129e0244d331664c5c618c85299c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ConsData</type>
      <name>SCIP_CONSDATA</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>ac55797a3c65d3ec89dd29921d953c36e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ConsSetChg</type>
      <name>SCIP_CONSSETCHG</name>
      <anchorfile>type__cons_8h.html</anchorfile>
      <anchor>a581a228c2b766ad9f7a3906b5f8ed5bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_cutpool.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__cutpool_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_Cutpool</type>
      <name>SCIP_CUTPOOL</name>
      <anchorfile>type__cutpool_8h.html</anchorfile>
      <anchor>a59f2019b76c5f683ce5f534a335c6cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Cut</type>
      <name>SCIP_CUT</name>
      <anchorfile>type__cutpool_8h.html</anchorfile>
      <anchor>a967cea5354109ac206f4f451f2c99692</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_dialog.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__dialog_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DIALOGCOPY</name>
      <anchorfile>type__dialog_8h.html</anchorfile>
      <anchor>a34fc903b78f7c55f20fe9361809cd29d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DIALOGFREE</name>
      <anchorfile>type__dialog_8h.html</anchorfile>
      <anchor>ac135255ec916979f9babc121c33db223</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DIALOGDESC</name>
      <anchorfile>type__dialog_8h.html</anchorfile>
      <anchor>ad47e6047b5399a9bf822d6d3739c97be</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DIALOGEXEC</name>
      <anchorfile>type__dialog_8h.html</anchorfile>
      <anchor>a439246740f4d931449ba8645a9cdd9a5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Dialog</type>
      <name>SCIP_DIALOG</name>
      <anchorfile>type__dialog_8h.html</anchorfile>
      <anchor>a329d1192c555a4e720e915119ba182bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_DialogData</type>
      <name>SCIP_DIALOGDATA</name>
      <anchorfile>type__dialog_8h.html</anchorfile>
      <anchor>a5e403d79d0d8be23f23773f12faa5d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Dialoghdlr</type>
      <name>SCIP_DIALOGHDLR</name>
      <anchorfile>type__dialog_8h.html</anchorfile>
      <anchor>aab964360d58e12b3f488cd366809f43e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Linelist</type>
      <name>SCIP_LINELIST</name>
      <anchorfile>type__dialog_8h.html</anchorfile>
      <anchor>a1d177178583578ece244259c41c69c4e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_disp.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__disp_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DISPCOPY</name>
      <anchorfile>type__disp_8h.html</anchorfile>
      <anchor>a24f7b629d38e8df7f6d2cba7346a44eb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DISPFREE</name>
      <anchorfile>type__disp_8h.html</anchorfile>
      <anchor>afce2537f0ca6808e3c876c6d033d5a1d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DISPINIT</name>
      <anchorfile>type__disp_8h.html</anchorfile>
      <anchor>a89010bac5f802422379dd719a65df665</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DISPEXIT</name>
      <anchorfile>type__disp_8h.html</anchorfile>
      <anchor>a6963fe58e233819f4de188a20a102750</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DISPINITSOL</name>
      <anchorfile>type__disp_8h.html</anchorfile>
      <anchor>a2437e8c2d8825a0ca21e4a2f9747bde6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DISPEXITSOL</name>
      <anchorfile>type__disp_8h.html</anchorfile>
      <anchor>a3a4fa8e8f665c822cb5d2b48ce6ebd53</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_DISPOUTPUT</name>
      <anchorfile>type__disp_8h.html</anchorfile>
      <anchor>a0c1f2e5b9b6fdfb4255db04c017a6b69</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_DispStatus</type>
      <name>SCIP_DISPSTATUS</name>
      <anchorfile>type__disp_8h.html</anchorfile>
      <anchor>a24f71f5e1fd941279b997e87bbe744ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Disp</type>
      <name>SCIP_DISP</name>
      <anchorfile>type__disp_8h.html</anchorfile>
      <anchor>a5ead8fa21b238b09b0c8c820cbf17100</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_DispData</type>
      <name>SCIP_DISPDATA</name>
      <anchorfile>type__disp_8h.html</anchorfile>
      <anchor>ac07267a92388a3be0ff8420f48a0fcc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_DispStatus</name>
      <anchorfile>type__disp_8h.html</anchorfile>
      <anchor>a16ceb270266ce3b8176f528348908ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DISPSTATUS_OFF</name>
      <anchorfile>type__disp_8h.html</anchorfile>
      <anchor>a16ceb270266ce3b8176f528348908ad8aa963272156f9264a3c3ed3e31e07e96c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DISPSTATUS_AUTO</name>
      <anchorfile>type__disp_8h.html</anchorfile>
      <anchor>a16ceb270266ce3b8176f528348908ad8afe121846f594d5dd09834c70303bc358</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DISPSTATUS_ON</name>
      <anchorfile>type__disp_8h.html</anchorfile>
      <anchor>a16ceb270266ce3b8176f528348908ad8a297f48d0c7b3f272c4e4d1b5d2e4e6cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_event.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__event_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_DISABLED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ae6f2f042d3e7fc21dee0ec37959c28fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_VARADDED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>abdb41277158c5046b83eb5ece43e6e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_VARDELETED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a737872e4e887e158de99849eb277090e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_VARFIXED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a693ca56a7585240ff0144bdd0a6cdbc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_VARUNLOCKED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a1907d7629c39c6f54cd1c4a8fe5de7df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_OBJCHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a6590b5eccb0a4935b3fea139f152eb07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_GLBCHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>aad0f6cec966e9109577ee8940b6829f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_GUBCHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a419eb04b62fd224f7350eeb0d94ce1de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_LBTIGHTENED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>af5988d53e0bb89bac4c2f558efbb1722</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_LBRELAXED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>aa18609cea7a11d1dd77dedbcaf63ef21</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_UBTIGHTENED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a57b890bde301e876cc3cb7b8929772de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_UBRELAXED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>afd2086f613ae9a0b5c7a4bb55d24cfc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_GHOLEADDED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a0998cf2c1d1205e0e2d5a9d63cfd6719</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_GHOLEREMOVED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a4bd01da382bd3805504ee80af67eb948</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_LHOLEADDED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>acc942424f07ce94869e66d60f14e4c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_LHOLEREMOVED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a857c7a43464662cdd15429837ec05983</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_IMPLADDED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ad6878059ab90d98155caf34b2d3f37ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_PRESOLVEROUND</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a408983823d3060101ce3a03d8dfaab16</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_NODEFOCUSED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a5d806ee605db9d57aeced1c8895f7324</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_NODEFEASIBLE</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a10a594f8e3246db9a605a77549f40475</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_NODEINFEASIBLE</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a63c33fb1f94a0b7f17a5584a55e5368f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_NODEBRANCHED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a9410f05184ee8d0589d48fe7e489ee15</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_FIRSTLPSOLVED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a0e97c429cd89b9aedaaa0ab64f6b8371</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_LPSOLVED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ad157c2d2175a6d65d24d41de85c3677a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_POORSOLFOUND</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a39188a366bf5c1c570becd2ea21681ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_BESTSOLFOUND</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>aa7b9f5aece9817543b4ad6fcf51baf58</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWADDEDSEPA</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>adf950d3b70650bb00fcbea8d9e1f826b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWDELETEDSEPA</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ab99fc5ce85c7cdc63979cc9199d01923</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWADDEDLP</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a37c890664aa0ef249a62bcb70a414459</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWDELETEDLP</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ac35edce8f1920f428573d3d425db604c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWCOEFCHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ad85109718e4ad80191af5087475f1de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWCONSTCHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>af34bb0949ad693bd3be8c22c55f412a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWSIDECHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a1cf78a7e3940ed0240fb902ed484a085</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_GBDCHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a4e69d266b8c820e89736348811d089b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_LBCHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>abe85fc2b8bc12e2ab22b44d697d2b284</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_UBCHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ac7875a9abf2e3b973567b99d36e61a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_BOUNDTIGHTENED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>af4514ddc527f758f2fd7ad304555c04f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_BOUNDRELAXED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ab8dcf11e4e0e68580f546eaa32079a88</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_BOUNDCHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a128e03e649e03bf833fdc309f8bb3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_GHOLECHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a132f303b11d0d77293d14911b021352e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_LHOLECHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a5f42119cae91be59ceb48e4cc59f4f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_HOLECHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ab94df2009e0c7d5930d07749353e037c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_DOMCHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ae02366a4b43e69e2e14e5fb3339d689c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_VARCHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ab987fdbf88f6747390f07bef23c2d753</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_VAREVENT</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a21569e9b8ae43364e81618d41f9c8892</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_NODESOLVED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>aa0a891248bca1f5312b56edd0a10df2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_NODEEVENT</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a7cfc0e26c90f14953e0cfe86b25eafd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_LPEVENT</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ae506cb87148fd403e6881ec0c4912977</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_SOLFOUND</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ac4326687adf8b4175a2a2145b592401b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_SOLEVENT</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>aec2118490d06bafca9bf23f805410ab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWCHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a7473489170c037ee033a13ca61db308e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EVENTTYPE_ROWEVENT</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a95fddabf9c529b7659ddcb975faf0eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTCOPY</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a9b324836c5058e7aab1b958522df0ad3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTFREE</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ab6bcbd5a542808e92606be4f108c46d5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTINIT</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a9cfd669a49331d0857d8b6a4a4399c13</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTEXIT</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a441309b02b8b24269e2d10b0b7f41d93</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTINITSOL</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a0ef3a60738e301ea496b8a3a30db8067</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTEXITSOL</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ad280ee9fda2d649f031bb7db7a2e4aae</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTDELETE</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a2197797c4a093d111818b4320397654f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_EVENTEXEC</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a7942e3ded98f033e3c08947c7cfc73af</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>SCIP_EVENTTYPE</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ada169f023df39328eccf1b635a124e31</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Eventhdlr</type>
      <name>SCIP_EVENTHDLR</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a0dc41f33e3a5dcf92123d7bc6ba8945d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventhdlrData</type>
      <name>SCIP_EVENTHDLRDATA</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a75f8eb58103f64850221fad59626a4fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Event</type>
      <name>SCIP_EVENT</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ad8e794890cd488ccc90bdbe476c876e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventVarAdded</type>
      <name>SCIP_EVENTVARADDED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a2c08993502ff5c4460108520a345ceb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventVarDeleted</type>
      <name>SCIP_EVENTVARDELETED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a0d108f1b57cd682e1d0b1be896605b0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventVarFixed</type>
      <name>SCIP_EVENTVARFIXED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>aeddce0bcb533aa750fb2040ad64d2af0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventVarUnlocked</type>
      <name>SCIP_EVENTVARUNLOCKED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a9b97228ba4efc8e4f0f51056a73547b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventObjChg</type>
      <name>SCIP_EVENTOBJCHG</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a932404d63751a385e9c58590fa23e624</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventBdChg</type>
      <name>SCIP_EVENTBDCHG</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a24bfe1707dc43986dd14be5a977dda52</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventHole</type>
      <name>SCIP_EVENTHOLE</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a2f6cbb26ee93c4db8daadc36529b4a91</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventImplAdd</type>
      <name>SCIP_EVENTIMPLADD</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a9935569bddbc0b809b075f2d12f80cd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventRowAddedSepa</type>
      <name>SCIP_EVENTROWADDEDSEPA</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>ac2b6f8062c1d093b3bb896fadde672d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventRowDeletedSepa</type>
      <name>SCIP_EVENTROWDELETEDSEPA</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>aaf4921da0b87a4f49b1c39cb1414b37e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventRowAddedLP</type>
      <name>SCIP_EVENTROWADDEDLP</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a2e087a7201c1be5881709fe9b92e76b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventRowDeletedLP</type>
      <name>SCIP_EVENTROWDELETEDLP</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>aa22564198cb57da6288f2f5cb4f500c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventRowCoefChanged</type>
      <name>SCIP_EVENTROWCOEFCHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a895caaedeea99e1e95a4ba6d352c1ce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventRowConstChanged</type>
      <name>SCIP_EVENTROWCONSTCHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a235b49f1516514cdcb6fb307a4509822</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventRowSideChanged</type>
      <name>SCIP_EVENTROWSIDECHANGED</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a47313e0e5d1863195ca72a7a398923e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventData</type>
      <name>SCIP_EVENTDATA</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a4ebef382b966f4f8b419d6b37c29c6ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventFilter</type>
      <name>SCIP_EVENTFILTER</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>a62063efc0002dbdd4b7f3927adcb24d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_EventQueue</type>
      <name>SCIP_EVENTQUEUE</name>
      <anchorfile>type__event_8h.html</anchorfile>
      <anchor>aa733e3a314dab961c526bac0cb5b1d76</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_expression.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/nlpi/</path>
    <filename>type__expression_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_ExprOp</type>
      <name>SCIP_EXPROP</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>a30d37294b55f3180495c3a5efdce32c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>union SCIP_ExprOpData</type>
      <name>SCIP_EXPROPDATA</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>a038a8105e30d3b01d3de192459058ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Expr</type>
      <name>SCIP_EXPR</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>a03f8f1fae1c932ff918396171929c352</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ExprTree</type>
      <name>SCIP_EXPRTREE</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>a4ae8525548d76cb766394131bb405cf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_QuadElement</type>
      <name>SCIP_QUADELEM</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>abaf258f420336359952d83563ed641f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ExprData_Quadratic</type>
      <name>SCIP_EXPRDATA_QUADRATIC</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>ad09492fdcd7cfcce5121c98c5b01cbb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ExprData_Monom</type>
      <name>SCIP_EXPRDATA_MONOM</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>aaf9d8a9359c0355bb58db61b51e4124e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ExprData_Polynom</type>
      <name>SCIP_EXPRDATA_POLYNOM</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>a98ca2587a5a9222cf5f0325d73c60ec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_ExprOp</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_VARIDX</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a08c0b7f855a1a9a23be28cf84f0877f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_CONST</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a9441632adf0da0060161635f50e33a0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_PARAM</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a0e707f276bb20287cd14910fc288b9ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_PLUS</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a990b7f90a7293e5827073b45523325cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_MINUS</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a5ca0f1ab17e01867adc90b774585c08a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_MUL</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a4d8bc475f5a122e94e0635f585dcba1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_DIV</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a01a211c3350555b45adc0a945d852d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_SQUARE</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7ae7a9db96f656ea49c0a7beb2baa3c4ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_SQRT</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a34ab5e73e2b4e5259498df7e05542680</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_POWER</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a12063cd239004b4270f7d19858051148</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_EXP</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7aaed3aafb02368338b8af40a40813e8ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_LOG</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a9bdeca11a6e94e4d286a548b6f0143a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_SIN</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a2f9acf2ad39b3d2f9aea629507c2d577</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_COS</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7adc0bbc2202eb4b0151270fe86c624fdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_TAN</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a69d04d8993454e7df3f0c4d41dc87be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_MIN</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a116cfaa8fb90a0263d60f99b8ce25fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_MAX</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7aef4c071e227bd1c849b70fc57efe1c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_ABS</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a8b861f16bee429f870d529cc7098fc0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_SIGN</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7aa70a4ab0af7ba2932f985c46dc6f0afb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_SIGNPOWER</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a6e0f90d79105cdcf80561ea9a00778f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_INTPOWER</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7ad5481685f6fabfc42b325f2a01a84de8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_SUM</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7af49c66890f39ac93534204930e41926b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_PRODUCT</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7acf10c3cf355f0342155ea3b4b229e605</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_LINEAR</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a962e2e2ff2373911fb0bc45c1e1907b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_QUADRATIC</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7aa776829b397361337bd88514aea2461f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_POLYNOM</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a32bb2fe80368d40a3ccd1e67841d9f59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_EXPR_LAST</name>
      <anchorfile>type__expression_8h.html</anchorfile>
      <anchor>af1319cefde4a913a4e9a5a0ebfa6ded7a730461fc3ebac6558f4e527dc1978a4c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_exprinterpret.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/nlpi/</path>
    <filename>type__exprinterpret_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRINTCAPABILITY_NONE</name>
      <anchorfile>type__exprinterpret_8h.html</anchorfile>
      <anchor>a86f686c56eb486edca443b08ffd1d4bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRINTCAPABILITY_FUNCVALUE</name>
      <anchorfile>type__exprinterpret_8h.html</anchorfile>
      <anchor>a4ead23c55590b1d90b2eaa65dbc26bbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRINTCAPABILITY_INTFUNCVALUE</name>
      <anchorfile>type__exprinterpret_8h.html</anchorfile>
      <anchor>a3debca4ab3ff224b912327c5573de4f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRINTCAPABILITY_GRADIENT</name>
      <anchorfile>type__exprinterpret_8h.html</anchorfile>
      <anchor>a047556347f5159f61d3179fa3e77a615</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRINTCAPABILITY_INTGRADIENT</name>
      <anchorfile>type__exprinterpret_8h.html</anchorfile>
      <anchor>a23564ef7a6465972d67323c687d61125</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRINTCAPABILITY_HESSIAN</name>
      <anchorfile>type__exprinterpret_8h.html</anchorfile>
      <anchor>a21627f71ee23f53d9e70af36153c7fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_EXPRINTCAPABILITY_INTHESSIAN</name>
      <anchorfile>type__exprinterpret_8h.html</anchorfile>
      <anchor>adedda2fc79734d6e778fdd60e679813c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ExprInt</type>
      <name>SCIP_EXPRINT</name>
      <anchorfile>type__exprinterpret_8h.html</anchorfile>
      <anchor>ae536b751483a00eeb75a93d372073b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ExprIntData</type>
      <name>SCIP_EXPRINTDATA</name>
      <anchorfile>type__exprinterpret_8h.html</anchorfile>
      <anchor>a1cdd1eca7c5f8e8ac40e0c95e6f61346</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>SCIP_EXPRINTCAPABILITY</name>
      <anchorfile>type__exprinterpret_8h.html</anchorfile>
      <anchor>afedb326a7a0e4b9679b737ae4247ddd3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_heur.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__heur_8h</filename>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_BEFORENODE</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>ae82bce9f490c6277b9acd77be58c8f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_DURINGLPLOOP</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>a623429e1f8c601df4933db2450d648c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_AFTERLPLOOP</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>ae3f9b7b4930bc9a8a148f5c204cbcfc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_AFTERLPNODE</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>ac4cb022a363958364724303ce7a76897</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_AFTERPSEUDONODE</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>a321f15fabc7fef2c3971f01d5c4839bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_AFTERLPPLUNGE</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>a8b9bb841615e5767ea9d34cf9a130f04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_AFTERPSEUDOPLUNGE</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>a9d8c841c20e47c4c286c4c294da882b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_DURINGPRICINGLOOP</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>a2d53e1adb5711e9abba16a495cad4993</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_BEFOREPRESOL</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>a0da7988a0e85bc37ed1ce035f49c8bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_DURINGPRESOLLOOP</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>a6a6ca5a4599f0cfca42ff629651debb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_AFTERPROPLOOP</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>a4d0f949fb27d56738f0584701bc59943</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_AFTERNODE</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>a7ad0261aaa66d107afbc90f684adb73c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_HEURTIMING_AFTERPLUNGE</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>abe45b3ef597a1ea9389c7a6b7062f969</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HEURCOPY</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>a4f934de7511fbe72d59a287d3eea30b5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HEURFREE</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>aaf08379a00bcde05eaa2d95b05c783f1</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HEURINIT</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>a791b7bec2f853f445e09a051a2e2e5ba</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HEUREXIT</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>a92d2fc3ad7c01fc17b1ecc1a3d41f654</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HEURINITSOL</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>a46025ee9b408a2578538ddcdee6375ee</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HEUREXITSOL</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>abcc465a461dc5dcbd6e3eeeda7b2937c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HEUREXEC</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>ac40876eaa59dbe9a6d384855708e70da</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>SCIP_HEURTIMING</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>a590171545b6918496c6dbc010a749f5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Heur</type>
      <name>SCIP_HEUR</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>a6d83a468b10e5207c31c4ffed117ce39</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_HeurData</type>
      <name>SCIP_HEURDATA</name>
      <anchorfile>type__heur_8h.html</anchorfile>
      <anchor>a681fbf728be9500c0d9701f99027b193</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_history.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__history_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_BranchDir</type>
      <name>SCIP_BRANCHDIR</name>
      <anchorfile>type__history_8h.html</anchorfile>
      <anchor>afa732c27a07268b25862c97f60f06043</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_History</type>
      <name>SCIP_HISTORY</name>
      <anchorfile>type__history_8h.html</anchorfile>
      <anchor>a5d44a3f16dfd49712f35265f29754ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_BranchDir</name>
      <anchorfile>type__history_8h.html</anchorfile>
      <anchor>a77d1039c27f7836c1d21b61e661cafba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BRANCHDIR_DOWNWARDS</name>
      <anchorfile>type__history_8h.html</anchorfile>
      <anchor>a77d1039c27f7836c1d21b61e661cafbaa0d1f58b90654a1c4b573bbdc9ab6e936</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BRANCHDIR_UPWARDS</name>
      <anchorfile>type__history_8h.html</anchorfile>
      <anchor>a77d1039c27f7836c1d21b61e661cafbaad36a15202ccdfc3b3477e20638569441</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BRANCHDIR_AUTO</name>
      <anchorfile>type__history_8h.html</anchorfile>
      <anchor>a77d1039c27f7836c1d21b61e661cafbaac5755c014ee539c2bd2e6f36420c7add</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_implics.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__implics_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_VBounds</type>
      <name>SCIP_VBOUNDS</name>
      <anchorfile>type__implics_8h.html</anchorfile>
      <anchor>abb7c6a768748bb5d76663a4cfde41d04</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Implics</type>
      <name>SCIP_IMPLICS</name>
      <anchorfile>type__implics_8h.html</anchorfile>
      <anchor>a82f21b90e0fec5ba3181ea9e532efecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Clique</type>
      <name>SCIP_CLIQUE</name>
      <anchorfile>type__implics_8h.html</anchorfile>
      <anchor>a8996d60cfd393cc8ab252b68365109d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_CliqueTable</type>
      <name>SCIP_CLIQUETABLE</name>
      <anchorfile>type__implics_8h.html</anchorfile>
      <anchor>aeec091d3f9e88d224a2d238c00371c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_CliqueList</type>
      <name>SCIP_CLIQUELIST</name>
      <anchorfile>type__implics_8h.html</anchorfile>
      <anchor>a198ef11ca9bc15da7069f15148760b54</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_interrupt.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__interrupt_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_Interrupt</type>
      <name>SCIP_INTERRUPT</name>
      <anchorfile>type__interrupt_8h.html</anchorfile>
      <anchor>a0f5528afd468ed6697532f73a9421d14</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_lp.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__lp_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_LPSolStat</type>
      <name>SCIP_LPSOLSTAT</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>a5d947b996f1f7ddaf00ebf52d1a85932</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_BoundType</type>
      <name>SCIP_BOUNDTYPE</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>ad1f370d06c5f9eece4ab657efa945dbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_SideType</type>
      <name>SCIP_SIDETYPE</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>afc76f7a0e408b6d2d0274e848d936385</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_LPAlgo</type>
      <name>SCIP_LPALGO</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>afb2699663c54caff6bb1c4fe2f3dd396</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Col</type>
      <name>SCIP_COL</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>a9fbe1dac436203f1fcab0ef7bbc7044a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Row</type>
      <name>SCIP_ROW</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>a032f27315b19f63ad9fd77077d865adc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Lp</type>
      <name>SCIP_LP</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>a5bd45764db1eef5a5ee492006f3d2c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_LPSolStat</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLSTAT_NOTSOLVED</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6a4e6c93f5d333f3cd4f242e7c6dcc5c87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLSTAT_OPTIMAL</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6a5c39e89ae2faecc76cc210d67e3151e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLSTAT_INFEASIBLE</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6aa6b7594c5359e6cbb19a4a955720e071</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLSTAT_UNBOUNDEDRAY</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6a745e82d0db7687d9e277f0b283b536e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLSTAT_OBJLIMIT</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6ad8081e48d17a069eca84ddd3c0ebcca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLSTAT_ITERLIMIT</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6aedd27ac82c121361a7ff2b9da017f948</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLSTAT_TIMELIMIT</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6a6773f41ead37952c1a3f8399c11759fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPSOLSTAT_ERROR</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>af969c1887226181fa7aa90a16c9e5ad6a3fffe898beee5ce61e588e686af3b030</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_BoundType</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>a9c4fe67c57312592112b606f42a0429d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BOUNDTYPE_LOWER</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>a9c4fe67c57312592112b606f42a0429dae9498ae162911028e0a036499039583e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BOUNDTYPE_UPPER</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>a9c4fe67c57312592112b606f42a0429daa71597cfaf1f6831b7187c298ed6920c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_SideType</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>ae3fcba31aab33248dc1921a31fdf3222</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SIDETYPE_LEFT</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>ae3fcba31aab33248dc1921a31fdf3222a8757feec14316b340243177ad5d4c385</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SIDETYPE_RIGHT</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>ae3fcba31aab33248dc1921a31fdf3222a84d9e3c34dacdb758b71008cf252a89b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_LPAlgo</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>a542bb951e04498cb5d92a35c2d687249</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPALGO_PRIMALSIMPLEX</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>a542bb951e04498cb5d92a35c2d687249aaad1010b2e9fee1d378138b8340d42b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPALGO_DUALSIMPLEX</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>a542bb951e04498cb5d92a35c2d687249af080073a72a781d98bddc30362ba042e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPALGO_BARRIER</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>a542bb951e04498cb5d92a35c2d687249a60e291d36225f6456ab9dd29af957a96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPALGO_BARRIERCROSSOVER</name>
      <anchorfile>type__lp_8h.html</anchorfile>
      <anchor>a542bb951e04498cb5d92a35c2d687249abe12044aaf49a6f062ec8619416cd742</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_lpi.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__lpi_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_ObjSen</type>
      <name>SCIP_OBJSEN</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>afa3d076f8e5d2a8a31bf662ab24797cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_LPParam</type>
      <name>SCIP_LPPARAM</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>a845842b094eba8ce0cf0821e82b4d67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_Pricing</type>
      <name>SCIP_PRICING</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>a680b3359be1f3e2b0fbcdaa05d219d61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_BaseStat</type>
      <name>SCIP_BASESTAT</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>afcf16516c616e88c3f58ae49103ab8af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_LPi</type>
      <name>SCIP_LPI</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>a95450814c277697516678287134c5e8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_LPiState</type>
      <name>SCIP_LPISTATE</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>a90d877c948164ab5e3beb0f3e1070693</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_ObjSen</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>af1bc7f4fad28ccf4753250fa0558373b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_OBJSEN_MAXIMIZE</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>af1bc7f4fad28ccf4753250fa0558373ba32ae01999ecd89f94f4a0bd0b6be60c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_OBJSEN_MINIMIZE</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>af1bc7f4fad28ccf4753250fa0558373bab25a52cd6604d9c8c5fd02c5e03180a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_LPParam</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_FROMSCRATCH</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038baabf8addc3b5db9eb7280711323285333</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_FASTMIP</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba9cf2cefbf43816ba1c1e454b50c732fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_SCALING</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba58e15a0d2bb9e631213db974ec701b18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_PRESOLVING</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba8229b5ef8f7105825a6d7245d1915258</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_PRICING</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba0114e2317d0236d43fb3b297ee9aea8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_LPINFO</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba3a6b49761689f0768535d9edcb26a013</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_FEASTOL</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038bac3189a09fce4d5f22435928771524285</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_DUALFEASTOL</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038baa9801355e17b1d3f1c5ed41616285dc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_BARRIERCONVTOL</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba7a541158135537aa60d3649574621538</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_LOBJLIM</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba3d88cde8e4c624e49c106d4c98955f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_UOBJLIM</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038baa9974a8818f5f48d32a5f5912bf085b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_LPITLIM</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038bad3a9947367aa599495456cd35502683b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_LPTILIM</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba733f4fa15222572d687c1bb753782cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_MARKOWITZ</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038bab1d6268a86eb10df9e8140ed626e38f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_ROWREPSWITCH</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038baec5909c462ddd23c7eee84b62bae1180</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPPAR_THREADS</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac333f54119f676d19d81bed186b0038ba2c2452223631d250416bf06078622b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_Pricing</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PRICING_LPIDEFAULT</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a840117e919783bcc69646f544c2db051</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PRICING_AUTO</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a1579f0b28462ca3030c2ea711509cf11</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PRICING_FULL</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a42f5306421531962d1b113eab03e6cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PRICING_PARTIAL</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775afb363bc9727994c89ff3da4273164335</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PRICING_STEEP</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a270fee7478b8951e2cc4fbefc7b7b477</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PRICING_STEEPQSTART</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a0b1034a38e607455f39eb74ad242bab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PRICING_DEVEX</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>a0483a21478d8f9c8d7c1ba9e3473d775a1e601f75db40f3b48665aa04f5103987</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_BaseStat</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac34513c7d1cc6c3eb46bc9f373d03648</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BASESTAT_LOWER</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac34513c7d1cc6c3eb46bc9f373d03648aaf2c277e576d024183ed7949ba947da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BASESTAT_BASIC</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac34513c7d1cc6c3eb46bc9f373d03648a166f9b557960da4bec4a0dbd00c0d7f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BASESTAT_UPPER</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac34513c7d1cc6c3eb46bc9f373d03648a2b5d851810f72ad984abc6b47b852868</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BASESTAT_ZERO</name>
      <anchorfile>type__lpi_8h.html</anchorfile>
      <anchor>ac34513c7d1cc6c3eb46bc9f373d03648ac9fd196bcf1e32bef1f5a2a71b3421bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_mem.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__mem_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_Mem</type>
      <name>SCIP_MEM</name>
      <anchorfile>type__mem_8h.html</anchorfile>
      <anchor>a79fededcb250818e7695bcff87e94426</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_message.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__message_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_MESSAGEERROR</name>
      <anchorfile>type__message_8h.html</anchorfile>
      <anchor>ae8740391ba2c58e4cdd40083b248a1b7</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_MESSAGEWARNING</name>
      <anchorfile>type__message_8h.html</anchorfile>
      <anchor>a32d62cb67b5bf0cca30a12c1460dde9a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_MESSAGEDIALOG</name>
      <anchorfile>type__message_8h.html</anchorfile>
      <anchor>a5e56f8277576d68b8264309628b074d8</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_MESSAGEINFO</name>
      <anchorfile>type__message_8h.html</anchorfile>
      <anchor>a4f371b237e73e5d86769985a29ae0edc</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_MESSAGEERROR</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>ae8740391ba2c58e4cdd40083b248a1b7</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_MESSAGEWARNING</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a32d62cb67b5bf0cca30a12c1460dde9a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_MESSAGEDIALOG</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a5e56f8277576d68b8264309628b074d8</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_MESSAGEINFO</name>
      <anchorfile>exprinterpret__cppad_8cpp.html</anchorfile>
      <anchor>a4f371b237e73e5d86769985a29ae0edc</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_VerbLevel</type>
      <name>SCIP_VERBLEVEL</name>
      <anchorfile>type__message_8h.html</anchorfile>
      <anchor>a73246afeccfb9943ce9abc579ec32900</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Messagehdlr</type>
      <name>SCIP_MESSAGEHDLR</name>
      <anchorfile>type__message_8h.html</anchorfile>
      <anchor>a7d71113339d14873806c1399442fae8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_MessagehdlrData</type>
      <name>SCIP_MESSAGEHDLRDATA</name>
      <anchorfile>type__message_8h.html</anchorfile>
      <anchor>af9ebf56ba805cfd0394f36af684defb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_VerbLevel</name>
      <anchorfile>type__message_8h.html</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VERBLEVEL_NONE</name>
      <anchorfile>type__message_8h.html</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3a342e07e3b44ea64ebcbc95ed01868527</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VERBLEVEL_DIALOG</name>
      <anchorfile>type__message_8h.html</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3a2940983bd13c5c25ff9b94928cd6efeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VERBLEVEL_MINIMAL</name>
      <anchorfile>type__message_8h.html</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3a71529714af71417540310a5f684260ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VERBLEVEL_NORMAL</name>
      <anchorfile>type__message_8h.html</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3ade6351698269867796b408bdfdd3e2a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VERBLEVEL_HIGH</name>
      <anchorfile>type__message_8h.html</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3ad7fd4c128f127025689e04b47df0bbd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VERBLEVEL_FULL</name>
      <anchorfile>type__message_8h.html</anchorfile>
      <anchor>aa679d61c733a0e16a3d2e5ca18c917b3ae141d66ad54cafb1f07b0c8437a70690</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_misc.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__misc_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SORTINDCOMP</name>
      <anchorfile>type__misc_8h.html</anchorfile>
      <anchor>a806c02f466e036f6e137df9eee2f7e9d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SORTPTRCOMP</name>
      <anchorfile>type__misc_8h.html</anchorfile>
      <anchor>a7b9d512ab1371f8c42ec4f2805514fe6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HASHGETKEY</name>
      <anchorfile>type__misc_8h.html</anchorfile>
      <anchor>aa7e82c6a078cb110fcd55fb00100edf9</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HASHKEYEQ</name>
      <anchorfile>type__misc_8h.html</anchorfile>
      <anchor>a7d9300cec620a8da3ae75ef0f4a3ea06</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_HASHKEYVAL</name>
      <anchorfile>type__misc_8h.html</anchorfile>
      <anchor>aad19c25e7cd7b6c2b1e0392e4713ff15</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_PQueue</type>
      <name>SCIP_PQUEUE</name>
      <anchorfile>type__misc_8h.html</anchorfile>
      <anchor>a9d2620c55e31a5c5c585c70609ceb208</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_HashTable</type>
      <name>SCIP_HASHTABLE</name>
      <anchorfile>type__misc_8h.html</anchorfile>
      <anchor>ad34b75a37536cdd2c578a3ada6554117</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_HashTableList</type>
      <name>SCIP_HASHTABLELIST</name>
      <anchorfile>type__misc_8h.html</anchorfile>
      <anchor>a627f6a0ea9509715be86152028c3b1c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_HashMap</type>
      <name>SCIP_HASHMAP</name>
      <anchorfile>type__misc_8h.html</anchorfile>
      <anchor>a4372d6d4f362b30349748b72c8a28704</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_HashMapList</type>
      <name>SCIP_HASHMAPLIST</name>
      <anchorfile>type__misc_8h.html</anchorfile>
      <anchor>a58bc076cfc7fa95aa5cb8a09cb7db240</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_RealArray</type>
      <name>SCIP_REALARRAY</name>
      <anchorfile>type__misc_8h.html</anchorfile>
      <anchor>a344fbb9bdcaadfdba779491f0950aa3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_IntArray</type>
      <name>SCIP_INTARRAY</name>
      <anchorfile>type__misc_8h.html</anchorfile>
      <anchor>a1979deb07c489409949df78b8d327c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_BoolArray</type>
      <name>SCIP_BOOLARRAY</name>
      <anchorfile>type__misc_8h.html</anchorfile>
      <anchor>ad1c5098e1ecdc914964ff2dabbd110e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_PtrArray</type>
      <name>SCIP_PTRARRAY</name>
      <anchorfile>type__misc_8h.html</anchorfile>
      <anchor>ace262be61411b73712e598f783d921c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_nlp.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__nlp_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_NlRow</type>
      <name>SCIP_NLROW</name>
      <anchorfile>type__nlp_8h.html</anchorfile>
      <anchor>ade0b64677fdf4b415b8a05b4f1cb435a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Nlp</type>
      <name>SCIP_NLP</name>
      <anchorfile>type__nlp_8h.html</anchorfile>
      <anchor>a0cb612b9369e01c45e3f8c24188ba802</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_nlpi.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/nlpi/</path>
    <filename>type__nlpi_8h</filename>
    <includes id="type__expression_8h" name="type_expression.h" local="yes" imported="no">nlpi/type_expression.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICOPY</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>ab444b70f0450a62fbe8b6678183083ec</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIFREE</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>acccd938a64b239e3fbd993c2cc74e588</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETSOLVERPOINTER</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>abe0e15e23ef029f00b9a6c891aca90ac</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICREATEPROBLEM</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a336b7559c9d9977edd0413ff289a73ad</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIFREEPROBLEM</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a8fc7b7a4a1ec09aef5784a0a8c928f0e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETPROBLEMPOINTER</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>acae8b601c436b73d56f75631db121780</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIADDVARS</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a78227183b94f8ec708e3991e63f66159</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIADDCONSTRAINTS</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>ad02fe9c84e6f31958ffa424cf6f439b1</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPISETOBJECTIVE</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a30e029f525e23c0a4d0b6f7b411db9d3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICHGVARBOUNDS</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>ac3de57676028b74c51fc75dc4217bbbd</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICHGCONSSIDES</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a609abd12374695cbda8c4658e452c3a8</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIDELVARSET</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a737163d103b96368ab436bbee201ebd8</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIDELCONSSET</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a5c8527d8d25011697d1dbbcc3d0eb09c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICHGLINEARCOEFS</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a1186fc25efe361083a8a8d3ec9c9c9c8</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICHGQUADCOEFS</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a653a9d506252ecc8fae93cabee26df31</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICHGEXPRTREE</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a0bbae978e0a862c67405f9801adfb119</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICHGNONLINCOEF</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a39da8a9d0fc7b25c12cc05c7b70e9567</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPICHGOBJCONSTANT</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a13c0835097e180bd1eb86313c7776516</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPISETINITIALGUESS</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a8c1743257c03269de9ad9aa3dd208b5d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPISOLVE</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a001a76a9a2d02288d0752756a4f48dae</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETSOLSTAT</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>abf83ff0c4673648045fcfd5255d7b654</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETTERMSTAT</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>ad09a369b899ddda83be8ee39a9f3d900</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETSOLUTION</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a18a5e246c1f5b0d7c2e4f59017a5a9cb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETSTATISTICS</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a481900debb130ac4db90afb60f55789c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETWARMSTARTSIZE</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a9c99b338019ec1a7db1ad184eb43d39b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETWARMSTARTMEMO</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>af4bc4cb6eae4656c973aebbede655771</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPISETWARMSTARTMEMO</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>ae65157d1703b0cce3968e2f0c3fc098a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETINTPAR</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a2aee1fdd81c62a25faf1c63f6fae89aa</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPISETINTPAR</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>aaaacc6ace66183cff40073fa122e166e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETREALPAR</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>ae4ca7b5fadc5d5eeb4448a4f233c4adb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPISETREALPAR</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a173c8b4c47d84d50dc892f530e6310f1</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPIGETSTRINGPAR</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>ae1855ccd523640954479cd237f15eb31</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NLPISETSTRINGPAR</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a592b7226617ec182a6da6e13840620a3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Nlpi</type>
      <name>SCIP_NLPI</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a62acbad3cf059a2fc3604b8cb23061e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_NlpiData</type>
      <name>SCIP_NLPIDATA</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>aeb2a407f0470441df6fd6870de8687ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_NlpiProblem</type>
      <name>SCIP_NLPIPROBLEM</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a014fc2228c3a9d9f119ce8112dd166a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_NlpStatistics</type>
      <name>SCIP_NLPSTATISTICS</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a07d53bca357f7024447ceed41eb70e03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_NlpParam</type>
      <name>SCIP_NLPPARAM</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a3eeb8b06ecf7465c7be298fc84a404c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_NlpSolStat</type>
      <name>SCIP_NLPSOLSTAT</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a87ce65676e9e36efbbb735b4125725d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_NlpTermStat</type>
      <name>SCIP_NLPTERMSTAT</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>ae2a3cc5d63fd0c0183ef8348c52ab9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_NlpParam</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_FROMSCRATCH</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7a4a44043e9012d0de764983200c22a0eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_VERBLEVEL</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7acdc236298e6a7e2f3b4055206f6222d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_FEASTOL</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7af3a6cf82a24d3247e2e067fafbfb4522</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_RELOBJTOL</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7a8d1a47ac1538683456f940e7f9ec0182</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_LOBJLIM</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7a15894d311fb5ee4a563a3ebc81cfbffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_INFINITY</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7adc812858b4ab385e59195c8e39c09446</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_ITLIM</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7a917408d081fcf150d4cb64449be5ffba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_TILIM</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7a249f12812974579bf1fd1540fe99db34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPPAR_OPTFILE</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a73a8578c0f6614daedd32c9e1c1e06f7abf41bd32fe3109555cebed28303dbc19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_NlpSolStat</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPSOLSTAT_GLOBOPT</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64ad2969ef7d17a042f1d9b3bca431757d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPSOLSTAT_LOCOPT</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64acaffdcb7751655db0aa55230e79d1746</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPSOLSTAT_FEASIBLE</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64a9bdf6677ef92308b486bdacc63e336d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPSOLSTAT_LOCINFEASIBLE</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64a98ce44722a8e0587c9c7851ee2544337</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPSOLSTAT_GLOBINFEASIBLE</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64a4395a524bb641e8ca35b85d7dbd287e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPSOLSTAT_UNBOUNDED</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64a1815ac282227b3ef2363c9eb693caae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPSOLSTAT_UNKNOWN</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>ad06ac0a1ef6b4bf7580950bbda718a64aea9f6d2605590c2524c9a826cb9de31a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_NlpTermStat</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_OKAY</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a0355cb35803739f7519617ab97789411</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_TILIM</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a645648d2d0ae715389378550491624ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_ITLIM</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a5e0d28b320457f1cc896ea2e5089440d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_LOBJLIM</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38af53d62880b3959c8c4912052ebc05ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_UOBJLIM</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38ac44b3a38e881a87c3490cfb28acc435e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_NUMERR</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a5e729efed1805416068c93723ed72029</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_EVALERR</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38aa49f377045498c689585738c08b27995</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_MEMERR</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a6bec0f5a045e0848324d9ccb670a3957</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_LICERR</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38af328a9ee852d0b69e9e56dca40207b90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NLPTERMSTAT_OTHER</name>
      <anchorfile>type__nlpi_8h.html</anchorfile>
      <anchor>a9157ba83c5cc7a3d24a87eb52cf8be38a3019ba8a920480e7ff2319fad7c384f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_nodesel.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__nodesel_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__tree_8h" name="type_tree.h" local="yes" imported="no">scip/type_tree.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELCOPY</name>
      <anchorfile>type__nodesel_8h.html</anchorfile>
      <anchor>a871172aeb9b60ea899241677e19f5642</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELFREE</name>
      <anchorfile>type__nodesel_8h.html</anchorfile>
      <anchor>ab0ede649024c1887528486586ff690e0</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELINIT</name>
      <anchorfile>type__nodesel_8h.html</anchorfile>
      <anchor>a8dfb58590ba2cc8a226351782cee5c2b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELEXIT</name>
      <anchorfile>type__nodesel_8h.html</anchorfile>
      <anchor>a111f7568aa7cc870c8cd826628c97396</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELINITSOL</name>
      <anchorfile>type__nodesel_8h.html</anchorfile>
      <anchor>a3c72d85f1dfb495c887eccd5299f09ac</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELEXITSOL</name>
      <anchorfile>type__nodesel_8h.html</anchorfile>
      <anchor>a8b19082be5abfc7d760d75dfe28d338e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELSELECT</name>
      <anchorfile>type__nodesel_8h.html</anchorfile>
      <anchor>a93810d395ed5582dc60afdb105521704</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_NODESELCOMP</name>
      <anchorfile>type__nodesel_8h.html</anchorfile>
      <anchor>a31b5eb9c097148322c23cd7ede7a12aa</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_NodePQ</type>
      <name>SCIP_NODEPQ</name>
      <anchorfile>type__nodesel_8h.html</anchorfile>
      <anchor>ae83c5f13ca75048ad61493b42f1c24c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Nodesel</type>
      <name>SCIP_NODESEL</name>
      <anchorfile>type__nodesel_8h.html</anchorfile>
      <anchor>a76c76c6911efdba9596d8dea5b72999d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_NodeselData</type>
      <name>SCIP_NODESELDATA</name>
      <anchorfile>type__nodesel_8h.html</anchorfile>
      <anchor>ab5a652247cadb0e4a18727cd16d24a2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_paramset.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__paramset_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PARAMCHGD</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>ad944355b0131487310c3cc75f5833500</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_ParamType</type>
      <name>SCIP_PARAMTYPE</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>ab2d26b9ee8411b6e22deea4e77aa6274</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_ParamSetting</type>
      <name>SCIP_PARAMSETTING</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>a6ab443f660827a69e2b23a3035465294</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Param</type>
      <name>SCIP_PARAM</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>a3af2b327dea10395ce42b82a6f431491</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ParamData</type>
      <name>SCIP_PARAMDATA</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>aa58d7fec862156df244ea084a3c9c70a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ParamSet</type>
      <name>SCIP_PARAMSET</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>a25a26a956bc51ca8500ab61ffdc60492</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_ParamType</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMTYPE_BOOL</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298a41a50c09109afa8a4993d811907f94a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMTYPE_INT</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298ae84ca7f44502f0d78f23c4064d072eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMTYPE_LONGINT</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298aed83b0370a581b036a95325a859f5c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMTYPE_REAL</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298af7624c48cdd656d0d852c97a45faa8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMTYPE_CHAR</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298a065a348ac7020417546318930281371c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMTYPE_STRING</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>aecafda2375141a841da0cca963894298a31f8683b317c5de41885116ff7ae4780</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_ParamSetting</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMSETTING_DEFAULT</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902eda93fdf94c82e472c2c6714c24c8291b94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMSETTING_AGGRESSIVE</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902eda43ea083c777572d95f68e2cfc8594752</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMSETTING_FAST</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902edabfd14f27ea27f30f3490554e0ebf62b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMSETTING_OFF</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902eda164b1e46751d0cdf22d9b54fa57844b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMSETTING_COUNTER</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902eda7d60bb6f3da65fc93985543b7ae037bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMSETTING_CPSOLVER</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902eda4b3df1ab40f52c604441c73cbf0984f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMSETTING_EASYCIP</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902eda4bbd896635bb0a38f41bfee5a8861baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMSETTING_FEASIBILITY</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902edaad1cc7810d5995d8b532a682f85f8ee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMSETTING_HARDLP</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902edae9ad5fd5e600bf890bd89cd31ef5a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMSETTING_OPTIMALITY</name>
      <anchorfile>type__paramset_8h.html</anchorfile>
      <anchor>a083067d8e425d0d44e834095e82902eda84b8ad0c700a08154ab7fca29e7e22f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_presol.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__presol_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRESOLCOPY</name>
      <anchorfile>type__presol_8h.html</anchorfile>
      <anchor>a2b6cd6e1a0312784d14f7f45982a01ac</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRESOLFREE</name>
      <anchorfile>type__presol_8h.html</anchorfile>
      <anchor>a6283b224fc36e96873ffbe4f1aee4144</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRESOLINIT</name>
      <anchorfile>type__presol_8h.html</anchorfile>
      <anchor>aad9e0a4e37a0915413c1adc2c2723b22</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRESOLEXIT</name>
      <anchorfile>type__presol_8h.html</anchorfile>
      <anchor>acfe06b9db0a583516da44635fd5b0f06</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRESOLINITPRE</name>
      <anchorfile>type__presol_8h.html</anchorfile>
      <anchor>a6a52ac1af2c34feba8910206ea8a722d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRESOLEXITPRE</name>
      <anchorfile>type__presol_8h.html</anchorfile>
      <anchor>a7a86ed8f8bde306afd2851d072143892</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRESOLEXEC</name>
      <anchorfile>type__presol_8h.html</anchorfile>
      <anchor>af51060deff97abea430f70e3fbcdad4c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Presol</type>
      <name>SCIP_PRESOL</name>
      <anchorfile>type__presol_8h.html</anchorfile>
      <anchor>a6c8f6313616acb5006cdbed3f27a30e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_PresolData</type>
      <name>SCIP_PRESOLDATA</name>
      <anchorfile>type__presol_8h.html</anchorfile>
      <anchor>a349c1847ad0f1d482200fa025006da02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_pricer.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__pricer_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICERCOPY</name>
      <anchorfile>type__pricer_8h.html</anchorfile>
      <anchor>aeb743c1d72e68f4b844bf75d81f616e7</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICERFREE</name>
      <anchorfile>type__pricer_8h.html</anchorfile>
      <anchor>a0682747df8acd5addf3094731a7bdd40</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICERINIT</name>
      <anchorfile>type__pricer_8h.html</anchorfile>
      <anchor>a3ea9709351a8011f018628317ebf4ee4</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICEREXIT</name>
      <anchorfile>type__pricer_8h.html</anchorfile>
      <anchor>a47cbe7bc9c06c5732d0781f2118f8fd6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICERINITSOL</name>
      <anchorfile>type__pricer_8h.html</anchorfile>
      <anchor>a82f31fb9f15947556e57faca547b51c4</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICEREXITSOL</name>
      <anchorfile>type__pricer_8h.html</anchorfile>
      <anchor>a62426b3f17afb706143c11c16231d4a4</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICERREDCOST</name>
      <anchorfile>type__pricer_8h.html</anchorfile>
      <anchor>a3ec6c4ddacad93a86f1bb64a99ca1bd2</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PRICERFARKAS</name>
      <anchorfile>type__pricer_8h.html</anchorfile>
      <anchor>a501e9743bbce7175a69d73629529b46f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Pricer</type>
      <name>SCIP_PRICER</name>
      <anchorfile>type__pricer_8h.html</anchorfile>
      <anchor>a9f23954b90ad3a8b631b639db8b8e92a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_PricerData</type>
      <name>SCIP_PRICERDATA</name>
      <anchorfile>type__pricer_8h.html</anchorfile>
      <anchor>aa50951faa9e5f8803011dfc0b310948a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_pricestore.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__pricestore_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_Pricestore</type>
      <name>SCIP_PRICESTORE</name>
      <anchorfile>type__pricestore_8h.html</anchorfile>
      <anchor>a22281cdc93e4d2790371a5a8cdbb3568</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_primal.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__primal_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_Primal</type>
      <name>SCIP_PRIMAL</name>
      <anchorfile>type__primal_8h.html</anchorfile>
      <anchor>a08a5a1f7a154ae5e3435b63ff2aeefa3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_prob.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__prob_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROBDELORIG</name>
      <anchorfile>type__prob_8h.html</anchorfile>
      <anchor>a9563928be1a5539560c738cc61939497</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROBTRANS</name>
      <anchorfile>type__prob_8h.html</anchorfile>
      <anchor>ac3889fa80fa8abd2bddaafb019bf7c6b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROBDELTRANS</name>
      <anchorfile>type__prob_8h.html</anchorfile>
      <anchor>a375c40dc36bb59b5e6de4f03b7cc8bd0</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROBINITSOL</name>
      <anchorfile>type__prob_8h.html</anchorfile>
      <anchor>ac8e8796573bfaad0909a7920f6effddc</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROBEXITSOL</name>
      <anchorfile>type__prob_8h.html</anchorfile>
      <anchor>a38e3bfe2106c9f6b0581751fd6c2168b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROBCOPY</name>
      <anchorfile>type__prob_8h.html</anchorfile>
      <anchor>a18fa85a6238fe03abec4954a35fffccd</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_Objsense</type>
      <name>SCIP_OBJSENSE</name>
      <anchorfile>type__prob_8h.html</anchorfile>
      <anchor>ad4dbdf560231ec8bdc1dc76ec277ebe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Prob</type>
      <name>SCIP_PROB</name>
      <anchorfile>type__prob_8h.html</anchorfile>
      <anchor>a4bdf9b7e109efe72e83b469ee7292011</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ProbData</type>
      <name>SCIP_PROBDATA</name>
      <anchorfile>type__prob_8h.html</anchorfile>
      <anchor>a4802389010c167222c765de0e3e98aef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_Objsense</name>
      <anchorfile>type__prob_8h.html</anchorfile>
      <anchor>a633c254f4a4f140fc6ee38a70d07fd41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_OBJSENSE_MAXIMIZE</name>
      <anchorfile>type__prob_8h.html</anchorfile>
      <anchor>a633c254f4a4f140fc6ee38a70d07fd41a415922f23065682c094ed321634b32f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_OBJSENSE_MINIMIZE</name>
      <anchorfile>type__prob_8h.html</anchorfile>
      <anchor>a633c254f4a4f140fc6ee38a70d07fd41a8ec05fb2afc621ff714e6cb71ead8a47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_prop.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__prop_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPCOPY</name>
      <anchorfile>type__prop_8h.html</anchorfile>
      <anchor>a00db18191b4d0624a1ecf673ae379bcf</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPFREE</name>
      <anchorfile>type__prop_8h.html</anchorfile>
      <anchor>a55916d43cac220fde3d02ed465aca97e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPINIT</name>
      <anchorfile>type__prop_8h.html</anchorfile>
      <anchor>a3819652fe7bd5a23ea3668f409903a8e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPEXIT</name>
      <anchorfile>type__prop_8h.html</anchorfile>
      <anchor>a5ef5eb1cd0e724ccbe1026ee8c3d5a8f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPINITSOL</name>
      <anchorfile>type__prop_8h.html</anchorfile>
      <anchor>a2cb0083be411dbeafae8bf59e664abe0</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPEXITSOL</name>
      <anchorfile>type__prop_8h.html</anchorfile>
      <anchor>a56785e864f8d5254aed170710dc8c68b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPEXEC</name>
      <anchorfile>type__prop_8h.html</anchorfile>
      <anchor>ad371e148d184bfb66cae45d4bfd1b617</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_PROPRESPROP</name>
      <anchorfile>type__prop_8h.html</anchorfile>
      <anchor>ab31940059087afe078ab59637355e9f1</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Prop</type>
      <name>SCIP_PROP</name>
      <anchorfile>type__prop_8h.html</anchorfile>
      <anchor>a6c7b32d7079dbd6e409f1c17bc3c3527</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_PropData</type>
      <name>SCIP_PROPDATA</name>
      <anchorfile>type__prop_8h.html</anchorfile>
      <anchor>ad0261ca2cb5e7ce7a8dd6e9ced8a409d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_reader.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__reader_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_READERCOPY</name>
      <anchorfile>type__reader_8h.html</anchorfile>
      <anchor>a9e6a4d6b056f3f95ecc43b68279d65ed</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_READERFREE</name>
      <anchorfile>type__reader_8h.html</anchorfile>
      <anchor>af286e533e1a5018d75d70b34a080552e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_READERREAD</name>
      <anchorfile>type__reader_8h.html</anchorfile>
      <anchor>a8f97d977f2805679dc1dd1067eb63405</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_READERWRITE</name>
      <anchorfile>type__reader_8h.html</anchorfile>
      <anchor>a1d906d47b706508877b96743c1bfc293</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Reader</type>
      <name>SCIP_READER</name>
      <anchorfile>type__reader_8h.html</anchorfile>
      <anchor>a457657298218fcc3af97ce6cf7a253db</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_ReaderData</type>
      <name>SCIP_READERDATA</name>
      <anchorfile>type__reader_8h.html</anchorfile>
      <anchor>a29bd05afc0378509e253083a812dd0d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_relax.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__relax_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_RELAXCOPY</name>
      <anchorfile>type__relax_8h.html</anchorfile>
      <anchor>a69bff42ca9a4b70300aac6714b9369ba</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_RELAXFREE</name>
      <anchorfile>type__relax_8h.html</anchorfile>
      <anchor>a12bdd44277046dfca166b69466f78f5d</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_RELAXINIT</name>
      <anchorfile>type__relax_8h.html</anchorfile>
      <anchor>a011be1dba7b9686bfd50adc16ba678f8</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_RELAXEXIT</name>
      <anchorfile>type__relax_8h.html</anchorfile>
      <anchor>ad4f3271e79d77d0c00ddbd38f499fbf5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_RELAXINITSOL</name>
      <anchorfile>type__relax_8h.html</anchorfile>
      <anchor>a1ed82f4e3e7c3ccef48611f591b8de05</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_RELAXEXITSOL</name>
      <anchorfile>type__relax_8h.html</anchorfile>
      <anchor>a0a1917048c1e6a3e870bc06ed6a89bae</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_RELAXEXEC</name>
      <anchorfile>type__relax_8h.html</anchorfile>
      <anchor>a722622a1584a39141b0e308e69820860</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Relax</type>
      <name>SCIP_RELAX</name>
      <anchorfile>type__relax_8h.html</anchorfile>
      <anchor>a415c35f5e2cd1ef4024407b10587c9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Relaxation</type>
      <name>SCIP_RELAXATION</name>
      <anchorfile>type__relax_8h.html</anchorfile>
      <anchor>a7d8f8cffbaa931ac21d636c94383bec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_RelaxData</type>
      <name>SCIP_RELAXDATA</name>
      <anchorfile>type__relax_8h.html</anchorfile>
      <anchor>ae387c658207585d34d77e583b462dd22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_result.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__result_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_Result</type>
      <name>SCIP_RESULT</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a6e9810021a07d59fc706fab113e634bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_Result</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DIDNOTRUN</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a0f6f0a9fc8161ce0020f57e2ddc6bbc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DELAYED</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a42ebdbb84ce11f54c706ab0fd8bd045f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DIDNOTFIND</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a447e2ed39794509fab494c2d38eaf0ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_FEASIBLE</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a304e25a16dcf5b0e77d0a012946f94f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_INFEASIBLE</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67af9131cabb4e5783eac2a86424407cf8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_UNBOUNDED</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a77dfbb14e9f1877b06dd64252b019476</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_CUTOFF</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a27514d68ba9ecd91468af596337742d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SEPARATED</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67aa561784da802c5a96f78fb8022684ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_REDUCEDDOM</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a43dfa31d18c7db5396991244cae3393a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_CONSADDED</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a718ef8be6290d713a2fea0139cae66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_CONSCHANGED</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a4ad98b537a370f836d98bf467b2a0695</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BRANCHED</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a9fe79c48b5ed3502c1ec3ead0fc0de47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SOLVELP</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67ab6bf3825488bad1289c6fa9e75595814</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_FOUNDSOL</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a832af113cb5c3e6e0ede6246d5345cf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SUCCESS</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67ad85f878e9cdd96e63237cd7fff076f8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SUSPENDED</name>
      <anchorfile>type__result_8h.html</anchorfile>
      <anchor>a2ad8b3defccdc0da7b4fd30ca3492a67a9a7a21523eccb08018763351c094c58c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_retcode.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__retcode_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_Retcode</type>
      <name>SCIP_RETCODE</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>ac847f5a370187651fbc1b82d0170b480</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_Retcode</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_OKAY</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_ERROR</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5dae720b7ff5b19aabbca969eb41598368a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NOMEMORY</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da9d99f2bbdf6c09830e6db15bc35d3415</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_READERROR</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da4728a2c3d0d1498f254a56682cb4e08a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_WRITEERROR</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da80c963e65537a7a1e175e8827f5bb740</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NOFILE</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da3c613be50ade7386f4f5733304886659</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_FILECREATEERROR</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da0007342ba3cd04587cdda7e48fdbdc38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_LPERROR</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NOPROBLEM</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5daa611a9807045205080e6a27125062fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_INVALIDCALL</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5dacd26ff779e0b5d85cd3041c496dc7b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_INVALIDDATA</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da4e90bc81f0364ff12e57c3b3e03d315c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_INVALIDRESULT</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da16d776799019ab348bfb124a9eb76844</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PLUGINNOTFOUND</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da5a46da6c17a8705ac5f302826d4267ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMETERUNKNOWN</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da60ca3960305c3dc0d3c141448cbed401</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMETERWRONGTYPE</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da88fd6f18701b16384e48db46d5af943a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_PARAMETERWRONGVAL</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da863118682e5c65634321be19a6b81151</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_KEYALREADYEXISTING</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5da8e581706e736414f5c60593ac2869aff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_MAXDEPTHLEVEL</name>
      <anchorfile>type__retcode_8h.html</anchorfile>
      <anchor>a43415f0ed8d60fa1d0a4217226e37b5dafe4bfc77eae5382074bf64135cf68272</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_scip.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__scip_8h</filename>
    <member kind="typedef">
      <type>struct Scip</type>
      <name>SCIP</name>
      <anchorfile>type__scip_8h.html</anchorfile>
      <anchor>a4792a242d315bf76f05b1f4e0712bc33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_sepa.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__sepa_8h</filename>
    <includes id="type__retcode_8h" name="type_retcode.h" local="yes" imported="no">scip/type_retcode.h</includes>
    <includes id="type__result_8h" name="type_result.h" local="yes" imported="no">scip/type_result.h</includes>
    <includes id="type__sol_8h" name="type_sol.h" local="yes" imported="no">scip/type_sol.h</includes>
    <includes id="type__scip_8h" name="type_scip.h" local="yes" imported="no">scip/type_scip.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPACOPY</name>
      <anchorfile>type__sepa_8h.html</anchorfile>
      <anchor>af0026e626dbef019fe834a1a9413bb32</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPAFREE</name>
      <anchorfile>type__sepa_8h.html</anchorfile>
      <anchor>a597dc4685ec7d9da29db2ae5cb29fd76</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPAINIT</name>
      <anchorfile>type__sepa_8h.html</anchorfile>
      <anchor>afe1a2c51c3c4c389d778040a470efe2c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPAEXIT</name>
      <anchorfile>type__sepa_8h.html</anchorfile>
      <anchor>a75a2c3c4eb956f9398dfc73608b9c25f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPAINITSOL</name>
      <anchorfile>type__sepa_8h.html</anchorfile>
      <anchor>a3887015ad6e9e74441c17f96fafd53fb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPAEXITSOL</name>
      <anchorfile>type__sepa_8h.html</anchorfile>
      <anchor>a5b6427418f3b6c4148ec5e2a1355b8ea</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPAEXECLP</name>
      <anchorfile>type__sepa_8h.html</anchorfile>
      <anchor>a5416d6084ba11adade86c0afeca7a730</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_SEPAEXECSOL</name>
      <anchorfile>type__sepa_8h.html</anchorfile>
      <anchor>a41e45cd0db10200f38d89ad0fc4de5c6</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Sepa</type>
      <name>SCIP_SEPA</name>
      <anchorfile>type__sepa_8h.html</anchorfile>
      <anchor>ae4de65cedc0a319c15935cce113c833a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_SepaData</type>
      <name>SCIP_SEPADATA</name>
      <anchorfile>type__sepa_8h.html</anchorfile>
      <anchor>a34117c19722eeef2beebeef4a489c9d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_sepastore.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__sepastore_8h</filename>
    <member kind="typedef">
      <type>struct SCIP_SepaStore</type>
      <name>SCIP_SEPASTORE</name>
      <anchorfile>type__sepastore_8h.html</anchorfile>
      <anchor>a2723333a290707b791f64c6bd49f5a07</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_set.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__set_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_Stage</type>
      <name>SCIP_STAGE</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>aec6a704efc413c81490d302a89a550f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_Setting</type>
      <name>SCIP_SETTING</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>acd48d83f0fc9bee2c589c7d47130e93f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Set</type>
      <name>SCIP_SET</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>ab48b5bc265f5ad7ea2cbbeb12bf0010b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_Stage</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_INIT</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a8d21cb20a075b2e9b63c7dba6f97396c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_PROBLEM</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a1252784fe5e7971d925f5a5c7414c2b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_TRANSFORMING</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197ae9887e50a42da4c07610246b03d549a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_TRANSFORMED</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a5ae1deb10070c06749dd5e95e37577bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_PRESOLVING</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a56a7088627e8022e4e6f87ee2b458f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_PRESOLVED</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197af3b5ca08bf3dbb0961b29122abaa2d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_INITSOLVE</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a666d9d60911f6027ecbf2c72c2b811f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_SOLVING</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197ad52c3fd752172f0a1ab83eafb43a5ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_SOLVED</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197a2c63763478d91372827eae4dee66489d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_FREESOLVE</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197ac615e12115169856c3158d2cf0f69816</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STAGE_FREETRANS</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>ac8ea6cabb843c57e1232f3132959e197aaf26101c556d79c67dc8fc6c2bf5de4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_Setting</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>a9188b86ba054f59e6e7305b68a1d7e8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_UNDEFINED</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>a9188b86ba054f59e6e7305b68a1d7e8cad9a4ea96491a30398aa1d8794c57a73b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DISABLED</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>a9188b86ba054f59e6e7305b68a1d7e8ca1022fc582947c7c1c6c2f695c07f7f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_AUTO</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>a9188b86ba054f59e6e7305b68a1d7e8ca353a2b7bcbc89a72e2f6166579c2bb1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_ENABLED</name>
      <anchorfile>type__set_8h.html</anchorfile>
      <anchor>a9188b86ba054f59e6e7305b68a1d7e8ca40899558280a6fe878f7736b56c0099a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_sol.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__sol_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_SolOrigin</type>
      <name>SCIP_SOLORIGIN</name>
      <anchorfile>type__sol_8h.html</anchorfile>
      <anchor>abd765b92b43b5168095d6b8190541799</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Sol</type>
      <name>SCIP_SOL</name>
      <anchorfile>type__sol_8h.html</anchorfile>
      <anchor>a76b0c06e8d5c166fe241cced9564ce90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_SolOrigin</name>
      <anchorfile>type__sol_8h.html</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SOLORIGIN_ORIGINAL</name>
      <anchorfile>type__sol_8h.html</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a963ff089bdd92142985a4ea14e0c09ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SOLORIGIN_ZERO</name>
      <anchorfile>type__sol_8h.html</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a0fde3f9ac0d6a3dd64c1fce5b4cd904f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SOLORIGIN_LPSOL</name>
      <anchorfile>type__sol_8h.html</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a5eff2a83044f477c8043434ee888d8dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SOLORIGIN_RELAXSOL</name>
      <anchorfile>type__sol_8h.html</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a529bb20cabe94c9889ad0799cd871b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SOLORIGIN_PSEUDOSOL</name>
      <anchorfile>type__sol_8h.html</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a5632de564748020ebe9191eca4f04ae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_SOLORIGIN_UNKNOWN</name>
      <anchorfile>type__sol_8h.html</anchorfile>
      <anchor>a99095e0ba8b390582c3fdd2e2db9a972a4fc47531cb8dd5e95b18de874a5ae99d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_stat.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__stat_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_Status</type>
      <name>SCIP_STATUS</name>
      <anchorfile>type__stat_8h.html</anchorfile>
      <anchor>a30465694b6ab6a27960f09122bbee249</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Stat</type>
      <name>SCIP_STAT</name>
      <anchorfile>type__stat_8h.html</anchorfile>
      <anchor>a92f51c241549a2648456bf5115f82530</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_Status</name>
      <anchorfile>type__stat_8h.html</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_UNKNOWN</name>
      <anchorfile>type__stat_8h.html</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a46020099aa058f9014cb25f79af59202</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_USERINTERRUPT</name>
      <anchorfile>type__stat_8h.html</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a816ef44fcfd12aeee59193c42f021c83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_NODELIMIT</name>
      <anchorfile>type__stat_8h.html</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1aedcb1f7824f02a86c145ef2fd572c5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_STALLNODELIMIT</name>
      <anchorfile>type__stat_8h.html</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1ac66de5c6c86ceecbe04b46bd5457e40b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_TIMELIMIT</name>
      <anchorfile>type__stat_8h.html</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1ad7f949191b1a9ae4301e7191c2303947</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_MEMLIMIT</name>
      <anchorfile>type__stat_8h.html</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1af88484a2eb6d6d9132689c643f8e1ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_GAPLIMIT</name>
      <anchorfile>type__stat_8h.html</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a800fe8aa1388e019dfd01ace06934004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_SOLLIMIT</name>
      <anchorfile>type__stat_8h.html</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a1b74f071c02c9fc8a2520fbbca2d9ab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_BESTSOLLIMIT</name>
      <anchorfile>type__stat_8h.html</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a0e201a9701c78120e9b6a767060a37d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_OPTIMAL</name>
      <anchorfile>type__stat_8h.html</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a025d6f927300c87dc72906dede411bdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_INFEASIBLE</name>
      <anchorfile>type__stat_8h.html</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1ae918eb9c5342912cc34b4ff09602ce5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_UNBOUNDED</name>
      <anchorfile>type__stat_8h.html</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1a2f483ac39180cb8990a36c4ab5c37155</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_STATUS_INFORUNBD</name>
      <anchorfile>type__stat_8h.html</anchorfile>
      <anchor>a2a39907b1f4cdf028f7e7ef02c4e60b1ac1465de6f5107c40bdba58e38b978a57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_tree.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__tree_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_NodeType</type>
      <name>SCIP_NODETYPE</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>a3ae99c561d49d3a6e3d9286f0f0fb374</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Probingnode</type>
      <name>SCIP_PROBINGNODE</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>a8be27594b4ed416cf0723a3cd576a3a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Sibling</type>
      <name>SCIP_SIBLING</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>a61d8cdab78d5a0293fe14a394ba03057</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Child</type>
      <name>SCIP_CHILD</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>afd66c2979d5608a266faa80a10ab8290</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Leaf</type>
      <name>SCIP_LEAF</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>a5b733522a45e7736c3fd46603d57f70d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Junction</type>
      <name>SCIP_JUNCTION</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>ad85aae5483e5a746eb50317c057b92c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Pseudofork</type>
      <name>SCIP_PSEUDOFORK</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>ae046e99aba3015ad7356aebee479c5ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Fork</type>
      <name>SCIP_FORK</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>a2b4bd2117f2e337c6f76dc4dccba1e90</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Subroot</type>
      <name>SCIP_SUBROOT</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>ae42ea2cd07d4e72fc655aab8f5b14b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Node</type>
      <name>SCIP_NODE</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>a11fb26f4a85e9b693e2168e6e3d78301</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_PendingBdchg</type>
      <name>SCIP_PENDINGBDCHG</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>a364e1caa5158600f8ff1fba64efbcb9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Tree</type>
      <name>SCIP_TREE</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>a5909ba53b0264b1bfd1cb8c569fd87bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_NodeType</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_FOCUSNODE</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527daf6f6167502d882ef6254913f62aee98b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_PROBINGNODE</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527da9508ec555050cea156cbe00b56a3c460</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_SIBLING</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527dac7734873856ad3b175f03d6e1fec66f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_CHILD</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527da8bb4910f80c414e5527805abfa416530</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_LEAF</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527dae233552c1f4feded5a4efe36c46ed3f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_DEADEND</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527dabf40ae6fd461336ef3a488f7ffbe9d71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_JUNCTION</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527dab919c718e1c34b5d09c22431ac2490cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_PSEUDOFORK</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527daba4e899a06df4c75de945e542cd46d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_FORK</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527da3e735c313172c19c0725fd634eaa28cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_SUBROOT</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527dae50fcb4b9dbeee55e7bad88bd84574e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_NODETYPE_REFOCUSNODE</name>
      <anchorfile>type__tree_8h.html</anchorfile>
      <anchor>afbf33e0ad72332ab6c0c00daaab7527da3e4dce7929a67c0a9aa2152ff6d1d73d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_var.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__var_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_VARDELORIG</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a3d664f7cbdddc8194d98744eeecdbe6a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_VARTRANS</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a5ea850f9a54e01f3c090dd2457de9e02</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_VARDELTRANS</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a9edde06f9dc9ccc02788855773e840f5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCIP_DECL_VARCOPY</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a9dbea961f48f9b0e51b1e745500f5502</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_Varstatus</type>
      <name>SCIP_VARSTATUS</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>aca7d8ff33dfcda928d28e7e40320b4dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_Vartype</type>
      <name>SCIP_VARTYPE</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>ac1df37286b62364af9d5fbf11aa79ff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_DomchgType</type>
      <name>SCIP_DOMCHGTYPE</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a01da5a5b9c9a60b4d07d8245514edccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum SCIP_BoundchgType</type>
      <name>SCIP_BOUNDCHGTYPE</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a108f6095e2a5da5783ca8b4bb3556f97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_DomChgBound</type>
      <name>SCIP_DOMCHGBOUND</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a6cd9aed9c2b005f5e107f8c6ec1e2b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_DomChgBoth</type>
      <name>SCIP_DOMCHGBOTH</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a1fd047deaabddff66e46dd0788e87f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_DomChgDyn</type>
      <name>SCIP_DOMCHGDYN</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a5af9350b5eaa73ecabf33fc329c0dda0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>union SCIP_DomChg</type>
      <name>SCIP_DOMCHG</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a440799a07900a7d887c657d5b00d224d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_BoundChg</type>
      <name>SCIP_BOUNDCHG</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a4f91a3978ac708da31b1e2f1934c0849</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_BdChgIdx</type>
      <name>SCIP_BDCHGIDX</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a511bb905f473e197a215b25c793998ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_BdChgInfo</type>
      <name>SCIP_BDCHGINFO</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a925fe78a28182518adb3d63b40f938c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_BranchingData</type>
      <name>SCIP_BRANCHINGDATA</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a5e893fd37bb8e919ee60825c08f5aa4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_InferenceData</type>
      <name>SCIP_INFERENCEDATA</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>adefac67265d123c5577e56ecabccf33c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_HoleChg</type>
      <name>SCIP_HOLECHG</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a3dfdf57732e3b5fbc57dd66f7614f3cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Hole</type>
      <name>SCIP_HOLE</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>ad00bc67733111f27742ef9a8d2dd3bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Holelist</type>
      <name>SCIP_HOLELIST</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a7b792a43b58ca5a6fc9c4a2b8249adee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Dom</type>
      <name>SCIP_DOM</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>aa380b34038c31d0a82682c2c8417b651</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Original</type>
      <name>SCIP_ORIGINAL</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a4e5cbda8d544981df177088d1d9e6964</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Aggregate</type>
      <name>SCIP_AGGREGATE</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>aab8f0772a05ddee6496bbb26fd2d35b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Multaggr</type>
      <name>SCIP_MULTAGGR</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>aad9eac251f51f7a681cc3bab317f5db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Negate</type>
      <name>SCIP_NEGATE</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>aaca9ec0cd63fe0a811a6c3dabd7e5e68</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Var</type>
      <name>SCIP_VAR</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a032edd1f5032513d49e397ebdcc8915b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_VarData</type>
      <name>SCIP_VARDATA</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a008eb4c31318a2b51893dcbefbe41eda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_Varstatus</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARSTATUS_ORIGINAL</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6a006bd5053a7230a1c5504ee5418617a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARSTATUS_LOOSE</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6adc590626427b77909527759eaeaf5018</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARSTATUS_COLUMN</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6a2ec06e9a73a560b2f55d4fe7f571c3b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARSTATUS_FIXED</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6a2ae55b9ed97cacae74094045dc9f06f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARSTATUS_AGGREGATED</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6ac50c97dbe34db4821c8695c85236d414</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARSTATUS_MULTAGGR</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6a74afacbc821533e3a6af0cccff858e3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARSTATUS_NEGATED</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a8db5f0f2fea06fb5f5042b0332d4b0a6aa5c14d1038a3aebce85367325ddaf2f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_Vartype</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a82bdd607eb230a034afa23a7f7af96e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARTYPE_BINARY</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a82bdd607eb230a034afa23a7f7af96e6a5314e041d090fe33a3fa7f83ba8fde7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARTYPE_INTEGER</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a82bdd607eb230a034afa23a7f7af96e6a34025cec1898c4f574a26c5abe89e035</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARTYPE_IMPLINT</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a82bdd607eb230a034afa23a7f7af96e6a52adc320bb26f953a1f870b12f06c59c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VARTYPE_CONTINUOUS</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a82bdd607eb230a034afa23a7f7af96e6a4cb0a787c0618667f3a87a48489af574</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_DomchgType</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a4a73fb564290bfaef6308f3af67fe1b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DOMCHGTYPE_DYNAMIC</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a4a73fb564290bfaef6308f3af67fe1b4a194c9807afded9fdf239b083cc43138f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DOMCHGTYPE_BOTH</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a4a73fb564290bfaef6308f3af67fe1b4ae96056dcbe328964480d88bcfad39f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_DOMCHGTYPE_BOUND</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a4a73fb564290bfaef6308f3af67fe1b4aadacd88e158bbed2465e9bf5fc3c4e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_BoundchgType</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a878b95f3c2e201709dbfc3a45645b1ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BOUNDCHGTYPE_BRANCHING</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a878b95f3c2e201709dbfc3a45645b1ffaade3be6662763d87c4da03c37ffa4fb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BOUNDCHGTYPE_CONSINFER</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a878b95f3c2e201709dbfc3a45645b1ffae2dca55c5754c34fa28c51bcb2063a78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_BOUNDCHGTYPE_PROPINFER</name>
      <anchorfile>type__var_8h.html</anchorfile>
      <anchor>a878b95f3c2e201709dbfc3a45645b1ffa5fd3c3f1eb344704260d1832a2195ad0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>type_vbc.h</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/src/scip/</path>
    <filename>type__vbc_8h</filename>
    <member kind="typedef">
      <type>enum SCIP_VBCColor</type>
      <name>SCIP_VBCCOLOR</name>
      <anchorfile>type__vbc_8h.html</anchorfile>
      <anchor>a7af19cdc5104942bb52d1353c1c4faf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SCIP_Vbc</type>
      <name>SCIP_VBC</name>
      <anchorfile>type__vbc_8h.html</anchorfile>
      <anchor>a05f54c173e9fb960f687199c42a82a37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>SCIP_VBCColor</name>
      <anchorfile>type__vbc_8h.html</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VBCCOLOR_UNSOLVED</name>
      <anchorfile>type__vbc_8h.html</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8a1303a24deefb6e60a8aa39e826dd8751</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VBCCOLOR_SOLVED</name>
      <anchorfile>type__vbc_8h.html</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8a811091321df90e374aa3bb009130c46d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VBCCOLOR_CUTOFF</name>
      <anchorfile>type__vbc_8h.html</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8addcfe69ab76ecfa42fcee0f1e0a9cdd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VBCCOLOR_CONFLICT</name>
      <anchorfile>type__vbc_8h.html</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8aec6dd2aa7d2a10e11dea9e4c499f110f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VBCCOLOR_MARKREPROP</name>
      <anchorfile>type__vbc_8h.html</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8a6b5da1d6590e8c5f95d81f347b493c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VBCCOLOR_REPROP</name>
      <anchorfile>type__vbc_8h.html</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8a75d0f04eb370ebffd20d089072e1c435</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VBCCOLOR_SOLUTION</name>
      <anchorfile>type__vbc_8h.html</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8a772272db93d8620bb4b8e46319102684</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIP_VBCCOLOR_NONE</name>
      <anchorfile>type__vbc_8h.html</anchorfile>
      <anchor>ade28dec7694b51161d2acc407b689ce8ad88b2ad326bb7b82a80193e0cdc8d601</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>xternal.c</name>
    <path>/nfs/optimi/kombadon/bzfheinz/projects/scip-2.0.1/doc/</path>
    <filename>xternal_8c</filename>
  </compound>
  <compound kind="page">
    <name>CODE</name>
    <title>Coding style guidelines</title>
    <filename>CODE</filename>
  </compound>
  <compound kind="page">
    <name>MAKE</name>
    <title>Makefiles / Installation information</title>
    <filename>MAKE</filename>
    <docanchor file="MAKE">COMPILERPROBLEMS</docanchor>
    <docanchor file="MAKE">WINDOWS</docanchor>
    <docanchor file="MAKE">EXAMPLE1</docanchor>
    <docanchor file="MAKE">RUN</docanchor>
    <docanchor file="MAKE">EXAMPLE2</docanchor>
  </compound>
  <compound kind="page">
    <name>START</name>
    <title>How to start a new project</title>
    <filename>START</filename>
  </compound>
  <compound kind="page">
    <name>DOC</name>
    <title>How to search the documentation for interface methods</title>
    <filename>DOC</filename>
  </compound>
  <compound kind="page">
    <name>CONS</name>
    <title>How to add constraint handlers</title>
    <filename>CONS</filename>
    <docanchor file="CONS">CONS_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="CONS">CONS_INTERFACE</docanchor>
    <docanchor file="CONS">CONSPRINT</docanchor>
    <docanchor file="CONS">CONSPRESOL</docanchor>
    <docanchor file="CONS">CONSRESPROP</docanchor>
    <docanchor file="CONS">CONSACTIVE</docanchor>
    <docanchor file="CONS">CONSSEPALP</docanchor>
    <docanchor file="CONS">CONSFREE</docanchor>
    <docanchor file="CONS">CONSINITLP</docanchor>
    <docanchor file="CONS">CONSEXIT</docanchor>
    <docanchor file="CONS">CONSHDLRCOPY</docanchor>
    <docanchor file="CONS">CONSCHECK</docanchor>
    <docanchor file="CONS">CONSEXITPRE</docanchor>
    <docanchor file="CONS">CONS_DATA</docanchor>
    <docanchor file="CONS">CONSENFOLP</docanchor>
    <docanchor file="CONS">CONSEXITSOL</docanchor>
    <docanchor file="CONS">CONSSEPASOL</docanchor>
    <docanchor file="CONS">CONS_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="CONS">CONS_PROPERTIES</docanchor>
    <docanchor file="CONS">CONSINITPRE</docanchor>
    <docanchor file="CONS">CONSLOCK</docanchor>
    <docanchor file="CONS">CONSENABLE</docanchor>
    <docanchor file="CONS">CONSPROP</docanchor>
    <docanchor file="CONS">CONSTRANS</docanchor>
    <docanchor file="CONS">CONSCOPY</docanchor>
    <docanchor file="CONS">CONSDEACTIVE</docanchor>
    <docanchor file="CONS">CONSDELETE</docanchor>
    <docanchor file="CONS">CONSPARSE</docanchor>
    <docanchor file="CONS">CONSINITSOL</docanchor>
    <docanchor file="CONS">CONSENFOPS</docanchor>
    <docanchor file="CONS">CONSINIT</docanchor>
    <docanchor file="CONS">CONSDISABLE</docanchor>
  </compound>
  <compound kind="page">
    <name>PRICER</name>
    <title>How to add variable pricers</title>
    <filename>PRICER</filename>
    <docanchor file="PRICER">PRICERCOPY</docanchor>
    <docanchor file="PRICER">PRICERREDCOST</docanchor>
    <docanchor file="PRICER">PRICEREXITSOL</docanchor>
    <docanchor file="PRICER">PRICERINITSOL</docanchor>
    <docanchor file="PRICER">PRICERFREE</docanchor>
    <docanchor file="PRICER">PRICERFARKAS</docanchor>
    <docanchor file="PRICER">PRICER_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="PRICER">PRICER_PROPERTIES</docanchor>
    <docanchor file="PRICER">PRICEREXIT</docanchor>
    <docanchor file="PRICER">PRICERINIT</docanchor>
    <docanchor file="PRICER">PRICER_INTERFACE</docanchor>
    <docanchor file="PRICER">PRICER_DATA</docanchor>
    <docanchor file="PRICER">PRICER_REMARKS</docanchor>
    <docanchor file="PRICER">PRICER_FUNDAMENTALCALLBACKS</docanchor>
  </compound>
  <compound kind="page">
    <name>PRESOL</name>
    <title>How to add presolvers</title>
    <filename>PRESOL</filename>
    <docanchor file="PRESOL">PRESOLCOPY</docanchor>
    <docanchor file="PRESOL">PRESOLEXIT</docanchor>
    <docanchor file="PRESOL">PRESOLINIT</docanchor>
    <docanchor file="PRESOL">PRESOLEXEC</docanchor>
    <docanchor file="PRESOL">PRESOL_DATA</docanchor>
    <docanchor file="PRESOL">PRESOL_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="PRESOL">PRESOLEXITPRE</docanchor>
    <docanchor file="PRESOL">PRESOLINITPRE</docanchor>
    <docanchor file="PRESOL">PRESOL_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="PRESOL">PRESOL_INTERFACE</docanchor>
    <docanchor file="PRESOL">PRESOL_PROPERTIES</docanchor>
    <docanchor file="PRESOL">PRESOLFREE</docanchor>
  </compound>
  <compound kind="page">
    <name>SEPA</name>
    <title>How to add separators</title>
    <filename>SEPA</filename>
    <docanchor file="SEPA">SEPAEXITSOL</docanchor>
    <docanchor file="SEPA">SEPA_DATA</docanchor>
    <docanchor file="SEPA">SEPAEXIT</docanchor>
    <docanchor file="SEPA">SEPAINITSOL</docanchor>
    <docanchor file="SEPA">SEPAEXECSOL</docanchor>
    <docanchor file="SEPA">SEPACOPY</docanchor>
    <docanchor file="SEPA">SEPAFREE</docanchor>
    <docanchor file="SEPA">SEPA_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="SEPA">SEPA_INTERFACE</docanchor>
    <docanchor file="SEPA">SEPA_PROPERTIES</docanchor>
    <docanchor file="SEPA">SEPAINIT</docanchor>
    <docanchor file="SEPA">SEPAEXECLP</docanchor>
    <docanchor file="SEPA">SEPA_ADDITIONALCALLBACKS</docanchor>
  </compound>
  <compound kind="page">
    <name>PROP</name>
    <title>How to add propagators</title>
    <filename>PROP</filename>
    <docanchor file="PROP">PROP_PROPERTIES</docanchor>
    <docanchor file="PROP">PROPRESPROP</docanchor>
    <docanchor file="PROP">PROP_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="PROP">PROPEXITSOL</docanchor>
    <docanchor file="PROP">PROP_INTERFACE</docanchor>
    <docanchor file="PROP">PROPCOPY</docanchor>
    <docanchor file="PROP">PROPFREE</docanchor>
    <docanchor file="PROP">PROPINIT</docanchor>
    <docanchor file="PROP">PROP_DATA</docanchor>
    <docanchor file="PROP">PROP_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="PROP">PROPINITSOL</docanchor>
    <docanchor file="PROP">PROPEXEC</docanchor>
    <docanchor file="PROP">PROPEXIT</docanchor>
  </compound>
  <compound kind="page">
    <name>BRANCH</name>
    <title>How to add branching rules</title>
    <filename>BRANCH</filename>
    <docanchor file="BRANCH">BRANCHRULE_DATA</docanchor>
    <docanchor file="BRANCH">BRANCHEXECPS</docanchor>
    <docanchor file="BRANCH">BRANCHEXITSOL</docanchor>
    <docanchor file="BRANCH">BRANCHRULE_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="BRANCH">BRANCHEXEC</docanchor>
    <docanchor file="BRANCH">BRANCHINITSOL</docanchor>
    <docanchor file="BRANCH">BRANCHEXECLP</docanchor>
    <docanchor file="BRANCH">BRANCHEXECEXT</docanchor>
    <docanchor file="BRANCH">BRANCHINIT</docanchor>
    <docanchor file="BRANCH">BRANCHRULE_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="BRANCH">BRANCHCOPY</docanchor>
    <docanchor file="BRANCH">BRANCHRULE_PROPERTIES</docanchor>
    <docanchor file="BRANCH">BRANCHEXIT</docanchor>
    <docanchor file="BRANCH">BRANCHRULE_INTERFACE</docanchor>
    <docanchor file="BRANCH">BRANCHFREE</docanchor>
  </compound>
  <compound kind="page">
    <name>NODESEL</name>
    <title>How to add node selectors</title>
    <filename>NODESEL</filename>
    <docanchor file="NODESEL">NODESELEXITSOL</docanchor>
    <docanchor file="NODESEL">NODESELINITSOL</docanchor>
    <docanchor file="NODESEL">NODESELSELECT</docanchor>
    <docanchor file="NODESEL">NODESELFREE</docanchor>
    <docanchor file="NODESEL">NODESEL_PROPERTIES</docanchor>
    <docanchor file="NODESEL">NODESEL_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="NODESEL">NODESEL_DATA</docanchor>
    <docanchor file="NODESEL">NODESELEXIT</docanchor>
    <docanchor file="NODESEL">NODESELINIT</docanchor>
    <docanchor file="NODESEL">NODESEL_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="NODESEL">NODESELCOMP</docanchor>
    <docanchor file="NODESEL">NODESEL_INTERFACE</docanchor>
    <docanchor file="NODESEL">NODESELCOPY</docanchor>
  </compound>
  <compound kind="page">
    <name>HEUR</name>
    <title>How to add primal heuristics</title>
    <filename>HEUR</filename>
    <docanchor file="HEUR">HEURINIT</docanchor>
    <docanchor file="HEUR">HEUREXEC</docanchor>
    <docanchor file="HEUR">HEUR_INTERFACE</docanchor>
    <docanchor file="HEUR">HEUR_DATA</docanchor>
    <docanchor file="HEUR">HEUR_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="HEUR">HEUREXITSOL</docanchor>
    <docanchor file="HEUR">HEUREXIT</docanchor>
    <docanchor file="HEUR">HEURINITSOL</docanchor>
    <docanchor file="HEUR">HEUR_PROPERTIES</docanchor>
    <docanchor file="HEUR">HEUR_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="HEUR">HEURFREE</docanchor>
    <docanchor file="HEUR">HEURCOPY</docanchor>
  </compound>
  <compound kind="page">
    <name>RELAX</name>
    <title>How to add relaxation handlers</title>
    <filename>RELAX</filename>
    <docanchor file="RELAX">REALXEXITSOL</docanchor>
    <docanchor file="RELAX">RELAXEXIT</docanchor>
    <docanchor file="RELAX">RELAXINIT</docanchor>
    <docanchor file="RELAX">RELAXEXEC</docanchor>
    <docanchor file="RELAX">RELAX_DATA</docanchor>
    <docanchor file="RELAX">RELAX_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="RELAX">RELAX_INTERFACE</docanchor>
    <docanchor file="RELAX">RELAXFREE</docanchor>
    <docanchor file="RELAX">RELAX_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="RELAX">RELAXINITSOL</docanchor>
    <docanchor file="RELAX">RELAXCOPY</docanchor>
    <docanchor file="RELAX">RELAX_PROPERTIES</docanchor>
  </compound>
  <compound kind="page">
    <name>READER</name>
    <title>How to add file readers</title>
    <filename>READER</filename>
    <docanchor file="READER">READERWRITE</docanchor>
    <docanchor file="READER">READERCOPY</docanchor>
    <docanchor file="READER">READERREAD</docanchor>
    <docanchor file="READER">READER_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="READER">READER_INTERFACE</docanchor>
    <docanchor file="READER">READER_PROPERTIES</docanchor>
    <docanchor file="READER">READERFREE</docanchor>
    <docanchor file="READER">READER_DATA</docanchor>
    <docanchor file="READER">READER_ADDITIONALCALLBACKS</docanchor>
  </compound>
  <compound kind="page">
    <name>DIALOG</name>
    <title>How to add dialogs</title>
    <filename>DIALOG</filename>
    <docanchor file="DIALOG">DIALOGEXEC</docanchor>
    <docanchor file="DIALOG">DIALOG_INTERFACE</docanchor>
    <docanchor file="DIALOG">DIALOGDESC</docanchor>
    <docanchor file="DIALOG">DIALOG_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="DIALOG">DIALOG_DATA</docanchor>
    <docanchor file="DIALOG">DIALOGCOPY</docanchor>
    <docanchor file="DIALOG">DIALOG_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="DIALOG">DIALOGPFREE</docanchor>
    <docanchor file="DIALOG">DIALOG_PROPERTIES</docanchor>
  </compound>
  <compound kind="page">
    <name>DISP</name>
    <title>How to add display columns</title>
    <filename>DISP</filename>
    <docanchor file="DISP">DISPINIT</docanchor>
    <docanchor file="DISP">DISP_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="DISP">DISP_DATA</docanchor>
    <docanchor file="DISP">DISP_INTERFACE</docanchor>
    <docanchor file="DISP">DISPEXITSOL</docanchor>
    <docanchor file="DISP">DISPFREE</docanchor>
    <docanchor file="DISP">DISPEXIT</docanchor>
    <docanchor file="DISP">DISP_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="DISP">DISPOUTPUT</docanchor>
    <docanchor file="DISP">DISPINITSOL</docanchor>
    <docanchor file="DISP">DISPCOPY</docanchor>
    <docanchor file="DISP">DISP_PROPERTIES</docanchor>
  </compound>
  <compound kind="page">
    <name>EVENT</name>
    <title>How to add event handler</title>
    <filename>EVENT</filename>
    <docanchor file="EVENT">EVENTHDLR_DATA</docanchor>
    <docanchor file="EVENT">EVENTCOPY</docanchor>
    <docanchor file="EVENT">EVENTTYPES</docanchor>
    <docanchor file="EVENT">EVENTEXIT</docanchor>
    <docanchor file="EVENT">EVENTEXEC</docanchor>
    <docanchor file="EVENT">EVENTINITSOL</docanchor>
    <docanchor file="EVENT">EVENT_ADDITIONALCALLBACKS</docanchor>
    <docanchor file="EVENT">EVENT_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="EVENT">EVENTINIT</docanchor>
    <docanchor file="EVENT">EVENT_INTERFACE</docanchor>
    <docanchor file="EVENT">EVENTUSAGE</docanchor>
    <docanchor file="EVENT">EVENTFREE</docanchor>
    <docanchor file="EVENT">EVENTEXITSOL</docanchor>
    <docanchor file="EVENT">EVENTHDLR_PROPERTIES</docanchor>
  </compound>
  <compound kind="page">
    <name>NLPI</name>
    <title>How to add interfaces to nonlinear programming solvers</title>
    <filename>NLPI</filename>
    <docanchor file="NLPI">NLPISETREALPAR</docanchor>
    <docanchor file="NLPI">NLPISETINITIALGUESS</docanchor>
    <docanchor file="NLPI">NLPICHGEXPRTREE</docanchor>
    <docanchor file="NLPI">NLPIDELCONSSET</docanchor>
    <docanchor file="NLPI">NLPIGETSOLVERPOINTER</docanchor>
    <docanchor file="NLPI">NLPICHGLINEARCOEFS</docanchor>
    <docanchor file="NLPI">NLPIADDVARS</docanchor>
    <docanchor file="NLPI">NLPIGETSTATISTICS</docanchor>
    <docanchor file="NLPI">NLPISOLVE</docanchor>
    <docanchor file="NLPI">NLPI_FUNDAMENTALCALLBACKS</docanchor>
    <docanchor file="NLPI">NLPI_INTERFACE</docanchor>
    <docanchor file="NLPI">NLPIGETPROBLEMPOINTER</docanchor>
    <docanchor file="NLPI">NLPICOPY</docanchor>
    <docanchor file="NLPI">NLPI_PROPERTIES</docanchor>
    <docanchor file="NLPI">NLPIGETSOLSTAT</docanchor>
    <docanchor file="NLPI">NLPICHGQUADCOEFS</docanchor>
    <docanchor file="NLPI">NLPICHGCONSSIDES</docanchor>
    <docanchor file="NLPI">NLPISETSTRINGPAR</docanchor>
    <docanchor file="NLPI">NLPIGETSOLUTION</docanchor>
    <docanchor file="NLPI">NLPICREATEPROBLEM</docanchor>
    <docanchor file="NLPI">NLPIGETINTPAR</docanchor>
    <docanchor file="NLPI">NLPICHGOBJCONSTANT</docanchor>
    <docanchor file="NLPI">NLPI_DATA</docanchor>
    <docanchor file="NLPI">NLPIGETREALPAR</docanchor>
    <docanchor file="NLPI">NLPISETINTPAR</docanchor>
    <docanchor file="NLPI">NLPIGETTERMSTAT</docanchor>
    <docanchor file="NLPI">NLPIDELVARSET</docanchor>
    <docanchor file="NLPI">NLPIFREEPROBLEM</docanchor>
    <docanchor file="NLPI">NLPIFREE</docanchor>
    <docanchor file="NLPI">NLPIGETSTRINGPAR</docanchor>
    <docanchor file="NLPI">NLPISETOBJECTIVE</docanchor>
    <docanchor file="NLPI">NLPICHGNONLINCOEF</docanchor>
    <docanchor file="NLPI">NLPICHGVARBOUNDS</docanchor>
    <docanchor file="NLPI">NLPIADDCONSTRAINTS</docanchor>
  </compound>
  <compound kind="page">
    <name>EXPRINT</name>
    <title>How to add interfaces to expression interpreters</title>
    <filename>EXPRINT</filename>
    <docanchor file="EXPRINT">SCIPexprintEvalInt</docanchor>
    <docanchor file="EXPRINT">SCIPexprintCompile</docanchor>
    <docanchor file="EXPRINT">SCIPexprintGetName</docanchor>
    <docanchor file="EXPRINT">SCIPexprintHessianDense</docanchor>
    <docanchor file="EXPRINT">SCIPexprintGrad</docanchor>
    <docanchor file="EXPRINT">SCIPexprintNewParametrization</docanchor>
    <docanchor file="EXPRINT">SCIPexprintFree</docanchor>
    <docanchor file="EXPRINT">SCIPexprintFreeData</docanchor>
    <docanchor file="EXPRINT">SCIPexprintGetCapability</docanchor>
    <docanchor file="EXPRINT">EXPRINT_INTERFACE</docanchor>
    <docanchor file="EXPRINT">SCIPexprintGradInt</docanchor>
    <docanchor file="EXPRINT">SCIPexprintHessianSparsityDense</docanchor>
    <docanchor file="EXPRINT">SCIPexprintEval</docanchor>
    <docanchor file="EXPRINT">SCIPexprintCreate</docanchor>
    <docanchor file="EXPRINT">SCIPexprintGetDesc</docanchor>
    <docanchor file="EXPRINT">EXPRINT_DATA</docanchor>
  </compound>
  <compound kind="page">
    <name>OBJ</name>
    <title>Creating, capturing, releasing, and adding data objects</title>
    <filename>OBJ</filename>
  </compound>
  <compound kind="page">
    <name>PARAM</name>
    <title>Adding additional user parameters</title>
    <filename>PARAM</filename>
  </compound>
  <compound kind="page">
    <name>DEBUG</name>
    <title>Debugging</title>
    <filename>DEBUG</filename>
    <docanchor file="DEBUG">EXAMPLE_1</docanchor>
    <docanchor file="DEBUG">EXAMPLE_2</docanchor>
  </compound>
  <compound kind="page">
    <name>TEST</name>
    <title>How to run automated tests with SCIP</title>
    <filename>TEST</filename>
    <docanchor file="TEST">USING</docanchor>
    <docanchor file="TEST">SOLVER</docanchor>
    <docanchor file="TEST">STARTING</docanchor>
    <docanchor file="TEST">SETUP</docanchor>
    <docanchor file="TEST">COMPARE</docanchor>
    <docanchor file="TEST">EVAL</docanchor>
    <docanchor file="TEST">ADVANCED</docanchor>
  </compound>
  <compound kind="page">
    <name>CHG1</name>
    <title>Interface changes between SCIP 0.9 and SCIP 1.0</title>
    <filename>CHG1</filename>
    <docanchor file="CHG1">CHGPARAM</docanchor>
  </compound>
  <compound kind="page">
    <name>CHG2</name>
    <title>Interface changes between SCIP 1.0 and SCIP 1.1</title>
    <filename>CHG2</filename>
  </compound>
  <compound kind="page">
    <name>CHG3</name>
    <title>Interface changes between SCIP 1.1 and SCIP 1.2</title>
    <filename>CHG3</filename>
    <docanchor file="CHG3">MISCELLANEOUS</docanchor>
    <docanchor file="CHG3">CHGINTERFUNC</docanchor>
    <docanchor file="CHG3">CHGCALLBACKS</docanchor>
  </compound>
  <compound kind="page">
    <name>CHG4</name>
    <title>Interface changes between SCIP 1.2 and SCIP 2.0</title>
    <filename>CHG4</filename>
    <docanchor file="CHG4">MISCELLANEOUS4</docanchor>
    <docanchor file="CHG4">CHGCALLBACKS4</docanchor>
    <docanchor file="CHG4">CHGINTERFUNC4</docanchor>
  </compound>
  <compound kind="page">
    <name>COUNTER</name>
    <title>How to use SCIP to count feasible solution</title>
    <filename>COUNTER</filename>
    <docanchor file="COUNTER">COUNTWRITE</docanchor>
    <docanchor file="COUNTER">COUNTOPTIMAL</docanchor>
    <docanchor file="COUNTER">COUNTLIMIT</docanchor>
  </compound>
  <compound kind="page">
    <name>LICENSE</name>
    <title>License</title>
    <filename>LICENSE</filename>
  </compound>
  <compound kind="page">
    <name>FAQ</name>
    <title>Frequently Asked Questions (FAQ)</title>
    <filename>FAQ</filename>
  </compound>
  <compound kind="page">
    <name>AUTHORS</name>
    <title>SCIP Authors</title>
    <filename>AUTHORS</filename>
  </compound>
  <compound kind="page">
    <name>INSTALL</name>
    <title>Installation information</title>
    <filename>INSTALL</filename>
  </compound>
  <compound kind="page">
    <name>RELEASENOTES</name>
    <title>Release notes</title>
    <filename>RELEASENOTES</filename>
  </compound>
  <compound kind="page">
    <name>CHANGELOG</name>
    <title>CHANGELOG</title>
    <filename>CHANGELOG</filename>
  </compound>
  <compound kind="page">
    <name>PARAMETERS</name>
    <title>List of all SCIP parameters</title>
    <filename>PARAMETERS</filename>
  </compound>
  <compound kind="page">
    <name>SCIPPY</name>
    <title>SCIPPY images</title>
    <filename>SCIPPY</filename>
  </compound>
  <compound kind="group">
    <name>PUBLICMETHODS</name>
    <title>Public Methods</title>
    <filename>group__PUBLICMETHODS.html</filename>
    <file>pub_branch.h</file>
    <file>pub_conflict.h</file>
    <file>pub_cons.h</file>
    <file>pub_cutpool.h</file>
    <file>pub_dialog.h</file>
    <file>pub_disp.h</file>
    <file>pub_event.h</file>
    <file>pub_fileio.h</file>
    <file>pub_heur.h</file>
    <file>pub_implics.h</file>
    <file>pub_lp.h</file>
    <file>pub_message.h</file>
    <file>pub_misc.h</file>
    <file>pub_nlp.h</file>
    <file>pub_nodesel.h</file>
    <file>pub_paramset.h</file>
    <file>pub_presol.h</file>
    <file>pub_pricer.h</file>
    <file>pub_prop.h</file>
    <file>pub_reader.h</file>
    <file>pub_relax.h</file>
    <file>pub_sepa.h</file>
    <file>pub_sol.h</file>
    <file>pub_tree.h</file>
    <file>pub_var.h</file>
    <file>scip.h</file>
    <file>pub_message.h</file>
  </compound>
  <compound kind="group">
    <name>TYPEDEFINITIONS</name>
    <title>Type Definitions</title>
    <filename>group__TYPEDEFINITIONS.html</filename>
    <file>type_branch.h</file>
    <file>type_conflict.h</file>
    <file>type_cons.h</file>
    <file>type_dialog.h</file>
    <file>type_disp.h</file>
    <file>type_event.h</file>
    <file>type_heur.h</file>
    <file>type_history.h</file>
    <file>type_message.h</file>
    <file>type_misc.h</file>
    <file>type_nodesel.h</file>
    <file>type_paramset.h</file>
    <file>type_presol.h</file>
    <file>type_pricer.h</file>
    <file>type_prob.h</file>
    <file>type_prop.h</file>
    <file>type_reader.h</file>
    <file>type_relax.h</file>
    <file>type_sepa.h</file>
    <file>type_var.h</file>
    <file>type_message.h</file>
    <file>type_expression.h</file>
    <file>type_nlpi.h</file>
  </compound>
  <compound kind="group">
    <name>BRANCHINGRULES</name>
    <title>Branching Rules</title>
    <filename>group__BRANCHINGRULES.html</filename>
    <file>branch_allfullstrong.c</file>
    <file>branch_fullstrong.c</file>
    <file>branch_inference.c</file>
    <file>branch_leastinf.c</file>
    <file>branch_mostinf.c</file>
    <file>branch_pscost.c</file>
    <file>branch_random.c</file>
    <file>branch_relpscost.c</file>
  </compound>
  <compound kind="group">
    <name>CONSHDLRS</name>
    <title>Constraint Handler</title>
    <filename>group__CONSHDLRS.html</filename>
    <file>cons_and.c</file>
    <file>cons_binpack.c</file>
    <file>cons_bounddisjunction.c</file>
    <file>cons_conjunction.c</file>
    <file>cons_countsols.c</file>
    <file>cons_cumulative.c</file>
    <file>cons_eqknapsack.c</file>
    <file>cons_indicator.c</file>
    <file>cons_integral.c</file>
    <file>cons_invarknapsack.c</file>
    <file>cons_knapsack.c</file>
    <file>cons_linear.c</file>
    <file>cons_logicor.c</file>
    <file>cons_or.c</file>
    <file>cons_quadratic.c</file>
    <file>cons_setppc.c</file>
    <file>cons_soc.c</file>
    <file>cons_sos1.c</file>
    <file>cons_sos2.c</file>
    <file>cons_varbound.c</file>
    <file>cons_xor.c</file>
  </compound>
  <compound kind="group">
    <name>DIALOGS</name>
    <title>Dialogs</title>
    <filename>group__DIALOGS.html</filename>
    <file>dialog_default.c</file>
  </compound>
  <compound kind="group">
    <name>DISPLAYS</name>
    <title>Displays</title>
    <filename>group__DISPLAYS.html</filename>
    <file>disp_default.c</file>
  </compound>
  <compound kind="group">
    <name>EXPRINTS</name>
    <title>Expression Interpreter</title>
    <filename>group__EXPRINTS.html</filename>
    <file>exprinterpret_cppad.cpp</file>
    <file>exprinterpret_none.c</file>
  </compound>
  <compound kind="group">
    <name>FILEREADERS</name>
    <title>File Readers</title>
    <filename>group__FILEREADERS.html</filename>
    <file>reader_ccg.c</file>
    <file>reader_cip.c</file>
    <file>reader_cnf.c</file>
    <file>reader_fix.c</file>
    <file>reader_fzn.c</file>
    <file>reader_lp.c</file>
    <file>reader_mps.c</file>
    <file>reader_opb.c</file>
    <file>reader_pip.c</file>
    <file>reader_pip.h</file>
    <file>reader_ppm.c</file>
    <file>reader_rlp.c</file>
    <file>reader_sol.c</file>
    <file>reader_wbo.c</file>
    <file>reader_zpl.c</file>
  </compound>
  <compound kind="group">
    <name>LPIS</name>
    <title>LP Solver Interfaces</title>
    <filename>group__LPIS.html</filename>
    <file>lpi_clp.cpp</file>
    <file>lpi_cpx.c</file>
    <file>lpi_grb.c</file>
    <file>lpi_msk.c</file>
    <file>lpi_none.c</file>
    <file>lpi_spx.cpp</file>
    <file>lpi_spx121.cpp</file>
    <file>lpi_spx132.cpp</file>
    <file>lpi_xprs.c</file>
  </compound>
  <compound kind="group">
    <name>NODESELECTORS</name>
    <title>Node Selectors</title>
    <filename>group__NODESELECTORS.html</filename>
    <file>nodesel_bfs.c</file>
    <file>nodesel_dfs.c</file>
    <file>nodesel_estimate.c</file>
    <file>nodesel_hybridestim.c</file>
    <file>nodesel_restartdfs.c</file>
  </compound>
  <compound kind="group">
    <name>NLPIS</name>
    <title>NLP Solver Interfaces</title>
    <filename>group__NLPIS.html</filename>
    <file>nlpi_ipopt.cpp</file>
    <file>nlpi_ipopt.h</file>
  </compound>
  <compound kind="group">
    <name>PRESOLVERS</name>
    <title>Presolvers</title>
    <filename>group__PRESOLVERS.html</filename>
    <file>presol_boundshift.c</file>
    <file>presol_dualfix.c</file>
    <file>presol_implics.c</file>
    <file>presol_inttobinary.c</file>
    <file>presol_probing.c</file>
    <file>presol_trivial.c</file>
  </compound>
  <compound kind="group">
    <name>PRICERS</name>
    <title>Pricers</title>
    <filename>group__PRICERS.html</filename>
  </compound>
  <compound kind="group">
    <name>PRIMALHEURISTICS</name>
    <title>Primal Heuristics</title>
    <filename>group__PRIMALHEURISTICS.html</filename>
    <file>heur_actconsdiving.c</file>
    <file>heur_coefdiving.c</file>
    <file>heur_crossover.c</file>
    <file>heur_dins.c</file>
    <file>heur_feaspump.c</file>
    <file>heur_fixandinfer.c</file>
    <file>heur_fracdiving.c</file>
    <file>heur_guideddiving.c</file>
    <file>heur_intdiving.c</file>
    <file>heur_intshifting.c</file>
    <file>heur_linesearchdiving.c</file>
    <file>heur_localbranching.c</file>
    <file>heur_mutation.c</file>
    <file>heur_objpscostdiving.c</file>
    <file>heur_octane.c</file>
    <file>heur_oneopt.c</file>
    <file>heur_pscostdiving.c</file>
    <file>heur_rens.c</file>
    <file>heur_rins.c</file>
    <file>heur_rootsoldiving.c</file>
    <file>heur_rounding.c</file>
    <file>heur_shiftandpropagate.c</file>
    <file>heur_shifting.c</file>
    <file>heur_simplerounding.c</file>
    <file>heur_subnlp.c</file>
    <file>heur_trivial.c</file>
    <file>heur_trysol.c</file>
    <file>heur_twoopt.c</file>
    <file>heur_undercover.c</file>
    <file>heur_veclendiving.c</file>
    <file>heur_zirounding.c</file>
  </compound>
  <compound kind="group">
    <name>PROPAGATORS</name>
    <title>Propagators</title>
    <filename>group__PROPAGATORS.html</filename>
    <file>prop_pseudoobj.c</file>
    <file>prop_rootredcost.c</file>
    <file>prop_vbounds.c</file>
  </compound>
  <compound kind="group">
    <name>RELAXATORS</name>
    <title>Relaxators</title>
    <filename>group__RELAXATORS.html</filename>
  </compound>
  <compound kind="group">
    <name>SEPARATORS</name>
    <title>Separators</title>
    <filename>group__SEPARATORS.html</filename>
    <file>sepa_cgmip.c</file>
    <file>sepa_clique.c</file>
    <file>sepa_cmir.c</file>
    <file>sepa_flowcover.c</file>
    <file>sepa_gomory.c</file>
    <file>sepa_impliedbounds.c</file>
    <file>sepa_intobj.c</file>
    <file>sepa_mcf.c</file>
    <file>sepa_oddcycle.c</file>
    <file>sepa_rapidlearning.c</file>
    <file>sepa_redcost.c</file>
    <file>sepa_strongcg.c</file>
    <file>sepa_zerohalf.c</file>
  </compound>
  <compound kind="struct">
    <name>CGMIP_MIPData</name>
    <filename>structCGMIP__MIPData.html</filename>
    <member kind="variable">
      <type>SCIP *</type>
      <name>subscip</name>
      <anchorfile>structCGMIP__MIPData.html</anchorfile>
      <anchor>aba0d0908c77109caa00bd50c45c3414e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>m</name>
      <anchorfile>structCGMIP__MIPData.html</anchorfile>
      <anchor>a7beaea5055ae4d0eec34e236751a0ba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>n</name>
      <anchorfile>structCGMIP__MIPData.html</anchorfile>
      <anchor>a416dd66e52b6027f14ec6cb1d14e5b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>nrows</name>
      <anchorfile>structCGMIP__MIPData.html</anchorfile>
      <anchor>a1d72719097cc906ca7a20b8095f46fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>ncols</name>
      <anchorfile>structCGMIP__MIPData.html</anchorfile>
      <anchor>a133e11ea94d2b018a7c6c60cd82c059a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_VAR **</type>
      <name>alpha</name>
      <anchorfile>structCGMIP__MIPData.html</anchorfile>
      <anchor>a7600c0ac37bdc7c958e41ff94c6d35f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_VAR *</type>
      <name>beta</name>
      <anchorfile>structCGMIP__MIPData.html</anchorfile>
      <anchor>aeaec753b0105a5db298d8862e48d4bbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_VAR **</type>
      <name>fracalpha</name>
      <anchorfile>structCGMIP__MIPData.html</anchorfile>
      <anchor>a2513f4b830569ede1676082f0b56e3bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_VAR *</type>
      <name>fracbeta</name>
      <anchorfile>structCGMIP__MIPData.html</anchorfile>
      <anchor>a08d22f6c2412610afc2a2c8bf62115a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CGMIP_COLTYPE *</type>
      <name>colType</name>
      <anchorfile>structCGMIP__MIPData.html</anchorfile>
      <anchor>a372de182e72a3e8a74c2acdb7b1b6b63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool *</type>
      <name>isComplemented</name>
      <anchorfile>structCGMIP__MIPData.html</anchorfile>
      <anchor>a11467cd0e98d8585d293cb4ead0c5954</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool *</type>
      <name>isShifted</name>
      <anchorfile>structCGMIP__MIPData.html</anchorfile>
      <anchor>a90a4b1f0031116ab653324de3b6d4d89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_VAR **</type>
      <name>ylhs</name>
      <anchorfile>structCGMIP__MIPData.html</anchorfile>
      <anchor>af4cc6ba000687bb976e4392bbd2357c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_VAR **</type>
      <name>yrhs</name>
      <anchorfile>structCGMIP__MIPData.html</anchorfile>
      <anchor>a671a57aaf45dc701776288f8c6c77835</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_VAR **</type>
      <name>z</name>
      <anchorfile>structCGMIP__MIPData.html</anchorfile>
      <anchor>a87aa1c311d3716e281d506fd3308524e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>conshdlrusenorm</name>
      <anchorfile>structCGMIP__MIPData.html</anchorfile>
      <anchor>aee764ff19cf535fe896aa645fe1e1e3c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CipInput</name>
    <filename>structCipInput.html</filename>
    <member kind="variable">
      <type>SCIP_FILE *</type>
      <name>file</name>
      <anchorfile>structCipInput.html</anchorfile>
      <anchor>ae5de0a32ad17b40e7355892f398ec48f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>strbuf</name>
      <anchorfile>structCipInput.html</anchorfile>
      <anchor>a0c8a146b3f824debff2f30170dfdc34e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>len</name>
      <anchorfile>structCipInput.html</anchorfile>
      <anchor>aa34bfa7d5c1513a5b5900c85cab3f1c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>readingsize</name>
      <anchorfile>structCipInput.html</anchorfile>
      <anchor>aa3c4eebc6b2a17c840bc4f2c53047e31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>linenumber</name>
      <anchorfile>structCipInput.html</anchorfile>
      <anchor>ab9374180daa1aff101da2b1ecd6f09f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CIPSECTION</type>
      <name>section</name>
      <anchorfile>structCipInput.html</anchorfile>
      <anchor>a71a36c51cb532a057e6776c63dcd03d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>haserror</name>
      <anchorfile>structCipInput.html</anchorfile>
      <anchor>a94912b9947d4d07b61c6370854233421</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>endfile</name>
      <anchorfile>structCipInput.html</anchorfile>
      <anchor>a558affaa3f12bd04486b134b8aeb58a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>clique</name>
    <filename>structclique.html</filename>
    <member kind="variable">
      <type>int *</type>
      <name>nodes</name>
      <anchorfile>structclique.html</anchorfile>
      <anchor>a682f1831c5758d8d5644ccd076f2716b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nnodes</name>
      <anchorfile>structclique.html</anchorfile>
      <anchor>ab5303abd85adebf3ae79d8f174ec889f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>cliquehash</name>
    <filename>structcliquehash.html</filename>
    <member kind="variable">
      <type>CLIQUE **</type>
      <name>cliques</name>
      <anchorfile>structcliquehash.html</anchorfile>
      <anchor>a4b52734ebb11dc1c21a5a9d76a6cffac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cliquessize</name>
      <anchorfile>structcliquehash.html</anchorfile>
      <anchor>a132d07a1599adc955be90a2d8b2349d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncliques</name>
      <anchorfile>structcliquehash.html</anchorfile>
      <anchor>a3722bf748581b0fae70e0dcf42ad3d17</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ConsAndData</name>
    <filename>structConsAndData.html</filename>
    <member kind="variable">
      <type>SCIP_VAR **</type>
      <name>vars</name>
      <anchorfile>structConsAndData.html</anchorfile>
      <anchor>afb4e2583cd494fcd4d17576c023a1d17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_VAR *</type>
      <name>resultant</name>
      <anchorfile>structConsAndData.html</anchorfile>
      <anchor>a728ca27868f9934255c15eb83f3ba797</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nvars</name>
      <anchorfile>structConsAndData.html</anchorfile>
      <anchor>a213228dddad344f336740bffb119b9b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ConstraintMatrix</name>
    <filename>structConstraintMatrix.html</filename>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>rowmatvals</name>
      <anchorfile>structConstraintMatrix.html</anchorfile>
      <anchor>a94f1826b9825054406188516a8e3fb04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>rowmatind</name>
      <anchorfile>structConstraintMatrix.html</anchorfile>
      <anchor>a898afc515b0ff11ca17fa162c3864a7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>rowmatbegin</name>
      <anchorfile>structConstraintMatrix.html</anchorfile>
      <anchor>aed66aa071aa844eaecaa948299e4b205</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>colmatvals</name>
      <anchorfile>structConstraintMatrix.html</anchorfile>
      <anchor>a3596d246283717a3366a415309db8f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>colmatind</name>
      <anchorfile>structConstraintMatrix.html</anchorfile>
      <anchor>a46bb4953c63dbd2a124d1333e828cbfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>colmatbegin</name>
      <anchorfile>structConstraintMatrix.html</anchorfile>
      <anchor>ab5516ed8865508b921f80a4958bac6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TRANSFORMSTATUS *</type>
      <name>transformstatus</name>
      <anchorfile>structConstraintMatrix.html</anchorfile>
      <anchor>a5de12fb4136fd5d1d10e20f98a8407ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>lhs</name>
      <anchorfile>structConstraintMatrix.html</anchorfile>
      <anchor>a2d0bece2920423881e5ab29d3213f642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>rhs</name>
      <anchorfile>structConstraintMatrix.html</anchorfile>
      <anchor>ac057b077e2fad43ac918397b71a2557f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>colnorms</name>
      <anchorfile>structConstraintMatrix.html</anchorfile>
      <anchor>ad778e08b117c936bba1d6d6479a37f18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>upperbounds</name>
      <anchorfile>structConstraintMatrix.html</anchorfile>
      <anchor>ac0abf498e69d9ba48cc3e9d8d3043c99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>transformshiftvals</name>
      <anchorfile>structConstraintMatrix.html</anchorfile>
      <anchor>a37995125f3abbc34c0600cfdf241ccd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nnonzs</name>
      <anchorfile>structConstraintMatrix.html</anchorfile>
      <anchor>a0a7bd604e0578454dc271cfce80a02ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrows</name>
      <anchorfile>structConstraintMatrix.html</anchorfile>
      <anchor>a7f46fd5c65e0b251eb3a36f9b0753671</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncols</name>
      <anchorfile>structConstraintMatrix.html</anchorfile>
      <anchor>a041269e8e928efd1aad040ae17a94cc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ndiscvars</name>
      <anchorfile>structConstraintMatrix.html</anchorfile>
      <anchor>a92de4e473062e3c2dd7e8e93f7d4677b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CPXParam</name>
    <filename>structCPXParam.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>intparval</name>
      <anchorfile>structCPXParam.html</anchorfile>
      <anchor>abf6ba0fd80489a30bf3d8e7d075795f5</anchor>
      <arglist>[NUMINTPARAM]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dblparval</name>
      <anchorfile>structCPXParam.html</anchorfile>
      <anchor>a70d76ad64366e180d5c7b78556ec8343</anchor>
      <arglist>[NUMDBLPARAM]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CumulativeProfile</name>
    <filename>structCumulativeProfile.html</filename>
    <member kind="variable">
      <type>int *</type>
      <name>timepoints</name>
      <anchorfile>structCumulativeProfile.html</anchorfile>
      <anchor>a3363ecb5d40ca9a19497b3e4eae72972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>freecapacities</name>
      <anchorfile>structCumulativeProfile.html</anchorfile>
      <anchor>a5b40009bf0180aae67f63d9e60394e46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ntimepoints</name>
      <anchorfile>structCumulativeProfile.html</anchorfile>
      <anchor>a069f814c57d6770f0770d2e249f7a426</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>arraysize</name>
      <anchorfile>structCumulativeProfile.html</anchorfile>
      <anchor>a7a83cedcbee6c61a49086f6ba706b9a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dijkstra_graph</name>
    <filename>structDijkstra__graph.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>nodes</name>
      <anchorfile>structDijkstra__graph.html</anchorfile>
      <anchor>a39211d8ba6f87dd0f97ebaf9079a962d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>outbeg</name>
      <anchorfile>structDijkstra__graph.html</anchorfile>
      <anchor>a890d99154e88b1c04a661fcea4e462e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>outcnt</name>
      <anchorfile>structDijkstra__graph.html</anchorfile>
      <anchor>ac2d9c0927ec385a2129eaee8442c1f87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>arcs</name>
      <anchorfile>structDijkstra__graph.html</anchorfile>
      <anchor>a0a509c6670d4bc2960331bc2f7f4618b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>weight</name>
      <anchorfile>structDijkstra__graph.html</anchorfile>
      <anchor>ad9bba4bb002a2d5722cf9a37bdb04621</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>head</name>
      <anchorfile>structDijkstra__graph.html</anchorfile>
      <anchor>a7e6517c05348822df5a8d3403b5d0771</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long long</type>
      <name>min_weight</name>
      <anchorfile>structDijkstra__graph.html</anchorfile>
      <anchor>a0c80dbfca180d9da44756b835ceb7d84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long long</type>
      <name>max_weight</name>
      <anchorfile>structDijkstra__graph.html</anchorfile>
      <anchor>a3e4267778cfadda3d317eab793ad0b6f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dimensions</name>
    <filename>structDimensions.html</filename>
    <member kind="variable">
      <type>int *</type>
      <name>lbs</name>
      <anchorfile>structDimensions.html</anchorfile>
      <anchor>a241a688046547cd764e57e3a0a2bf908</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>ubs</name>
      <anchorfile>structDimensions.html</anchorfile>
      <anchor>a3a3133d9971eed2ade8e12a7d808df69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ndims</name>
      <anchorfile>structDimensions.html</anchorfile>
      <anchor>a4f0a218a5fee621d336ec9faa246e91c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>FznConstant</name>
    <filename>structFznConstant.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>structFznConstant.html</anchorfile>
      <anchor>af531429f05363edfadfa4922735f5a7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FZNNUMBERTYPE</type>
      <name>type</name>
      <anchorfile>structFznConstant.html</anchorfile>
      <anchor>a95712f70b0046f78bda8c45c335433ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>value</name>
      <anchorfile>structFznConstant.html</anchorfile>
      <anchor>a66523a0c5f1febbb4d8c92f0b35b873c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>FznInput</name>
    <filename>structFznInput.html</filename>
    <member kind="variable">
      <type>SCIP_FILE *</type>
      <name>file</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>a7aeaa63d38cc44505fb87516f9220ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_HASHTABLE *</type>
      <name>varHashtable</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>a70c1fd6275079f103abe67f88a2904cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_HASHTABLE *</type>
      <name>constantHashtable</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>ab39be5458147ccd2980b5b05ad3e6ce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FZNCONSTANT **</type>
      <name>constants</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>a679f3c5c41390d3045a5da935e245368</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>linebuf</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>a0876ae98e65a68674f22205a5b8c28f9</anchor>
      <arglist>[FZN_BUFFERLEN+1]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>token</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>af1c2306775d04bf0b832488b2612a140</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>pushedtokens</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>ae004fb06fce1db1c28ee71ef4fcd3f59</anchor>
      <arglist>[FZN_MAX_PUSHEDTOKENS]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>npushedtokens</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>a05a8b7eddba20ce66d35c1f45a5fe856</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>linenumber</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>ad5dab5c0be2299da7163dcd88ec6bdab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>linepos</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>a2679b01a8ffaec171846763d58454f0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bufpos</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>a2f0774a56a563633708962570add34b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nconstants</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>a2d06a8950e99eb84642476673adba5ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sconstants</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>a424a4641a14a6d4b34012941a815a273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_OBJSENSE</type>
      <name>objsense</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>a35c9e0f8794799d9b0fd30d967878987</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>hasdot</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>a86a686505a316930987b97b6ebfb2692</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>endline</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>a3e9dd1137ae4bf7be13d12a37ea87810</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>comment</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>ae98724e0acf7ca290414c05305a01a1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>haserror</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>a572554ce372edeaaba8704b475e66702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>valid</name>
      <anchorfile>structFznInput.html</anchorfile>
      <anchor>affe504ecea6fff6888e984a1890cd2f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>FznOutput</name>
    <filename>structFznOutput.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>varbuffer</name>
      <anchorfile>structFznOutput.html</anchorfile>
      <anchor>ae9b53118dd35204c5941d32026190aa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>varbufferlen</name>
      <anchorfile>structFznOutput.html</anchorfile>
      <anchor>ad4429bbc61847829166f608c1f352495</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>varbufferpos</name>
      <anchorfile>structFznOutput.html</anchorfile>
      <anchor>ac4ac6676f9631191c811765cffa2e67c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>castbuffer</name>
      <anchorfile>structFznOutput.html</anchorfile>
      <anchor>adb2c08ac5572ae15a80593dfd75041e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>castbufferlen</name>
      <anchorfile>structFznOutput.html</anchorfile>
      <anchor>ad70297289ed7efedca3ec71c46f7f03b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>castbufferpos</name>
      <anchorfile>structFznOutput.html</anchorfile>
      <anchor>a8442762e0cb0acdf63ea114341622faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>consbuffer</name>
      <anchorfile>structFznOutput.html</anchorfile>
      <anchor>aa9902b8284c99a5776b6a755f6d9ac66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>consbufferlen</name>
      <anchorfile>structFznOutput.html</anchorfile>
      <anchor>a35db1946b922842f75a07fc4f0c35ef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>consbufferpos</name>
      <anchorfile>structFznOutput.html</anchorfile>
      <anchor>a893127f3b9738b884b59d47c991ff376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ndiscretevars</name>
      <anchorfile>structFznOutput.html</anchorfile>
      <anchor>a13903ca8b85c66494633c0b1f33b1e1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool *</type>
      <name>varhasfloat</name>
      <anchorfile>structFznOutput.html</anchorfile>
      <anchor>a00864069716b1ffebef092480191a7cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>GRBParam</name>
    <filename>structGRBParam.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>intparval</name>
      <anchorfile>structGRBParam.html</anchorfile>
      <anchor>adbe23b8be0633e605bdcdee24083daa1</anchor>
      <arglist>[NUMINTPARAM]</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dblparval</name>
      <anchorfile>structGRBParam.html</anchorfile>
      <anchor>a96c8d6301380e7a5a65e9a307eeb5e09</anchor>
      <arglist>[NUMDBLPARAM]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>InferInfo</name>
    <filename>structInferInfo.html</filename>
    <member kind="variable">
      <type>union InferInfo::@0</type>
      <name>val</name>
      <anchorfile>structInferInfo.html</anchorfile>
      <anchor>aa6df43156f0a1c5f04cd0b86c04f74e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct InferInfo::@0::@1</type>
      <name>asbits</name>
      <anchorfile>unionInferInfo_1_1@0.html</anchorfile>
      <anchor>a2fb3a93ef53da6e0d0464132d96387ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>proprule</name>
      <anchorfile>structInferInfo_1_1@0_1_1@1.html</anchorfile>
      <anchor>a21add7ce76f94880b48138ff417094b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>est</name>
      <anchorfile>structInferInfo_1_1@0_1_1@1.html</anchorfile>
      <anchor>aab7a1d7c8f473e2257119c437807ff56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>lct</name>
      <anchorfile>structInferInfo_1_1@0_1_1@1.html</anchorfile>
      <anchor>ae572c0ca43dd6234a15be86136675b7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>asint</name>
      <anchorfile>unionInferInfo_1_1@0.html</anchorfile>
      <anchor>ae05fa2bd8acd9e055039471ac7ddc123</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union InferInfo::@2</type>
      <name>val</name>
      <anchorfile>structInferInfo.html</anchorfile>
      <anchor>a6bd78197393550700553324a8521e743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct InferInfo::@2::@3</type>
      <name>asbits</name>
      <anchorfile>unionInferInfo_1_1@2.html</anchorfile>
      <anchor>a888e467a970f7e1946c3020519184709</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>proprule</name>
      <anchorfile>structInferInfo_1_1@2_1_1@3.html</anchorfile>
      <anchor>aaabfed40d6d0e97ce3f79e5786a11ffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>pos</name>
      <anchorfile>structInferInfo_1_1@2_1_1@3.html</anchorfile>
      <anchor>af6d488e0477a760daf5c3e796fb9a57b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>asint</name>
      <anchorfile>unionInferInfo_1_1@2.html</anchorfile>
      <anchor>ad70639a22a7b53ddc32e69dd2c458aeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union InferInfo::@4</type>
      <name>val</name>
      <anchorfile>structInferInfo.html</anchorfile>
      <anchor>a40777b34644b12873d56897ffc1293ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct InferInfo::@4::@5</type>
      <name>asbits</name>
      <anchorfile>unionInferInfo_1_1@4.html</anchorfile>
      <anchor>a02b8bd62c12e088a17eae8268f2e5fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>pos</name>
      <anchorfile>structInferInfo_1_1@4_1_1@5.html</anchorfile>
      <anchor>a09487cac1eb66e77e022e99765298557</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>boundtype</name>
      <anchorfile>structInferInfo_1_1@4_1_1@5.html</anchorfile>
      <anchor>ad4f74a77ad96844a522886747fb90c76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>asint</name>
      <anchorfile>unionInferInfo_1_1@4.html</anchorfile>
      <anchor>a091ead6a71b033c6b69e3056035af140</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>levelGraph</name>
    <filename>structlevelGraph.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>nnodes</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>a21a30d81dd34020462a6b9b6d7cd9fc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>nedges</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>ae5c3dccee5c2a6b3d55f5af47b1722a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>n</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>a5260192b7475595e323ba5c569d51836</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>m</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>a89b0c5e77c8f664ea0379240295fc94c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>nlevels</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>a244fbe23acaa08df18a25b74e81a349d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>level</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>a4e908063367ac2a836f27b666e8d5cba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>lastF</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>a22764a7df7bc8efc0537e2b0c4e70e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>lastB</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>a23c6879ca99b4fbbebd943eb2cd1dcee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>beginForward</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>a2571c03940d7504ced49c7433c616b1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>beginBackward</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>a64a7319bd59f3c03b88b15e675a442c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>targetForward</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>adb23e455c5ed384381c24812504bc15e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>targetBackward</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>a347e2c3c45fafb957f1eb7165ab99cf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>weightForward</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>a679db6383a6ec20fbfe0fb4a06e986ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>weightBackward</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>ad6e8a6ecd3421c22e1d477172a4b5403</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>sizeForward</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>abc554fc5a5ac26a28a54ea955db55eb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>sizeBackward</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>ae12ed491c414e4b89379745eeb41b597</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>beginAdj</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>ad0f8daf5077bd5554c315b95644f9034</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>sourceAdj</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>a7b9df3f67c8e853e4fd697b8cd2ed953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>targetAdj</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>a9514928cd0226ceaa201dbe4b86234be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>weightAdj</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>abb7f4d29f76794edf81f32fd69c26ed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>levelAdj</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>ae435cb19c3c61f6189089808136ee9e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>sizeAdj</name>
      <anchorfile>structlevelGraph.html</anchorfile>
      <anchor>ad84e375dc8718c097fd33fc2f5d578c1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LpInput</name>
    <filename>structLpInput.html</filename>
    <member kind="variable">
      <type>SCIP_FILE *</type>
      <name>file</name>
      <anchorfile>structLpInput.html</anchorfile>
      <anchor>a5679ca4554956883f091c2db7e7a75fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>linebuf</name>
      <anchorfile>structLpInput.html</anchorfile>
      <anchor>a0ca70906bd3fa21bc8bafb1104f4fbb0</anchor>
      <arglist>[LP_MAX_LINELEN+1]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>probname</name>
      <anchorfile>structLpInput.html</anchorfile>
      <anchor>a84e8714ebe1aae81f9a9672ed1ed1946</anchor>
      <arglist>[LP_MAX_LINELEN]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>objname</name>
      <anchorfile>structLpInput.html</anchorfile>
      <anchor>acbdabe61a4424f4bcbf0793bda2f65e5</anchor>
      <arglist>[LP_MAX_LINELEN]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>token</name>
      <anchorfile>structLpInput.html</anchorfile>
      <anchor>a5f822b5138a3210357a5affd3ef6bab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>tokenbuf</name>
      <anchorfile>structLpInput.html</anchorfile>
      <anchor>a5f9566881bec14fb2eb81d88e88fe702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>pushedtokens</name>
      <anchorfile>structLpInput.html</anchorfile>
      <anchor>acebdc30ff58dde1bfc161b77e7b90f3c</anchor>
      <arglist>[LP_MAX_PUSHEDTOKENS]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>npushedtokens</name>
      <anchorfile>structLpInput.html</anchorfile>
      <anchor>aa7e6e3dfb545a23d3e31e2244d8ddd6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>linenumber</name>
      <anchorfile>structLpInput.html</anchorfile>
      <anchor>a4518acbd96ad007928d9ac41a3ab7500</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>linepos</name>
      <anchorfile>structLpInput.html</anchorfile>
      <anchor>a2a9a7e4549c53587fb10400165697151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LPSECTION</type>
      <name>section</name>
      <anchorfile>structLpInput.html</anchorfile>
      <anchor>a7e5d1f6802c7d14e8806a1719cefceb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_OBJSENSE</type>
      <name>objsense</name>
      <anchorfile>structLpInput.html</anchorfile>
      <anchor>ac55bece5911d8e663dbbbc44d280aa8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>inlazyconstraints</name>
      <anchorfile>structLpInput.html</anchorfile>
      <anchor>ac59753663f1edebe5f8fc70e21977348</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>inusercuts</name>
      <anchorfile>structLpInput.html</anchorfile>
      <anchor>a1175bfd1793b3fd77cd6b626bca24779</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>haserror</name>
      <anchorfile>structLpInput.html</anchorfile>
      <anchor>a2525154a1bdb13acb269a05aacdf8e37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mcfdata</name>
    <filename>structmcfdata.html</filename>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>flowrowsigns</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a232d1219526ddbf78d70795432a99872</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>flowrowscalars</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a1302e1060905c97503a330d9376e295d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>flowrowscores</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>ac40a1d2faf9bc95543ff5627e073123e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>capacityrowsigns</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a685f11cb2da68c0e7b98098daf1edd7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>capacityrowscores</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a6dc1a7c882257de7b03d254b626fa56c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>flowcands</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a5ff5c558d1f5faa696961fdedbe9b475</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nflowcands</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a8f916ccc3584356e1eeed40abdd230c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>capacitycands</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a5ef3655a64fde91dd9322b8eef2fb72e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncapacitycands</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a7d70f28e5c6f7262f8362cbb3f23d458</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool *</type>
      <name>plusflow</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>adb77e92aa5f8667fe5a52a9f3203970e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool *</type>
      <name>minusflow</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a5c88cc78369fed66466117069eea3091</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncommodities</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a79ccd2029176a7ffbf6aefd5ac226704</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nemptycommodities</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>aa2b1b9d15929578f910b039fb63f89e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>commoditysigns</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>ad5c95d1c5aae5a7de751f359653aca33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>commoditysignssize</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a07e96bfc779333b5bda37fb57325e855</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>colcommodity</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a15b060e8d4b74145496a95c683a76246</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>rowcommodity</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a7b74a36352b6ae2c9144dc1c5bfd7ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>colarcid</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a4c1645fc062f6450f0116ae5938e0e23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>rowarcid</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a471182483975cc487f6c34fdb90f2eda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>rownodeid</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>af21726612dc56ec40a9e82aa3867d6e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>arcarraysize</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a2a90dbe2467c54536416f8f5a53a83fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>arcsources</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a3c4f4f5b5904146fd22d5b183fec204d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>arctargets</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a1b4661c318cea191d677787c73211810</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>colsources</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a856b4d6eda8962e0ee57c55f2a16ee43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>coltargets</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a915bdaaf104f4fe07ca2b974f58a2213</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>firstoutarcs</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a80047dd6457f9c4e181e1a0f224ad214</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>firstinarcs</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a84b10802e37d422afdc7c7bcf600ad3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>nextoutarcs</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>abc61c785f2edcd531aab369a01696cf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>nextinarcs</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a84b471b9399421a214ac22762abd5479</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>newcols</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a46854126744291d8b706bea556a53502</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nnewcols</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>ae5c5fb9922a6d9070d71ecfe579e2a17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>narcs</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a2726ef589dba8155250c4d51769c3c29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nnodes</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a2b880ca0824dfc24ad8c316a43ca6e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>ninconsistencies</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a5dcd8624e49067b8e841f05b4506ab78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_ROW **</type>
      <name>capacityrows</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a0d5ca9bdfd2d3752ea1b5f9e205716a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>capacityrowssize</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a56b92e958a073fbea93f5d5357d5abe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool *</type>
      <name>colisincident</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a91eb4fe25d5902add2d5c15ba16f6614</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>zeroarcarray</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>a9322eb16e04bd825ab86bfbce351f8f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_MCFMODELTYPE</type>
      <name>modeltype</name>
      <anchorfile>structmcfdata.html</anchorfile>
      <anchor>afd4fd7f728b0bbb5647841883dc17896</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MpsInput</name>
    <filename>structMpsInput.html</filename>
    <member kind="variable">
      <type>MPSSECTION</type>
      <name>section</name>
      <anchorfile>structMpsInput.html</anchorfile>
      <anchor>af5e209276d75c9dc11a9a795663dbdb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_FILE *</type>
      <name>fp</name>
      <anchorfile>structMpsInput.html</anchorfile>
      <anchor>a04e1d7822435f6158e356b600b4cfaba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lineno</name>
      <anchorfile>structMpsInput.html</anchorfile>
      <anchor>ad037ea95d3f6cc6213040fd45bbd1e84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_OBJSENSE</type>
      <name>objsense</name>
      <anchorfile>structMpsInput.html</anchorfile>
      <anchor>a16ece75e77ed243a8eb052f8d19da5e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>haserror</name>
      <anchorfile>structMpsInput.html</anchorfile>
      <anchor>a72c70e6a2b313cc6f418b8389c2fb5fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>buf</name>
      <anchorfile>structMpsInput.html</anchorfile>
      <anchor>a5c459ca076e67655b5f6f952ece01c69</anchor>
      <arglist>[MPS_MAX_LINELEN]</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>f0</name>
      <anchorfile>structMpsInput.html</anchorfile>
      <anchor>a87823bc9e396e74e97e89c589a693c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>f1</name>
      <anchorfile>structMpsInput.html</anchorfile>
      <anchor>af6dfba9219db551ad3cf9df28bf1a974</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>f2</name>
      <anchorfile>structMpsInput.html</anchorfile>
      <anchor>a995cb8ffd23de77e3b0f91955e9fe376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>f3</name>
      <anchorfile>structMpsInput.html</anchorfile>
      <anchor>a9d7e45063b26843eb8b5d779d46dfbd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>f4</name>
      <anchorfile>structMpsInput.html</anchorfile>
      <anchor>a7632dc00edddec18d96cf2dc304fbc15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>f5</name>
      <anchorfile>structMpsInput.html</anchorfile>
      <anchor>ac4426d70b8f73943e7d282043c381ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>probname</name>
      <anchorfile>structMpsInput.html</anchorfile>
      <anchor>a302ee194074e3aca42e2896e06834ac6</anchor>
      <arglist>[MPS_MAX_NAMELEN]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>objname</name>
      <anchorfile>structMpsInput.html</anchorfile>
      <anchor>adbfd875cacf60f6f6ad17f7e7d604245</anchor>
      <arglist>[MPS_MAX_NAMELEN]</arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>isinteger</name>
      <anchorfile>structMpsInput.html</anchorfile>
      <anchor>aca5c90aab5ece5dbf3f3941d566da328</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>isnewformat</name>
      <anchorfile>structMpsInput.html</anchorfile>
      <anchor>a5911f95cc42f216058209345ad2684b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nodepair</name>
    <filename>structnodepair.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>node1</name>
      <anchorfile>structnodepair.html</anchorfile>
      <anchor>ab626dbb0abf74f698ff687da09540f52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>node2</name>
      <anchorfile>structnodepair.html</anchorfile>
      <anchor>a9eb161335f3815dcf468026c051a8b55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>weight</name>
      <anchorfile>structnodepair.html</anchorfile>
      <anchor>a6565407c200eaeccf95327fa490e9690</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nodepairqueue</name>
    <filename>structnodepairqueue.html</filename>
    <member kind="variable">
      <type>SCIP_PQUEUE *</type>
      <name>pqueue</name>
      <anchorfile>structnodepairqueue.html</anchorfile>
      <anchor>ac40ff0555554087827bbb5bb24654a87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NODEPAIRENTRY *</type>
      <name>nodepairs</name>
      <anchorfile>structnodepairqueue.html</anchorfile>
      <anchor>a2342637169a8dcc7cf758ad6bd47ee26</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>nodepartition</name>
    <filename>structnodepartition.html</filename>
    <member kind="variable">
      <type>int *</type>
      <name>representatives</name>
      <anchorfile>structnodepartition.html</anchorfile>
      <anchor>a89056353d3fbe0a9ccc45f970549ad42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>nodeclusters</name>
      <anchorfile>structnodepartition.html</anchorfile>
      <anchor>a3c18ba3d25f821024a4d0b8700e88de4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>clusternodes</name>
      <anchorfile>structnodepartition.html</anchorfile>
      <anchor>a09b4177a16c25e2658ae4c0213ed4094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>clusterbegin</name>
      <anchorfile>structnodepartition.html</anchorfile>
      <anchor>a109460236c0df299e326c321324370b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nclusters</name>
      <anchorfile>structnodepartition.html</anchorfile>
      <anchor>a22286e01b75fbcec06c4197845f7df9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>OpbInput</name>
    <filename>structOpbInput.html</filename>
    <member kind="variable">
      <type>SCIP_FILE *</type>
      <name>file</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>a24d000cd9f6c83c07f20cc499a3784b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>linebuf</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>abedcb97adf81b063f6aa9c48896eecc0</anchor>
      <arglist>[OPB_MAX_LINELEN+1]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>token</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>a0697cb2a89611d2d58896b22700c41d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>tokenbuf</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>a6e540d3727ff0efdf7eda3920e1cbac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>pushedtokens</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>ac2cc481ba83526cc7e9b3c334b198997</anchor>
      <arglist>[OPB_MAX_PUSHEDTOKENS]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>npushedtokens</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>aa8179fac28b4d9b08d34075333c1cc23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>linenumber</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>af2bb49060fcfdd8b8bdb8873cc768fed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>linepos</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>abb0c04b69cfb5ba091e4668d7e8ece1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bufpos</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>a607d8233503c14d3749d152161dd9989</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_OBJSENSE</type>
      <name>objsense</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>ac2357a46e325023e284db0611abc538e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>comment</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>af251bd4aaccaa9e6775d619ce68fb812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>endline</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>a58d6f83613ea43d40330fe1fadd6cdf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>eof</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>aba35bd44d766868990dc44cadd64cd60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>haserror</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>a9378223f971d2a279ad2d47d70cdc4a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CONSANDDATA **</type>
      <name>consanddata</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>a45dbcf5687b72cb7e2c2b4cfb538e2dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nconsanddata</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>a4780c329c0ccaa0e2599d9452ded371a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sconsanddata</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>a44e214f964bec7e46ee9388ee8a0a5e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxvarsperand</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>ae6afc96ca73485156f47ab0f11796d99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nproblemcoeffs</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>abe9cf877f7fb8c3f187e51d664083774</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_HASHTABLE *</type>
      <name>hashtable</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>ac83e81e0080e69ee725faac41650d86f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>hashtablesize</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>add96ca093f85e410e45e9c2544075e04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>wbo</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>a4a94d098c6181ec1a6d232a2b52f35a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>topcost</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>a61ccd93a3f6f9a7d329c8aa86cf3ffdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nindvars</name>
      <anchorfile>structOpbInput.html</anchorfile>
      <anchor>a0064ac659ce48667cf5b697fec4076dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PipInput</name>
    <filename>structPipInput.html</filename>
    <member kind="variable">
      <type>SCIP_FILE *</type>
      <name>file</name>
      <anchorfile>structPipInput.html</anchorfile>
      <anchor>a59e7b2b1376f241086caa1132aceb737</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>linebuf</name>
      <anchorfile>structPipInput.html</anchorfile>
      <anchor>af49aba2cb349109efd30a5bc5c0fdf33</anchor>
      <arglist>[PIP_MAX_LINELEN+1]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>probname</name>
      <anchorfile>structPipInput.html</anchorfile>
      <anchor>abaf92c746e5cf3a2cd8180b0dec10d64</anchor>
      <arglist>[PIP_MAX_LINELEN]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>objname</name>
      <anchorfile>structPipInput.html</anchorfile>
      <anchor>aeed999f1e5613ff8025094c439ae96c5</anchor>
      <arglist>[PIP_MAX_LINELEN]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>token</name>
      <anchorfile>structPipInput.html</anchorfile>
      <anchor>a004a929d516a8efe5c2516d6c81df8e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>tokenbuf</name>
      <anchorfile>structPipInput.html</anchorfile>
      <anchor>ab0096ba34dbf3e0b281103b753b9c49a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>pushedtokens</name>
      <anchorfile>structPipInput.html</anchorfile>
      <anchor>a3f8489081de169db7d9ef977d05cd7fd</anchor>
      <arglist>[PIP_MAX_PUSHEDTOKENS]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>npushedtokens</name>
      <anchorfile>structPipInput.html</anchorfile>
      <anchor>a5c2d3d43436c74015ecad03bab3e400b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>linenumber</name>
      <anchorfile>structPipInput.html</anchorfile>
      <anchor>a0f62eb2805beca12bcd058b8190d0860</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>linepos</name>
      <anchorfile>structPipInput.html</anchorfile>
      <anchor>a9f0952266e6ef587ca736238bd3c8b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PIPSECTION</type>
      <name>section</name>
      <anchorfile>structPipInput.html</anchorfile>
      <anchor>a1edac7370c15f729918b60c7113b0a06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_OBJSENSE</type>
      <name>objsense</name>
      <anchorfile>structPipInput.html</anchorfile>
      <anchor>afe62c60ce9108e5f1a86f1f0e7cbdf9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>haserror</name>
      <anchorfile>structPipInput.html</anchorfile>
      <anchor>a089818e8754df79bcefc818942686d9f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SCIP_BilinTerm</name>
    <filename>structSCIP__BilinTerm.html</filename>
    <member kind="variable">
      <type>SCIP_VAR *</type>
      <name>var1</name>
      <anchorfile>structSCIP__BilinTerm.html</anchorfile>
      <anchor>a3ddd7933b73b4150fdd8e435eb4b15d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_VAR *</type>
      <name>var2</name>
      <anchorfile>structSCIP__BilinTerm.html</anchorfile>
      <anchor>ac7cf526a90ce462ccf8c42cab1230d32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>coef</name>
      <anchorfile>structSCIP__BilinTerm.html</anchorfile>
      <anchor>ac6adfffed179d29d848ad0f2b397270b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SCIP_ExprInt</name>
    <filename>structSCIP__ExprInt.html</filename>
    <member kind="variable">
      <type>BMS_BLKMEM *</type>
      <name>blkmem</name>
      <anchorfile>structSCIP__ExprInt.html</anchorfile>
      <anchor>aa6a5afd03af4adbcda09eaedd1b13b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>dummy</name>
      <anchorfile>structSCIP__ExprInt.html</anchorfile>
      <anchor>a63c7e3bf20129b6a88273f2d5aaeee5e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SCIP_LinConsUpgrade</name>
    <filename>structSCIP__LinConsUpgrade.html</filename>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_LINCONSUPGD</name>
      <anchorfile>structSCIP__LinConsUpgrade.html</anchorfile>
      <anchor>a2b8bcf43c836f5fe35d464ec31b98e75</anchor>
      <arglist>((*linconsupgd))</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>priority</name>
      <anchorfile>structSCIP__LinConsUpgrade.html</anchorfile>
      <anchor>a84eb223d4265a05c2f53a5c32dde929c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>active</name>
      <anchorfile>structSCIP__LinConsUpgrade.html</anchorfile>
      <anchor>ab8134d891d6bbdf72982524e78bb8b3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SCIP_LPi</name>
    <filename>structSCIP__LPi.html</filename>
    <member kind="variable">
      <type>ClpSimplex *</type>
      <name>clp</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>af3a357463d445234c9a4b4f9329a7e60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>cstat</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a7f12fc9d5866675aa020eb33980001e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>rstat</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>aadb2682eafe0543343f9358cb9ecbf15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cstatsize</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>ac12914622e2203ef9625760023bd65bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rstatsize</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>aab14a8951b1908b57c68c8606171523a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>startscratch</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a1c70af5c79d574b93da2edbe1a1f1577</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>presolving</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a558b6156c21cd12456758f6d752c9b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_PRICING</type>
      <name>pricing</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>ab985a4e826464321d6c77cad3cb7c5cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>validFactorization</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>aee2ad704dbc51ca8f7c37267e4e63b79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>solved</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a0386478010c346731cb9fbd26f61a9fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>setFactorizationFrequency</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>aceb78550dfc068c219dfe227367c2bbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>fastmip</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a1f4d28a9cae978cd5729cb62dd4e23ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CPXLPptr</type>
      <name>cpxlp</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a3b4d2d673f70d7dfe9816c4e007d265f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>solstat</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a943b577de6344b104e472c3f1c15cf9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CPXPARAM</type>
      <name>cpxparam</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>ae3ff7c004219aed1ae2b0c0b1d3a9135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>larray</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>ae0d8ba164ce9a40b8a5f7c65a681f2f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>uarray</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a4492f3363bf072c2760429c1811bd6f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>senarray</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>ac5b87771bf45218a7f11887d9170b29f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>rhsarray</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>aac346850782524f0a687cf68b84094e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>rngarray</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>ad646e8e6982c2a129aff8bec798749de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>valarray</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a366644948bd1642662cf6044040be08e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>rngindarray</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>adddc5661b3ac9b970e77a5939bb78e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>indarray</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a75c243ffb1433f75eda7ace0a61809c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>boundchgsize</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a545c7abc6c30f23d13f94212a06b1e43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sidechgsize</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>ab3e9ad993a6254270fa2bf01788d93d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>valsize</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a389ad8c4b1cb557e5e786a870c7087f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>iterations</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a2f96afbc8e3d1d9db0903b77813d9d7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>solisbasic</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a921da007200abb5626f231d531f8c6a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>instabilityignored</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a752481ce018caa20098f1bf56da0a79a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>rngfound</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a9857162d89bf13e02f9e880185bf6371</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GRBmodel *</type>
      <name>grbmodel</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a5a50d7aa63a36746f72362aff8a8b592</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GRBPARAM</type>
      <name>grbparam</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a0241504b27989696eb0377131499713c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MSKtask_t</type>
      <name>task</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>aa3de60a46241becd0ed61ca56c058c94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MSKrescodee</type>
      <name>termcode</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a4a3ad6095e0a5bc6a5709cd83f93191d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>itercount</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a036a780889102cc2241de082be743bd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lpid</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a31081b455df0cd900c19d6af1ab211e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>skxsize</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a2a856a41de7ea7ab3ad2306e36704f68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>skcsize</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>abca92e613a69356cee4131666037116e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MSKstakeye *</type>
      <name>skx</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>ab85277135634b4169258b83d88ab54d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MSKstakeye *</type>
      <name>skc</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a2916fd3e7e9c8330a56290b5750aaa47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QSprob</type>
      <name>prob</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a503c9166e84b00c85a0b26c79b4a4589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>previt</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a7161145db4118c864cbd3e1ce3e840d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rowspace</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>ac6edd9856c18694c94b24963ab1a200c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>isen</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a291b5b3e0d5c0848e42c3e9f6337715a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>irhs</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a2d5bf16ab3b5bd9c0e64cec72777d764</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>irng</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a38c43504ff5d4ec4aa0d1848031ce9d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>ircnt</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a1ef3e57504c34605b2716e0699689c37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>irbeg</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>ab0deebb21fcf3e05526334d3e85b2588</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>colspace</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a9d623f881960b73a37c5149353416b9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>iccnt</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>ab73b060c2c77474952680a9db7bf1536</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>iccha</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>af0100b65c8a55f24f964ce984acfd653</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tbsz</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a1abf1709fe2360dd29c98d76d0a81a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>itab</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a686ef1a830d32e4a7acb4d17b4d550cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>ibas</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>afa92f7566cabbfa65b1611d9ca23367a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pricing</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>af7cc2f48c22341bf639ada6d6209348c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPxSCIP *</type>
      <name>spx</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>ae71cb6a78e7773c9ab3b67f38af873f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SLUFactor *</type>
      <name>factorization</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>ad67f846ba53463379fc85e3e84dbe10b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>rowrepswitch</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>ab488d8f0608f2f6091a291e5bdaf659a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>XPRSprob</type>
      <name>xprslp</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a49249787bfd8735578029fe13c7c5da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>ad5ed2e86aa79e104249d4ecd4a70218d</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>objsense</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a67a9fed324b3be180b62468f9f089007</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unbvec</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>af7a2d33b569c1f2b9060b3d78a23973c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>solmethod</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a7f9a52275fee5e41c5336344b0cae30b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>par_lobjlim</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a43b1f5b60befa48987a82e96fc1122d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>par_uobjlim</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>acd4d029e91351b7b799099ed93712797</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>par_fastlp</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a3f4c8f78854f5c15d9b81961d63807e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>par_presolve</name>
      <anchorfile>structSCIP__LPi.html</anchorfile>
      <anchor>a119a90eded0b27526f0660502d537926</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SCIP_LPiState</name>
    <filename>structSCIP__LPiState.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>ncols</name>
      <anchorfile>structSCIP__LPiState.html</anchorfile>
      <anchor>a8fb9be2103f05e6aadab9e380aaf3487</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrows</name>
      <anchorfile>structSCIP__LPiState.html</anchorfile>
      <anchor>a661d47d36cd2696f86248559a4a27423</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>COLPACKET *</type>
      <name>packcstat</name>
      <anchorfile>structSCIP__LPiState.html</anchorfile>
      <anchor>a409d54e93269c8a5a538d68d137b7a67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ROWPACKET *</type>
      <name>packrstat</name>
      <anchorfile>structSCIP__LPiState.html</anchorfile>
      <anchor>a99db115c817b8ba47ba11652e2633361</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num</name>
      <anchorfile>structSCIP__LPiState.html</anchorfile>
      <anchor>ae28c89db7cd7de16892fd9fa386e1459</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MSKsolstae</type>
      <name>solsta</name>
      <anchorfile>structSCIP__LPiState.html</anchorfile>
      <anchor>aaed08c05cd46569c0b442420bb7346d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>COLPACKET *</type>
      <name>skx</name>
      <anchorfile>structSCIP__LPiState.html</anchorfile>
      <anchor>ab9bba8a6ff574151806190db26d06080</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ROWPACKET *</type>
      <name>skc</name>
      <anchorfile>structSCIP__LPiState.html</anchorfile>
      <anchor>adb86098ed2b19b1c9cb17998c872d921</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SCIP_McfNetwork</name>
    <filename>structSCIP__McfNetwork.html</filename>
    <member kind="variable">
      <type>SCIP_ROW ***</type>
      <name>nodeflowrows</name>
      <anchorfile>structSCIP__McfNetwork.html</anchorfile>
      <anchor>a153bfae601a0aa63739b73de22569af6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real **</type>
      <name>nodeflowscales</name>
      <anchorfile>structSCIP__McfNetwork.html</anchorfile>
      <anchor>a5d90c9c12413409cf84effbdc9463c78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool **</type>
      <name>nodeflowinverted</name>
      <anchorfile>structSCIP__McfNetwork.html</anchorfile>
      <anchor>a5d9d5756f694058aa4c5c3157b165809</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_ROW **</type>
      <name>arccapacityrows</name>
      <anchorfile>structSCIP__McfNetwork.html</anchorfile>
      <anchor>a8d12e4f4aeb616a26378dff7c8505711</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>arccapacityscales</name>
      <anchorfile>structSCIP__McfNetwork.html</anchorfile>
      <anchor>a1f8164df9086ca8c06fa8add46ffa7e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>arcsources</name>
      <anchorfile>structSCIP__McfNetwork.html</anchorfile>
      <anchor>a6603a9cf213120caa7c83f53d3b3abaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>arctargets</name>
      <anchorfile>structSCIP__McfNetwork.html</anchorfile>
      <anchor>a3a419ca1e92a46a43521851346e9ee3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>colcommodity</name>
      <anchorfile>structSCIP__McfNetwork.html</anchorfile>
      <anchor>aac0ffb9264a0ffe2cb0ab98f0ddba3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nnodes</name>
      <anchorfile>structSCIP__McfNetwork.html</anchorfile>
      <anchor>a53215933ed0d64251ed47d44e51a3e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>narcs</name>
      <anchorfile>structSCIP__McfNetwork.html</anchorfile>
      <anchor>acd1054689735c275308c022d519c8ff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nuncapacitatedarcs</name>
      <anchorfile>structSCIP__McfNetwork.html</anchorfile>
      <anchor>a69907f72e07302d5bdf7a2fd8ea1020b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncommodities</name>
      <anchorfile>structSCIP__McfNetwork.html</anchorfile>
      <anchor>a55117ac098448eb183028b178f6896c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_MCFMODELTYPE</type>
      <name>modeltype</name>
      <anchorfile>structSCIP__McfNetwork.html</anchorfile>
      <anchor>a1ad252627fad3fead9698ce6aab18f1f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SCIP_NlpiProblem</name>
    <filename>structSCIP__NlpiProblem.html</filename>
    <member kind="function">
      <type></type>
      <name>SCIP_NlpiProblem</name>
      <anchorfile>structSCIP__NlpiProblem.html</anchorfile>
      <anchor>a7fdcb6250026bef1d1702d81fa0a9f5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>SCIP_NLPIORACLE *</type>
      <name>oracle</name>
      <anchorfile>structSCIP__NlpiProblem.html</anchorfile>
      <anchor>a2a068a92ff46a9305d8974f28e2a96f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SmartPtr&lt; IpoptApplication &gt;</type>
      <name>ipopt</name>
      <anchorfile>structSCIP__NlpiProblem.html</anchorfile>
      <anchor>a521040034d3cee37cf4620797b1c50d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SmartPtr&lt; ScipNLP &gt;</type>
      <name>nlp</name>
      <anchorfile>structSCIP__NlpiProblem.html</anchorfile>
      <anchor>a7ae021ac833ed0bff3c6903b8d7f1493</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>optfile</name>
      <anchorfile>structSCIP__NlpiProblem.html</anchorfile>
      <anchor>ad5c6571d29366365ef1ba72a86b22e5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>firstrun</name>
      <anchorfile>structSCIP__NlpiProblem.html</anchorfile>
      <anchor>a62efdc65070bc38d237040897b2d0d38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>initguess</name>
      <anchorfile>structSCIP__NlpiProblem.html</anchorfile>
      <anchor>a3ec610661c908f783c334d4c29a136b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_NLPSOLSTAT</type>
      <name>lastsolstat</name>
      <anchorfile>structSCIP__NlpiProblem.html</anchorfile>
      <anchor>ad055288af29ebb401962b87fccb8996f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_NLPTERMSTAT</type>
      <name>lasttermstat</name>
      <anchorfile>structSCIP__NlpiProblem.html</anchorfile>
      <anchor>ab7c1dcc1aee4702a8dac37e027a136de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>lastsol</name>
      <anchorfile>structSCIP__NlpiProblem.html</anchorfile>
      <anchor>a68725dceecae200d384666c764098e01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lastniter</name>
      <anchorfile>structSCIP__NlpiProblem.html</anchorfile>
      <anchor>aaa5fc9b8576d286648cd270e8e15a087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>lasttime</name>
      <anchorfile>structSCIP__NlpiProblem.html</anchorfile>
      <anchor>a6648d310ad9f7621ee0b90d4465eb113</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SCIP_QuadConsUpgrade</name>
    <filename>structSCIP__QuadConsUpgrade.html</filename>
    <member kind="function">
      <type></type>
      <name>SCIP_DECL_QUADCONSUPGD</name>
      <anchorfile>structSCIP__QuadConsUpgrade.html</anchorfile>
      <anchor>a2121c090633fbc68473e8991da091b77</anchor>
      <arglist>((*quadconsupgd))</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>priority</name>
      <anchorfile>structSCIP__QuadConsUpgrade.html</anchorfile>
      <anchor>ada27192d8b0308218db405beaab1bc2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>active</name>
      <anchorfile>structSCIP__QuadConsUpgrade.html</anchorfile>
      <anchor>a536fc68bc56dc8556eed2fe25c02bf7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SCIP_QuadElement</name>
    <filename>structSCIP__QuadElement.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>idx1</name>
      <anchorfile>structSCIP__QuadElement.html</anchorfile>
      <anchor>ab31245866ae0cb4280e96a2f24acb5cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>idx2</name>
      <anchorfile>structSCIP__QuadElement.html</anchorfile>
      <anchor>a14acc47a3da29bb43cb580f6a4522694</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>coef</name>
      <anchorfile>structSCIP__QuadElement.html</anchorfile>
      <anchor>a120712a242a0a09cc85b132c9037bd8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SCIP_QuadVarTerm</name>
    <filename>structSCIP__QuadVarTerm.html</filename>
    <member kind="variable">
      <type>SCIP_VAR *</type>
      <name>var</name>
      <anchorfile>structSCIP__QuadVarTerm.html</anchorfile>
      <anchor>ad8aa023e5bc99805b0742a0809d6acc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>lincoef</name>
      <anchorfile>structSCIP__QuadVarTerm.html</anchorfile>
      <anchor>a9196ce429860b59f4c4df7462315681b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>sqrcoef</name>
      <anchorfile>structSCIP__QuadVarTerm.html</anchorfile>
      <anchor>a5c6ddf47f97387e4a68269cb8e89b938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nadjbilin</name>
      <anchorfile>structSCIP__QuadVarTerm.html</anchorfile>
      <anchor>aedb45049d6bce44b74e94eb6203566b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>adjbilinsize</name>
      <anchorfile>structSCIP__QuadVarTerm.html</anchorfile>
      <anchor>a0acc9231fc154edacce5bffd5bdc8d9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>adjbilin</name>
      <anchorfile>structSCIP__QuadVarTerm.html</anchorfile>
      <anchor>a37f978d385b334571ab6c94d7b656fcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_EVENTDATA *</type>
      <name>eventdata</name>
      <anchorfile>structSCIP__QuadVarTerm.html</anchorfile>
      <anchor>a00068da9d34b7f26d0aa9ee671a8d369</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SCIP_Tokenizer</name>
    <filename>structSCIP__Tokenizer.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>strbuf</name>
      <anchorfile>structSCIP__Tokenizer.html</anchorfile>
      <anchor>ad1a8895401fe15a58d8f5a920e1c5206</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>token</name>
      <anchorfile>structSCIP__Tokenizer.html</anchorfile>
      <anchor>adff054f6bc1f22ee6506e86f1b286ff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>tokenbuf</name>
      <anchorfile>structSCIP__Tokenizer.html</anchorfile>
      <anchor>ae8644a8f2be97f95cff7d203fa1722f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>strpos</name>
      <anchorfile>structSCIP__Tokenizer.html</anchorfile>
      <anchor>a92dd35a338b79f006c44000bc8ed09af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ScipJournal</name>
    <filename>classScipJournal.html</filename>
    <member kind="function">
      <type></type>
      <name>ScipJournal</name>
      <anchorfile>classScipJournal.html</anchorfile>
      <anchor>a2c9d5ffc366ff6a2a3d71e078fa0f334</anchor>
      <arglist>(const char *name, Ipopt::EJournalLevel default_level)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScipJournal</name>
      <anchorfile>classScipJournal.html</anchorfile>
      <anchor>a6e0d09181dd734d88f681bfbb5e25b5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>PrintImpl</name>
      <anchorfile>classScipJournal.html</anchorfile>
      <anchor>a7b609368c3b5eacc969191280ea67eca</anchor>
      <arglist>(Ipopt::EJournalCategory category, Ipopt::EJournalLevel level, const char *str)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>PrintfImpl</name>
      <anchorfile>classScipJournal.html</anchorfile>
      <anchor>ae189681d94e8d54c8bdb1565f0cc5dc2</anchor>
      <arglist>(Ipopt::EJournalCategory category, Ipopt::EJournalLevel level, const char *pformat, va_list ap)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>FlushBufferImpl</name>
      <anchorfile>classScipJournal.html</anchorfile>
      <anchor>a88fb8724f9183499c9150db21f673527</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ScipNLP</name>
    <filename>classScipNLP.html</filename>
    <member kind="function">
      <type></type>
      <name>ScipNLP</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>a2c7140650514a1e3d89c76da2c536217</anchor>
      <arglist>(SCIP_NLPIPROBLEM *nlpiproblem_=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScipNLP</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>a0b38ee9b67c46bed72ea114d41ff569e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNLPIPROBLEM</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>a8926e76d92aa4c675bd6de53593594eb</anchor>
      <arglist>(SCIP_NLPIPROBLEM *nlpiproblem_)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_nlp_info</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>aedb4842c77647fbef0589324cce63e8c</anchor>
      <arglist>(Index &amp;n, Index &amp;m, Index &amp;nnz_jac_g, Index &amp;nnz_h_lag, IndexStyleEnum &amp;index_style)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_bounds_info</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>a933c053dee363a573cb881d4582062cf</anchor>
      <arglist>(Index n, Number *x_l, Number *x_u, Index m, Number *g_l, Number *g_u)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_starting_point</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>a62a1ecdf37631c8cafa9fbaa0132fc14</anchor>
      <arglist>(Index n, bool init_x, Number *x, bool init_z, Number *z_L, Number *z_U, Index m, bool init_lambda, Number *lambda)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_variables_linearity</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>a1f92eaf69dfeeeda6ddcdab851ea42f9</anchor>
      <arglist>(Index n, LinearityType *var_types)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_constraints_linearity</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>a573c50cb319fd06790e62a2c5d97b620</anchor>
      <arglist>(Index m, LinearityType *const_types)</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>get_number_of_nonlinear_variables</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>aa3d809d05685d137b4069e70ab51c0aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_list_of_nonlinear_variables</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>aa43a5a82f8663c2b0347039364e20a12</anchor>
      <arglist>(Index num_nonlin_vars, Index *pos_nonlin_vars)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_var_con_metadata</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>a09b8c3b2991f73a18e16149d46d6ac3a</anchor>
      <arglist>(Index n, StringMetaDataMapType &amp;var_string_md, IntegerMetaDataMapType &amp;var_integer_md, NumericMetaDataMapType &amp;var_numeric_md, Index m, StringMetaDataMapType &amp;con_string_md, IntegerMetaDataMapType &amp;con_integer_md, NumericMetaDataMapType &amp;con_numeric_md)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eval_f</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>a61045cf9290186aa6aaa4c58341d1609</anchor>
      <arglist>(Index n, const Number *x, bool new_x, Number &amp;obj_value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eval_grad_f</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>a7f79629780d071ffe26995705bd3bec6</anchor>
      <arglist>(Index n, const Number *x, bool new_x, Number *grad_f)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eval_g</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>a37fbcdf1bc48f8e4d3577a7455d53ec6</anchor>
      <arglist>(Index n, const Number *x, bool new_x, Index m, Number *g)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eval_jac_g</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>ac741d8669a4ecae92d6db7a19a73cadb</anchor>
      <arglist>(Index n, const Number *x, bool new_x, Index m, Index nele_jac, Index *iRow, Index *jCol, Number *values)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eval_h</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>a555b06ee843c249decf08326030499e2</anchor>
      <arglist>(Index n, const Number *x, bool new_x, Number obj_factor, Index m, const Number *lambda, bool new_lambda, Index nele_hess, Index *iRow, Index *jCol, Number *values)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intermediate_callback</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>ad7bcc6662746463fcc25340ba3ff21e6</anchor>
      <arglist>(AlgorithmMode mode, Index iter, Number obj_value, Number inf_pr, Number inf_du, Number mu, Number d_norm, Number regularization_size, Number alpha_du, Number alpha_pr, Index ls_trials, const IpoptData *ip_data, IpoptCalculatedQuantities *ip_cq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finalize_solution</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>a28c40eb965ec1d1b783aeaabe0f491b3</anchor>
      <arglist>(SolverReturn status, Index n, const Number *x, const Number *z_L, const Number *z_U, Index m, const Number *g, const Number *lambda, Number obj_value, const IpoptData *data, IpoptCalculatedQuantities *cq)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>approxhessian</name>
      <anchorfile>classScipNLP.html</anchorfile>
      <anchor>ad52813350100f04e6c3c7a16fe8030e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SolTuple</name>
    <filename>structSolTuple.html</filename>
    <member kind="variable">
      <type>int *</type>
      <name>indices</name>
      <anchorfile>structSolTuple.html</anchorfile>
      <anchor>aed090a8d4d333df3b9e342bf5fbabb61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>size</name>
      <anchorfile>structSolTuple.html</anchorfile>
      <anchor>a1a4d41c112172c88ca313d2b7819b0d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>key</name>
      <anchorfile>structSolTuple.html</anchorfile>
      <anchor>ae02b1a088d4858debf67465531c690a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SOLTUPLE *</type>
      <name>prev</name>
      <anchorfile>structSolTuple.html</anchorfile>
      <anchor>a74fbc3546101deadf97b4d094c961203</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sortkeypair</name>
    <filename>structsortkeypair.html</filename>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>key1</name>
      <anchorfile>structsortkeypair.html</anchorfile>
      <anchor>a11bd43ff0c7b26ecb19b6a72e6569938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>key2</name>
      <anchorfile>structsortkeypair.html</anchorfile>
      <anchor>a7847b913811bbc0dc973e95c16c64348</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>sparseGraph</name>
    <filename>structsparseGraph.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>n</name>
      <anchorfile>structsparseGraph.html</anchorfile>
      <anchor>a8dcec6d7ac7f3406241e4da98b6fdc91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>m</name>
      <anchorfile>structsparseGraph.html</anchorfile>
      <anchor>a48e5468d0b722d12a0a646b8b73a1a9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int **</type>
      <name>A</name>
      <anchorfile>structsparseGraph.html</anchorfile>
      <anchor>af4a0f6bdcf674b4ada07f878ca3748f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real **</type>
      <name>W</name>
      <anchorfile>structsparseGraph.html</anchorfile>
      <anchor>a0d194900f9e6edf82d7bccda77098dfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>deg</name>
      <anchorfile>structsparseGraph.html</anchorfile>
      <anchor>ae6401ab3e4ec9f2a3fb210f577bf6fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>size</name>
      <anchorfile>structsparseGraph.html</anchorfile>
      <anchor>a6f05a9e3b00d3bce0e800fe1ab7fca52</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SparseMatrix</name>
    <filename>structSparseMatrix.html</filename>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>values</name>
      <anchorfile>structSparseMatrix.html</anchorfile>
      <anchor>a0341b237d1c35a28ed17caaf3508eb9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_VAR **</type>
      <name>columns</name>
      <anchorfile>structSparseMatrix.html</anchorfile>
      <anchor>a5c7952c06a25b67b950530c914c92e5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char **</type>
      <name>rows</name>
      <anchorfile>structSparseMatrix.html</anchorfile>
      <anchor>a0740971e9c865ffd2dfcb714da5fa5c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nentries</name>
      <anchorfile>structSparseMatrix.html</anchorfile>
      <anchor>af78e6ce4550c154be9eed6873f01e69d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sentries</name>
      <anchorfile>structSparseMatrix.html</anchorfile>
      <anchor>a66d941122cb73c5741caa76cf258fb6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SparseSolution</name>
    <filename>structSparseSolution.html</filename>
    <member kind="variable">
      <type>SCIP_Longint *</type>
      <name>lbvalues</name>
      <anchorfile>structSparseSolution.html</anchorfile>
      <anchor>ade72fba12949d6c6422f14f47f585230</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Longint *</type>
      <name>ubvalues</name>
      <anchorfile>structSparseSolution.html</anchorfile>
      <anchor>a07fca9d8fdc31de99e6b43a0e62e25eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SPxSCIP</name>
    <filename>classSPxSCIP.html</filename>
    <member kind="function">
      <type></type>
      <name>SPxSCIP</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a4f8b9a7908a9281a4844267b7e992407</anchor>
      <arglist>(const char *probname=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SPxSCIP</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>af89b24c87f76206a2504d8b7a752d07e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoPricer</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a608dcce08fa9681eb0372c249e97f486</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFullPricer</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a87497445ab93ea2d5d3672e9fdbd23d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSteepPricer</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>abe75eb6bdc3b9a2d21aed25eb36f50da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSteepQStartPricer</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a5e565ad3c17b8ae2a3d2d61097b52269</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParmultPricer</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a3a8a61c6f0869e22a07d00e77d8a77eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDevexPricer</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a696031386d579538fd5819ff8584c996</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getFromScratch</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>aa4d2329f7364894a69623218453ad6a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFromScratch</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a60719230e53487f6780bed7a976b8fea</anchor>
      <arglist>(bool fs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getScaling</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>ad931005103639502571627554f1e3d48</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScaling</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a3f6a56f4f730b6ddfbbd31f5ab272624</anchor>
      <arglist>(bool s)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLpInfo</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>ab53c88de3316485fe8658b0e04af0481</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLpInfo</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>ac25a62dfc76c2f47256f44406cbf8730</anchor>
      <arglist>(bool li)</arglist>
    </member>
    <member kind="function">
      <type>SPxLP::SPxSense</type>
      <name>getSense</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a4aef51a3a608a6ad77db32e7d56a4bad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSense</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a60684f75ea4b7a2a176d19c0f90043a9</anchor>
      <arglist>(const SPxLP::SPxSense sen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProbname</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a4491a211ae62d7fc2e739d512d6deff0</anchor>
      <arglist>(const char *probname)</arglist>
    </member>
    <member kind="function">
      <type>Real</type>
      <name>getObjLoLimit</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>afe61043dae6ee68237e179fed1fb6a89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjLoLimit</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a400d9d14004683e2bc503e42dda26ca7</anchor>
      <arglist>(Real limit)</arglist>
    </member>
    <member kind="function">
      <type>Real</type>
      <name>getObjUpLimit</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a10ad33fbcaf4b1b64301d8b909f8e471</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjUpLimit</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>aa6ea6ff3aa4dababbeac5a5b52f4e8b3</anchor>
      <arglist>(Real limit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRep</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a32e8be127fd2374efd1670104af4f243</anchor>
      <arglist>(SPxSolver::Representation p_rep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trySolve</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a1284f6e5757fc6492b9466ea5a0420ee</anchor>
      <arglist>(bool printwarning=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Status</type>
      <name>doSolve</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a597c7444979fdccd30a9b99041efeb2f</anchor>
      <arglist>(bool printwarning=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Status</type>
      <name>solve</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a6a8c3fae19da7e8329056c7167147d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>savePreStrongbranchingBasis</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>ab729434feca90b6a301b109abeb6c28d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePreStrongbranchingBasis</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>ac1e4e913f72554b2c91287f36782b038</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freePreStrongbranchingBasis</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a556794811b3091f26d09a69c9b959488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>preStrongbranchingBasisFreed</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a1540f6d7fd0d31eb8e47f9d9efca0f57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Status</type>
      <name>getStatus</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>abf5c4c413e85853e8f918a66c5032add</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a642da73e5c336a61823a206d8542ad05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iterations</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a896429f2407c2ea63f91a59304f9b24e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a120fc68afc87c71f64bbc437d54a1861</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readLP</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>aa431c4030f71019e60f6285acc5bef7a</anchor>
      <arglist>(const char *fname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getColNames</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a3f38b82e3585761ba6499516fef0fbce</anchor>
      <arglist>(int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getRowNames</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>ad98fe87e22c83220f54a914dfbf3437d</anchor>
      <arglist>(int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SPxSCIP</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a56da45bd7d5b51acc3368f796df1a1a8</anchor>
      <arglist>(const char *probname)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SPxSCIP</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>af89b24c87f76206a2504d8b7a752d07e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getFromScratch</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>aa4d2329f7364894a69623218453ad6a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFromScratch</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a60719230e53487f6780bed7a976b8fea</anchor>
      <arglist>(bool fs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProbname</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a4491a211ae62d7fc2e739d512d6deff0</anchor>
      <arglist>(const char *probname)</arglist>
    </member>
    <member kind="function">
      <type>Real</type>
      <name>getObjLoLimit</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>afe61043dae6ee68237e179fed1fb6a89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjLoLimit</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a400d9d14004683e2bc503e42dda26ca7</anchor>
      <arglist>(Real limit)</arglist>
    </member>
    <member kind="function">
      <type>Real</type>
      <name>getObjUpLimit</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a10ad33fbcaf4b1b64301d8b909f8e471</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjUpLimit</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>aa6ea6ff3aa4dababbeac5a5b52f4e8b3</anchor>
      <arglist>(Real limit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Status</type>
      <name>solve</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a6a8c3fae19da7e8329056c7167147d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Status</type>
      <name>getStatus</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>abf5c4c413e85853e8f918a66c5032add</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a120fc68afc87c71f64bbc437d54a1861</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addCol</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a95199bcefc953303f94a569322e2be15</anchor>
      <arglist>(const LPCol &amp;col)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addCol</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a4103aab2b3850ec98b4a639c4cbaced7</anchor>
      <arglist>(SPxColId &amp;theid, const LPCol &amp;col)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addCols</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a11ef6079037e805d06ac375de894633c</anchor>
      <arglist>(const LPColSet &amp;pset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addCols</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a76b6e42b6c645f6c6b486443b769ba81</anchor>
      <arglist>(SPxColId theid[], const LPColSet &amp;theset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SPxSCIP</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a4f8b9a7908a9281a4844267b7e992407</anchor>
      <arglist>(const char *probname=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SPxSCIP</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>af89b24c87f76206a2504d8b7a752d07e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoPricer</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a608dcce08fa9681eb0372c249e97f486</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSteepPricer</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>abe75eb6bdc3b9a2d21aed25eb36f50da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParmultPricer</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a3a8a61c6f0869e22a07d00e77d8a77eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDevexPricer</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a696031386d579538fd5819ff8584c996</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getFromScratch</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>aa4d2329f7364894a69623218453ad6a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFromScratch</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a60719230e53487f6780bed7a976b8fea</anchor>
      <arglist>(bool fs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLpInfo</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>ab53c88de3316485fe8658b0e04af0481</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLpInfo</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>ac25a62dfc76c2f47256f44406cbf8730</anchor>
      <arglist>(bool li)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProbname</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a4491a211ae62d7fc2e739d512d6deff0</anchor>
      <arglist>(const char *probname)</arglist>
    </member>
    <member kind="function">
      <type>Real</type>
      <name>getObjLoLimit</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>afe61043dae6ee68237e179fed1fb6a89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjLoLimit</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a400d9d14004683e2bc503e42dda26ca7</anchor>
      <arglist>(Real limit)</arglist>
    </member>
    <member kind="function">
      <type>Real</type>
      <name>getObjUpLimit</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a10ad33fbcaf4b1b64301d8b909f8e471</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjUpLimit</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>aa6ea6ff3aa4dababbeac5a5b52f4e8b3</anchor>
      <arglist>(Real limit)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Status</type>
      <name>solve</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a6a8c3fae19da7e8329056c7167147d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Status</type>
      <name>getStatus</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>abf5c4c413e85853e8f918a66c5032add</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a120fc68afc87c71f64bbc437d54a1861</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addCol</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a95199bcefc953303f94a569322e2be15</anchor>
      <arglist>(const LPCol &amp;col)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addCol</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a4103aab2b3850ec98b4a639c4cbaced7</anchor>
      <arglist>(SPxColId &amp;theid, const LPCol &amp;col)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addCols</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a11ef6079037e805d06ac375de894633c</anchor>
      <arglist>(const LPColSet &amp;pset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addCols</name>
      <anchorfile>classSPxSCIP.html</anchorfile>
      <anchor>a76b6e42b6c645f6c6b486443b769ba81</anchor>
      <arglist>(SPxColId theid[], const LPColSet &amp;theset)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TCLIQUE_Graph</name>
    <filename>structTCLIQUE__Graph.html</filename>
    <member kind="variable">
      <type>SCIP_VAR **</type>
      <name>vars</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>a71fafbcc9b58988a7cb9146efc2e868b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TCLIQUE_WEIGHT *</type>
      <name>weights</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>aa00d1a108b60f135bda85f3c67f8da6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>adjnodesidxs</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>a7c8c2346520c56fa17009925f62cd656</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>cliqueidsidxs</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>a38ddeaecd53ec24b0a8def3e82321cf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>adjnodes</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>a2e1fa17e3692f16068f75e753c41c075</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>cliqueids</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>ac53615698f301f9c2529e71cd4e644d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int *</type>
      <name>cliquetable</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>afdf6488f01c5335ded58edbbb7268414</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>adjnodessize</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>a9ebb839301df12ca1574b6127d54c399</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cliqueidssize</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>ab49615ddee164b30526b847b92a43976</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nnodes</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>a8f15890fa5a9da79e47aac7703c1e244</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tablewidth</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>a4c9a0f485bcadbc6603d43e3c29c345f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nedges</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>a14ad1261b04e1631a097ff9139b4580e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>degrees</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>a542531a006b9166cd6765b7240156743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HEAD_ADJ *</type>
      <name>adjedges</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>a68a580255ca2c1b2bf3914c90c7672d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sizenodes</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>adb9ac828b2bd0cb5d0ba7b84de069edd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sizeedges</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>a13101adfe4637d11ac6b3701987b970c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>cacheddegrees</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>a099b320c4782b6154644777c4e136cc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>cachedorigs</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>a57c75bc6f3bdb07dc7bf12786d5e3d2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>cacheddests</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>a7f5d5092c16f1390eda02ec2883b7ef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncachededges</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>a7355266f9d252f571aaeb922a1eab1a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sizecachededges</name>
      <anchorfile>structTCLIQUE__Graph.html</anchorfile>
      <anchor>a07b30c2ffdfefec0ac1c232ed8d82f9e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThetaTree</name>
    <filename>structThetaTree.html</filename>
    <member kind="variable">
      <type>THETATREENODE *</type>
      <name>superroot</name>
      <anchorfile>structThetaTree.html</anchorfile>
      <anchor>acea3286cc40034759b9225d05c654c18</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ThetaTreeNode</name>
    <filename>structThetaTreeNode.html</filename>
    <member kind="variable">
      <type>THETATREENODE *</type>
      <name>parent</name>
      <anchorfile>structThetaTreeNode.html</anchorfile>
      <anchor>a063d75e83919f1698ec361769cb91e80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>THETATREENODE *</type>
      <name>left</name>
      <anchorfile>structThetaTreeNode.html</anchorfile>
      <anchor>ab80c18a49ee097f7eb745031121b89b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>THETATREENODE *</type>
      <name>right</name>
      <anchorfile>structThetaTreeNode.html</anchorfile>
      <anchor>a784fb5ecac1f268f129b4d33133f1e48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>value</name>
      <anchorfile>structThetaTreeNode.html</anchorfile>
      <anchor>a0cf4fb33e7e18ba45b636edf8a4a1961</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_VAR *</type>
      <name>var</name>
      <anchorfile>structThetaTreeNode.html</anchorfile>
      <anchor>a9af6c7855c5e211a8c0f28c15dfc2fd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>energy</name>
      <anchorfile>structThetaTreeNode.html</anchorfile>
      <anchor>a6f7499c2612535e22a1cc93d65834773</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>envelop</name>
      <anchorfile>structThetaTreeNode.html</anchorfile>
      <anchor>aa44c74211483d0d495023a1eec853a57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TLTree</name>
    <filename>structTLTree.html</filename>
    <member kind="variable">
      <type>TLTREENODE *</type>
      <name>superroot</name>
      <anchorfile>structTLTree.html</anchorfile>
      <anchor>a02b70feddb3b87356d028b4f507dcf9b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TLTreeNode</name>
    <filename>structTLTreeNode.html</filename>
    <member kind="variable">
      <type>TLTREENODE *</type>
      <name>parent</name>
      <anchorfile>structTLTreeNode.html</anchorfile>
      <anchor>a6bb92e6bf24b6310a8a119b8c4fed67e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TLTREENODE *</type>
      <name>left</name>
      <anchorfile>structTLTreeNode.html</anchorfile>
      <anchor>acadfd5bfe7203fb6b58d6cbe5d304aca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TLTREENODE *</type>
      <name>right</name>
      <anchorfile>structTLTreeNode.html</anchorfile>
      <anchor>acab7942bfd17d0d01fbf0cc782629ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>value</name>
      <anchorfile>structTLTreeNode.html</anchorfile>
      <anchor>ad25a279b6e1bd98dee77a705f75c6bfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_VAR *</type>
      <name>var</name>
      <anchorfile>structTLTreeNode.html</anchorfile>
      <anchor>a2f71217c55a15e4a725851284c2bd8df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>energy</name>
      <anchorfile>structTLTreeNode.html</anchorfile>
      <anchor>aea04d4f38289f4d5ebd4c12bd40a346e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>envelop</name>
      <anchorfile>structTLTreeNode.html</anchorfile>
      <anchor>a0cfc0d4db38f343ef4e8fba634d43952</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>energyL</name>
      <anchorfile>structTLTreeNode.html</anchorfile>
      <anchor>a097e6b4f625f58f4b5ffb1bf0f1ecad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>envelopL</name>
      <anchorfile>structTLTreeNode.html</anchorfile>
      <anchor>abfd8cadce5eb1a2020f03aef22a41561</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>inTheta</name>
      <anchorfile>structTLTreeNode.html</anchorfile>
      <anchor>adaae43dd2d50600e6bb8e617224b883a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>VarArray</name>
    <filename>structVarArray.html</filename>
    <member kind="variable">
      <type>SCIP_VAR **</type>
      <name>vars</name>
      <anchorfile>structVarArray.html</anchorfile>
      <anchor>a01b8263532187c175786871cdb16dfb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>structVarArray.html</anchorfile>
      <anchor>a1226486c0c6820da61264b2e0440835a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DIMENSIONS *</type>
      <name>info</name>
      <anchorfile>structVarArray.html</anchorfile>
      <anchor>a1a06f9f632a8a69b209f0e75810b6768</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nvars</name>
      <anchorfile>structVarArray.html</anchorfile>
      <anchor>a877ae05d210ae8b2567070548c18b46c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FZNNUMBERTYPE</type>
      <name>type</name>
      <anchorfile>structVarArray.html</anchorfile>
      <anchor>a68c8c3af850aed382c65a8addcf8d2c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Zerohalf_AuxGraph</name>
    <filename>structZerohalf__AuxGraph.html</filename>
    <member kind="variable">
      <type>ZEROHALF_AUXGRAPH_NODE **</type>
      <name>nodes</name>
      <anchorfile>structZerohalf__AuxGraph.html</anchorfile>
      <anchor>ae108305da95605ba06a655d9f45d1952</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ZEROHALF_AUXGRAPH_NODE **</type>
      <name>nodecopies</name>
      <anchorfile>structZerohalf__AuxGraph.html</anchorfile>
      <anchor>ab078d8f0062fa631ac18a9a649306a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nnodes</name>
      <anchorfile>structZerohalf__AuxGraph.html</anchorfile>
      <anchor>a5c95f3577b5eff2e24f8be78250077fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Zerohalf_AuxGraph_Node</name>
    <filename>structZerohalf__AuxGraph__Node.html</filename>
    <member kind="variable">
      <type>ZEROHALF_AUXGRAPH_NODE **</type>
      <name>neighbors</name>
      <anchorfile>structZerohalf__AuxGraph__Node.html</anchorfile>
      <anchor>a5aecee501c5ed962779a26802e954d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>edgeweights</name>
      <anchorfile>structZerohalf__AuxGraph__Node.html</anchorfile>
      <anchor>abb752f58a299423b9f310f1c74c72f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>relatedrows</name>
      <anchorfile>structZerohalf__AuxGraph__Node.html</anchorfile>
      <anchor>a98f35ede25f65af4b3982eb73ef7b11a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nneighbors</name>
      <anchorfile>structZerohalf__AuxGraph__Node.html</anchorfile>
      <anchor>ac9625e792953fe4fcd0a88fde38070c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>distance</name>
      <anchorfile>structZerohalf__AuxGraph__Node.html</anchorfile>
      <anchor>a9d4389bda92780d1c28072b1d7294d8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ZEROHALF_AUXGRAPH_NODE *</type>
      <name>previous</name>
      <anchorfile>structZerohalf__AuxGraph__Node.html</anchorfile>
      <anchor>a16a1a796ff630e45b29661ee05170884</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Zerohalf_AuxIPData</name>
    <filename>structZerohalf__AuxIPData.html</filename>
    <member kind="variable">
      <type>SCIP *</type>
      <name>subscip</name>
      <anchorfile>structZerohalf__AuxIPData.html</anchorfile>
      <anchor>a1496a886d208fc7c95b00c6c3af90467</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m</name>
      <anchorfile>structZerohalf__AuxIPData.html</anchorfile>
      <anchor>a958dc652626b76a27645b9d92bd692bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n</name>
      <anchorfile>structZerohalf__AuxIPData.html</anchorfile>
      <anchor>a532386a462215d5e76719c35cb2daf62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_VAR **</type>
      <name>v</name>
      <anchorfile>structZerohalf__AuxIPData.html</anchorfile>
      <anchor>a57cb5c93f707e8b7e9825cda9671ceea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_VAR **</type>
      <name>y</name>
      <anchorfile>structZerohalf__AuxIPData.html</anchorfile>
      <anchor>a04447652edd68b416ac0892d13e7b73d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_VAR **</type>
      <name>r</name>
      <anchorfile>structZerohalf__AuxIPData.html</anchorfile>
      <anchor>a16920ca6125e277abfbb451cc3bfea7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_VAR *</type>
      <name>q</name>
      <anchorfile>structZerohalf__AuxIPData.html</anchorfile>
      <anchor>aa1ad0e66bca9d3ec6cbf29ff9dd80e1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_CONS *</type>
      <name>feasipcons</name>
      <anchorfile>structZerohalf__AuxIPData.html</anchorfile>
      <anchor>a1d279b80289e5294a1c96dc4ddfad6c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_CONS *</type>
      <name>oddrhscons</name>
      <anchorfile>structZerohalf__AuxIPData.html</anchorfile>
      <anchor>adbb03e2a1fc5e240b9d533481facf3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_CONS **</type>
      <name>columnsumcons</name>
      <anchorfile>structZerohalf__AuxIPData.html</anchorfile>
      <anchor>a28366e3532a3ff1bdd07da8a9a1d5390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>timelimit</name>
      <anchorfile>structZerohalf__AuxIPData.html</anchorfile>
      <anchor>a6e30569e6ca25b224fa8be27f9e85ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>memorylimit</name>
      <anchorfile>structZerohalf__AuxIPData.html</anchorfile>
      <anchor>a288dbf4e305a128b780fb5abe9d693fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>objectivelimit</name>
      <anchorfile>structZerohalf__AuxIPData.html</anchorfile>
      <anchor>a18b9310d24edf84c266f96a327b07fea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nodelimit</name>
      <anchorfile>structZerohalf__AuxIPData.html</anchorfile>
      <anchor>ae91bfa24a86f4b77e87dd26a8da2e81d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Zerohalf_CutData</name>
    <filename>structZerohalf__CutData.html</filename>
    <member kind="variable">
      <type>ZEROHALF_SUBLPDATA *</type>
      <name>relatedsubproblem</name>
      <anchorfile>structZerohalf__CutData.html</anchorfile>
      <anchor>ae55cc2e7f4e0785d4f68643e0cce7742</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ZEROHALF_MOD2DATA *</type>
      <name>relatedmod2data</name>
      <anchorfile>structZerohalf__CutData.html</anchorfile>
      <anchor>a81440679744a0cb4a0e0a7043557416b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_ROW *</type>
      <name>cut</name>
      <anchorfile>structZerohalf__CutData.html</anchorfile>
      <anchor>a18fce7e3c6417cf258d5e0ede46278cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>success</name>
      <anchorfile>structZerohalf__CutData.html</anchorfile>
      <anchor>a3a7ef96ae7b45ebf03c0ff25853cbc29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>isfeasviolated</name>
      <anchorfile>structZerohalf__CutData.html</anchorfile>
      <anchor>abeb6542a46f2d82991b09453366e5884</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool</type>
      <name>islocal</name>
      <anchorfile>structZerohalf__CutData.html</anchorfile>
      <anchor>a2897d9512fc4e8bdcfa3b8f066bd03e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>activity</name>
      <anchorfile>structZerohalf__CutData.html</anchorfile>
      <anchor>acb231321de1d77f917e06ac28714a3c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>rhs</name>
      <anchorfile>structZerohalf__CutData.html</anchorfile>
      <anchor>a0e4dc09d9356f1922b823e31ddee06f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>norm</name>
      <anchorfile>structZerohalf__CutData.html</anchorfile>
      <anchor>abc61c4313b1d85edbbdee0c6216c19a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>efficacy</name>
      <anchorfile>structZerohalf__CutData.html</anchorfile>
      <anchor>a367a4d1df3ea0763e64ac07b9c900283</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real</type>
      <name>violation</name>
      <anchorfile>structZerohalf__CutData.html</anchorfile>
      <anchor>a9bc5bcc1d467fc026d81cce068e41a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nnonz</name>
      <anchorfile>structZerohalf__CutData.html</anchorfile>
      <anchor>ada1a71ec7add938412d3e69538ab9b31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrowsincut</name>
      <anchorfile>structZerohalf__CutData.html</anchorfile>
      <anchor>a1853fa2b79e0ca4e205be8b43761789e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrrowsincut</name>
      <anchorfile>structZerohalf__CutData.html</anchorfile>
      <anchor>a2f564661dbfb9ee4afddef4fb5bba2ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CUTSEPARATEDBY</type>
      <name>separatedby</name>
      <anchorfile>structZerohalf__CutData.html</anchorfile>
      <anchor>adddca30cf65dda464d72eb173097faef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>addedtolp</name>
      <anchorfile>structZerohalf__CutData.html</anchorfile>
      <anchor>ab2468160f2cbeca5793259b13e0faa82</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Zerohalf_LPData</name>
    <filename>structZerohalf__LPData.html</filename>
    <member kind="variable">
      <type>SCIP_VAR **</type>
      <name>vars</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>ade6f04a2267836700e1aa444d3ceb800</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_ROW **</type>
      <name>rows</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>a6204a7da8b2533d685f5ad7ef6f72907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_COL **</type>
      <name>cols</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>aeeddac2ed8cdf412b96f304261cd3919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nvars</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>a545ea2ea2489e9450ec73d1a00417ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrows</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>aec1e473953135e85f7ae0b320c873c9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncols</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>a2fc3f4f3d7a34b312902531adcdbad2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nvarbounds</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>ab4c4fb5778b1a5eb8561404993fc89b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ZEROHALF_SUBLPDATA **</type>
      <name>subproblems</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>a0f88a684bfdea258ede52a1ec913325a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nsubproblems</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>ae7ce3ad02b2037c0c7bfe54fe5683e53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>intscalarsleftrow</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>a556df88199514c2bee05e617e6db485d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>intscalarsrightrow</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>a84aac08a4bd162aef993e62779a0f333</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>subproblemsindexofrow</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>a75bc64620cac57e24747a920f7677f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>rrowsindexofleftrow</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>a504d761af42e09ae6b21acafc0ae704f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>rrowsindexofrightrow</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>a1d9923a1f0aaba3bca6c716e561e6fa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>subproblemsindexofcol</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>aef48e4fda6a906b9319575312f791e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>rcolsindexofcol</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>afb7ba52e930c8621ee57ced1626048bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>bestlbidxofcol</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>aaae9e636fbab0450405d8a254c88a8e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>bestubidxofcol</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>a41b2244b29490323de7660891e0aad79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ndelvarbounds</name>
      <anchorfile>structZerohalf__LPData.html</anchorfile>
      <anchor>aa445861745f1452e752d6638613c1828</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Zerohalf_Mod2Data</name>
    <filename>structZerohalf__Mod2Data.html</filename>
    <member kind="variable">
      <type>ZEROHALF_SUBLPDATA *</type>
      <name>relatedsubproblem</name>
      <anchorfile>structZerohalf__Mod2Data.html</anchorfile>
      <anchor>ac1522e3f17758c20bb33f11c2a35d945</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BITARRAY *</type>
      <name>rows</name>
      <anchorfile>structZerohalf__Mod2Data.html</anchorfile>
      <anchor>a4da89c1f3bde0a496dafe2b90a432798</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BITARRAY *</type>
      <name>rowaggregations</name>
      <anchorfile>structZerohalf__Mod2Data.html</anchorfile>
      <anchor>a8c7f9631cfbe21bbc3592885796ebf87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Bool *</type>
      <name>rhs</name>
      <anchorfile>structZerohalf__Mod2Data.html</anchorfile>
      <anchor>a85647c5432c16548c5419737396741b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>slacks</name>
      <anchorfile>structZerohalf__Mod2Data.html</anchorfile>
      <anchor>aa0e7536ca413385eb6b5ebb9c8a4d7e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>fracsol</name>
      <anchorfile>structZerohalf__Mod2Data.html</anchorfile>
      <anchor>a46af66cd109c396989b1975733b77b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrows</name>
      <anchorfile>structZerohalf__Mod2Data.html</anchorfile>
      <anchor>ac0d9921bbfe3e760a5318d490aed441f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rowsbitarraysize</name>
      <anchorfile>structZerohalf__Mod2Data.html</anchorfile>
      <anchor>a42848cd5208153b27826d388418242f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rowaggregationsbitarraysize</name>
      <anchorfile>structZerohalf__Mod2Data.html</anchorfile>
      <anchor>af54e82395e50ea1ce0c97af7d184667d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nvarbounds</name>
      <anchorfile>structZerohalf__Mod2Data.html</anchorfile>
      <anchor>af03fe60ab45e960ed2f88e3e3c64367d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>rowsind</name>
      <anchorfile>structZerohalf__Mod2Data.html</anchorfile>
      <anchor>a77459a7cac37cd66a0fb97bb8b3d012a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>colsind</name>
      <anchorfile>structZerohalf__Mod2Data.html</anchorfile>
      <anchor>a970607a3a8f2133435b102693b6fee16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrowsind</name>
      <anchorfile>structZerohalf__Mod2Data.html</anchorfile>
      <anchor>a2713f8bcef3844320a7f6cdf2138fef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ncolsind</name>
      <anchorfile>structZerohalf__Mod2Data.html</anchorfile>
      <anchor>ac859fb39f1bc105aecd3a0f31a9a72ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>rowstatistics</name>
      <anchorfile>structZerohalf__Mod2Data.html</anchorfile>
      <anchor>ad21b8e30f7967eed6839515c935010f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>colstatistics</name>
      <anchorfile>structZerohalf__Mod2Data.html</anchorfile>
      <anchor>a9505222d58bb03dde48fa33f5ba0842f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Zerohalf_SubLPData</name>
    <filename>structZerohalf__SubLPData.html</filename>
    <member kind="variable">
      <type>int *</type>
      <name>rrows</name>
      <anchorfile>structZerohalf__SubLPData.html</anchorfile>
      <anchor>a0c05fb512e0a5cfca488d850a78025ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrrows</name>
      <anchorfile>structZerohalf__SubLPData.html</anchorfile>
      <anchor>aeb25cf309a510a0edf3add059aaf83ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>rrowsrhs</name>
      <anchorfile>structZerohalf__SubLPData.html</anchorfile>
      <anchor>a5511cc74f0296446f911f89eb55bd700</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>rrowsslack</name>
      <anchorfile>structZerohalf__SubLPData.html</anchorfile>
      <anchor>ac51a8921889fcfb46b1482e6eec9e1fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>rcols</name>
      <anchorfile>structZerohalf__SubLPData.html</anchorfile>
      <anchor>a5144abc5e2df0496e22cafd266d62be6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrcols</name>
      <anchorfile>structZerohalf__SubLPData.html</anchorfile>
      <anchor>ac2a72bb77d1f32343a4a9643503777a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>rcolslbslack</name>
      <anchorfile>structZerohalf__SubLPData.html</anchorfile>
      <anchor>ae4f7d4eff769996837a600a7c11724f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SCIP_Real *</type>
      <name>rcolsubslack</name>
      <anchorfile>structZerohalf__SubLPData.html</anchorfile>
      <anchor>ac249d97b313f2e3b40312f73b45b516f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>scip</name>
    <filename>namespacescip.html</filename>
    <class kind="class">scip::ObjBranchrule</class>
    <class kind="struct">scip::ObjCloneable</class>
    <class kind="class">scip::ObjConshdlr</class>
    <class kind="class">scip::ObjDialog</class>
    <class kind="class">scip::ObjDisp</class>
    <class kind="class">scip::ObjEventhdlr</class>
    <class kind="class">scip::ObjHeur</class>
    <class kind="class">scip::ObjMessagehdlr</class>
    <class kind="class">scip::ObjNodesel</class>
    <class kind="class">scip::ObjPresol</class>
    <class kind="class">scip::ObjPricer</class>
    <class kind="struct">scip::ObjProbCloneable</class>
    <class kind="class">scip::ObjProbData</class>
    <class kind="class">scip::ObjProp</class>
    <class kind="class">scip::ObjReader</class>
    <class kind="class">scip::ObjRelax</class>
    <class kind="class">scip::ObjSepa</class>
    <class kind="class">scip::ObjVardata</class>
  </compound>
  <compound kind="class">
    <name>scip::ObjBranchrule</name>
    <filename>classscip_1_1ObjBranchrule.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjBranchrule</name>
      <anchorfile>classscip_1_1ObjBranchrule.html</anchorfile>
      <anchor>af7e6a7b62939018193af190da8a6e5c2</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int maxdepth, SCIP_Real maxbounddist)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjBranchrule</name>
      <anchorfile>classscip_1_1ObjBranchrule.html</anchorfile>
      <anchor>a0cd028f7ad749f36b83a66f1587d81a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_free</name>
      <anchorfile>classscip_1_1ObjBranchrule.html</anchorfile>
      <anchor>a9d5cc353cd24c82054f79e8058059cb1</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_init</name>
      <anchorfile>classscip_1_1ObjBranchrule.html</anchorfile>
      <anchor>a37195afd6f3a8f4998d5c012b3370a14</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exit</name>
      <anchorfile>classscip_1_1ObjBranchrule.html</anchorfile>
      <anchor>a30f993c75392ed99b1a1745b77b8885d</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_initsol</name>
      <anchorfile>classscip_1_1ObjBranchrule.html</anchorfile>
      <anchor>a4283957754e60eed0ce21cdf425d92f9</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exitsol</name>
      <anchorfile>classscip_1_1ObjBranchrule.html</anchorfile>
      <anchor>a388fd74361376010fd99816e63cad3a5</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_execlp</name>
      <anchorfile>classscip_1_1ObjBranchrule.html</anchorfile>
      <anchor>a021b6f1960785ada9ea7e789d63d7e04</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, SCIP_Bool allowaddcons, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_execext</name>
      <anchorfile>classscip_1_1ObjBranchrule.html</anchorfile>
      <anchor>ac326ce015353e6d90c2211d226052242</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, SCIP_Bool allowaddcons, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_execps</name>
      <anchorfile>classscip_1_1ObjBranchrule.html</anchorfile>
      <anchor>a32b106e7664d20c6389291095b54fda9</anchor>
      <arglist>(SCIP *scip, SCIP_BRANCHRULE *branchrule, SCIP_Bool allowaddcons, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjBranchrule.html</anchorfile>
      <anchor>aef706a5c90d9784572e826ca10c5c10c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjBranchrule.html</anchorfile>
      <anchor>ad8474b79c5be6faa86e4eba3c3f2f36b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjBranchrule.html</anchorfile>
      <anchor>a612688469aa03d4b0b6d24d826e38687</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_priority_</name>
      <anchorfile>classscip_1_1ObjBranchrule.html</anchorfile>
      <anchor>a40f346ddf652005d64402442cd38a9fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_maxdepth_</name>
      <anchorfile>classscip_1_1ObjBranchrule.html</anchorfile>
      <anchor>acfd67df27957dadfcb504800adbf142e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Real</type>
      <name>scip_maxbounddist_</name>
      <anchorfile>classscip_1_1ObjBranchrule.html</anchorfile>
      <anchor>a41e0079211f0bb5c2c80a02c1fcc2595</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>scip::ObjCloneable</name>
    <filename>structscip_1_1ObjCloneable.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjCloneable</name>
      <anchorfile>structscip_1_1ObjCloneable.html</anchorfile>
      <anchor>a31a530542ba61e6dd6b39246c799860b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ObjCloneable *</type>
      <name>clone</name>
      <anchorfile>structscip_1_1ObjCloneable.html</anchorfile>
      <anchor>a51368b929c0b6fa3d374852d828bab22</anchor>
      <arglist>(SCIP *scip) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_Bool</type>
      <name>iscloneable</name>
      <anchorfile>structscip_1_1ObjCloneable.html</anchorfile>
      <anchor>abc79f4d5c6713b368275366a501d4d58</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjConshdlr</name>
    <filename>classscip_1_1ObjConshdlr.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjConshdlr</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>ae81cbf3362f35ae0d93b6cfe78dc8fe7</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int sepapriority, int enfopriority, int checkpriority, int sepafreq, int propfreq, int eagerfreq, int maxprerounds, SCIP_Bool delaysepa, SCIP_Bool delayprop, SCIP_Bool delaypresol, SCIP_Bool needscons)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjConshdlr</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>ab5582de8cc9ec4991692f688e74d7f77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_free</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>af35f4e7e44bf21072545b551e7b77b74</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_init</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a4aeee1876a22e556241d75272ea0be50</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS **conss, int nconss)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exit</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a7ba2bb63771a541a665f59773da64d0d</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS **conss, int nconss)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_initpre</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a819ebda17f8b55f3179e141ecab10e5f</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS **conss, int nconss, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exitpre</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>af374b41891bbe88876c7b726c921b0eb</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS **conss, int nconss, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_initsol</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a65843ae437429fbccb4f8dd523f67ac9</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS **conss, int nconss)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exitsol</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a0ae4acf55cb26a106ab350931e2c0738</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS **conss, int nconss)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_delete</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a8da65ade970105bf1b12e09897452eb6</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS *cons, SCIP_CONSDATA **consdata)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_trans</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>ad1e01eee657384491762d188123660fe</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS *sourcecons, SCIP_CONS **targetcons)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_initlp</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a668d66e1ccd89e944f314013bbc927a0</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS **conss, int nconss)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_sepalp</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>abc5d26f3e7083d6fab4c5e89ccf90005</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS **conss, int nconss, int nusefulconss, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_sepasol</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a842be2bdf51e60c93be4eb58e3bbb565</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS **conss, int nconss, int nusefulconss, SCIP_SOL *sol, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_enfolp</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>ae98d40fc2ab39b9e6ba40c5004d5e0ad</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS **conss, int nconss, int nusefulconss, SCIP_Bool solinfeasible, SCIP_RESULT *result)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_enfops</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a20c312bd8881944ae301d2e772bcd9e4</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS **conss, int nconss, int nusefulconss, SCIP_Bool solinfeasible, SCIP_Bool objinfeasible, SCIP_RESULT *result)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_check</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a2b0d557fa7f2312dc3ba16067e2e1339</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS **conss, int nconss, SCIP_SOL *sol, SCIP_Bool checkintegrality, SCIP_Bool checklprows, SCIP_Bool printreason, SCIP_RESULT *result)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_prop</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a84bb8a5b7a76535d658eef9355686991</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS **conss, int nconss, int nusefulconss, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_presol</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a8d14f505a198f17830a7e2bafcde7719</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS **conss, int nconss, int nrounds, int nnewfixedvars, int nnewaggrvars, int nnewchgvartypes, int nnewchgbds, int nnewholes, int nnewdelconss, int nnewupgdconss, int nnewchgcoefs, int nnewchgsides, int *nfixedvars, int *naggrvars, int *nchgvartypes, int *nchgbds, int *naddholes, int *ndelconss, int *nupgdconss, int *nchgcoefs, int *nchgsides, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_resprop</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a975fa78b15017baef0bae7b8823614d2</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS *cons, SCIP_VAR *infervar, int inferinfo, SCIP_BOUNDTYPE boundtype, SCIP_BDCHGIDX *bdchgidx, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_lock</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a9b1d63556c55ace51c059c5544c29c09</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS *cons, int nlockspos, int nlocksneg)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_active</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a8e9a9da80cdb5e16ffff143dbe3f594a</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_deactive</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a43858cc4adaa074c1cf81fdaeba0e853</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_enable</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a5f13177c1c7e01a8546b45c4a48b0735</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_disable</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a2b95f7264ea2ca7117a917978e25fe61</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS *cons)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_print</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>ab11399037db24f6ec0bb423e1db0e73c</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS *cons, FILE *file)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_copy</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a019606b185ecdb62141f16321223d521</anchor>
      <arglist>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP *sourcescip, SCIP_CONSHDLR *sourceconshdlr, SCIP_CONS *sourcecons, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode, SCIP_Bool global, SCIP_Bool *valid)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_parse</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a3fe6ee277304658f15077a07c570256a</anchor>
      <arglist>(SCIP *scip, SCIP_CONSHDLR *conshdlr, SCIP_CONS **cons, const char *name, const char *str, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool modifiable, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode, SCIP_Bool *success)</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>ab82f8d27838f7b6d545f8b7046a66c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>af93d38e4bb813f42255a3bbd72047a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a9c1b30f1077555d6fdda960fac1b2e98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_sepapriority_</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a3b3a4f289b821361bdee0e208ef49771</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_enfopriority_</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a9d5aff7cccc6cca893ba5a70a1338bb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_checkpriority_</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>ae02441c72b587f13fc3ce36bac399d11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_sepafreq_</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a905881e204f9a9dd7d3ffb97566da4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_propfreq_</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a97d3bb50f3b729162923c3ae81caf5c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_eagerfreq_</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a38ab469f79d9fd28b10cfad38afc6643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_maxprerounds_</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>ab44226a494c68dc8cb12a2a559257c45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_delaysepa_</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a45b2e76fbb0496129060c0737c9e59c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_delayprop_</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a55c7d8ab004ab107419ace60f9c0b7bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_delaypresol_</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a5996e5937212d13df58db158bfd061ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_needscons_</name>
      <anchorfile>classscip_1_1ObjConshdlr.html</anchorfile>
      <anchor>a5d1916621fac972cb8264fafe6f6a312</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjDialog</name>
    <filename>classscip_1_1ObjDialog.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjDialog</name>
      <anchorfile>classscip_1_1ObjDialog.html</anchorfile>
      <anchor>accc9471dfad661cda826842aac0e48b8</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, SCIP_Bool issubmenu)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjDialog</name>
      <anchorfile>classscip_1_1ObjDialog.html</anchorfile>
      <anchor>ab09a6d0830c89857824b1c6f0b6f8926</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_free</name>
      <anchorfile>classscip_1_1ObjDialog.html</anchorfile>
      <anchor>ad819dc715c35f9301f6ea55168abb7fc</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_desc</name>
      <anchorfile>classscip_1_1ObjDialog.html</anchorfile>
      <anchor>a939e23d70fcd549ef721b7cbc6622345</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOG *dialog)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exec</name>
      <anchorfile>classscip_1_1ObjDialog.html</anchorfile>
      <anchor>a0dfa6d69059d876198bd0f81b5b98c1c</anchor>
      <arglist>(SCIP *scip, SCIP_DIALOGHDLR *dialoghdlr, SCIP_DIALOG *dialog, SCIP_DIALOG **nextdialog)=0</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjDialog.html</anchorfile>
      <anchor>a3275cafde7cb5aab22c5c5ff6fb7e643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjDialog.html</anchorfile>
      <anchor>aba9b5f2a850050ade08ffae35fc38bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjDialog.html</anchorfile>
      <anchor>a28f51f0222a30c7a5a3cc7cfdceb4047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_issubmenu_</name>
      <anchorfile>classscip_1_1ObjDialog.html</anchorfile>
      <anchor>a34c0184ba23d5f812da445cb9d6d0491</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjDisp</name>
    <filename>classscip_1_1ObjDisp.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjDisp</name>
      <anchorfile>classscip_1_1ObjDisp.html</anchorfile>
      <anchor>abaa051fe8681162417fae91b3b23dc74</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, const char *header, int width, int priority, int position, SCIP_Bool stripline)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjDisp</name>
      <anchorfile>classscip_1_1ObjDisp.html</anchorfile>
      <anchor>a9b975021e4ab77335a8003e5db07890a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_free</name>
      <anchorfile>classscip_1_1ObjDisp.html</anchorfile>
      <anchor>af4498a7ce25fada073532013ceae67aa</anchor>
      <arglist>(SCIP *scip, SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_init</name>
      <anchorfile>classscip_1_1ObjDisp.html</anchorfile>
      <anchor>a7f2e388039a5eec937915ee4fe9213f9</anchor>
      <arglist>(SCIP *scip, SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exit</name>
      <anchorfile>classscip_1_1ObjDisp.html</anchorfile>
      <anchor>a53e2560d5d54a17d22d9e693f2507eef</anchor>
      <arglist>(SCIP *scip, SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_initsol</name>
      <anchorfile>classscip_1_1ObjDisp.html</anchorfile>
      <anchor>a9ecc3268a19028ca85968981c3c45cb3</anchor>
      <arglist>(SCIP *scip, SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exitsol</name>
      <anchorfile>classscip_1_1ObjDisp.html</anchorfile>
      <anchor>aead99fb6c47ea64773d0247f10f3cecb</anchor>
      <arglist>(SCIP *scip, SCIP_DISP *disp)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_output</name>
      <anchorfile>classscip_1_1ObjDisp.html</anchorfile>
      <anchor>a7d1c3bf17843ded47f95d687319eeecf</anchor>
      <arglist>(SCIP *scip, SCIP_DISP *disp, FILE *file)=0</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjDisp.html</anchorfile>
      <anchor>a9777b5a9240f8c60a7553881f89536ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjDisp.html</anchorfile>
      <anchor>a137819aa41cef68f137159c389314002</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjDisp.html</anchorfile>
      <anchor>a1e6478924a6673b2add7d2082a3eb03e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_header_</name>
      <anchorfile>classscip_1_1ObjDisp.html</anchorfile>
      <anchor>a8dae467fb6f07c7246f53aed169cfb5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_width_</name>
      <anchorfile>classscip_1_1ObjDisp.html</anchorfile>
      <anchor>aea26be10838e1cb6140f12f3d97015d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_priority_</name>
      <anchorfile>classscip_1_1ObjDisp.html</anchorfile>
      <anchor>a79d1528ad32fc2ab25cef64e5438a95a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_position_</name>
      <anchorfile>classscip_1_1ObjDisp.html</anchorfile>
      <anchor>a3fd8a9ccb27c14a5b7dd8c4c1f1d088a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_stripline_</name>
      <anchorfile>classscip_1_1ObjDisp.html</anchorfile>
      <anchor>aa5c9d8992e14cc082cb10979d89d31a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjEventhdlr</name>
    <filename>classscip_1_1ObjEventhdlr.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjEventhdlr</name>
      <anchorfile>classscip_1_1ObjEventhdlr.html</anchorfile>
      <anchor>a14563f5beb464e7b6c382131af43a2a5</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjEventhdlr</name>
      <anchorfile>classscip_1_1ObjEventhdlr.html</anchorfile>
      <anchor>af0f53c1a066d802976f5c26bcf257f37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_free</name>
      <anchorfile>classscip_1_1ObjEventhdlr.html</anchorfile>
      <anchor>a05b0a86ea31856deebe612aed39f79c1</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR *eventhdlr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_init</name>
      <anchorfile>classscip_1_1ObjEventhdlr.html</anchorfile>
      <anchor>aaeab0672e56c2e45edc4258f5d2c4063</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR *eventhdlr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exit</name>
      <anchorfile>classscip_1_1ObjEventhdlr.html</anchorfile>
      <anchor>a6a25fce0302bca05ab87a2020d4a8024</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR *eventhdlr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_initsol</name>
      <anchorfile>classscip_1_1ObjEventhdlr.html</anchorfile>
      <anchor>ae303e1ee30b0e629ee2c284e28be8f29</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR *eventhdlr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exitsol</name>
      <anchorfile>classscip_1_1ObjEventhdlr.html</anchorfile>
      <anchor>a3d04f4e300c8feb5fda3bc437833c255</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR *eventhdlr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_delete</name>
      <anchorfile>classscip_1_1ObjEventhdlr.html</anchorfile>
      <anchor>aac0b47069b6b7bd0d17092943f6ab647</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENTDATA **eventdata)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exec</name>
      <anchorfile>classscip_1_1ObjEventhdlr.html</anchorfile>
      <anchor>ae5e70d47478ddcf2458d51c3de60ef43</anchor>
      <arglist>(SCIP *scip, SCIP_EVENTHDLR *eventhdlr, SCIP_EVENT *event, SCIP_EVENTDATA *eventdata)=0</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjEventhdlr.html</anchorfile>
      <anchor>a47c96396bc54032005a83813b625b404</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjEventhdlr.html</anchorfile>
      <anchor>acdb61091f1003acf8e1d531ad96e0a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjEventhdlr.html</anchorfile>
      <anchor>a592691a11211c4b66dcdfb924537ff5d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjHeur</name>
    <filename>classscip_1_1ObjHeur.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjHeur</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>a46a95734b41e7b8b030c845aacac05e7</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, char dispchar, int priority, int freq, int freqofs, int maxdepth, unsigned int timingmask, SCIP_Bool usessubscip)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjHeur</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>a384c686abae204950e17a7a2b6e9bd83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_free</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>a3178f25d01fea8f7b8a7fc7707855346</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_init</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>ae42e5ae4c1a5a4ffa1dcedcc9d686385</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exit</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>ac30d4c2d7c9d1a1e6685d3d702a795ec</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_initsol</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>a4ca3b8a2cae08cb6c0019596849385a7</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exitsol</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>aca8b956bc4e6074cac89764e2d2954ab</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exec</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>ae7226adc18a17b24c1dada83948031e3</anchor>
      <arglist>(SCIP *scip, SCIP_HEUR *heur, SCIP_HEURTIMING heurtiming, SCIP_RESULT *result)=0</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>a20dc3d671992cffbae83e6b89f662764</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>a7839f3205657605a6267a0e6493e9822</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>ae3ab40df6fcdd5fdfd9fd90de92a540a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char</type>
      <name>scip_dispchar_</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>a467a7c8714a406e66687532346b356ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_priority_</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>a79a8215a62b4dc99f0fdae15cb02dd7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_freq_</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>a4201c5fbc2372283c96ed6be84d6b0a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_freqofs_</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>a41ed46ef3f0a72ca2bf7d021ab2a675a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_maxdepth_</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>a23be2d8af87ced2e6b961483a0f68083</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned int</type>
      <name>scip_timingmask_</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>a1919dc2eb7ba1df5b62471248293a0f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_usessubscip_</name>
      <anchorfile>classscip_1_1ObjHeur.html</anchorfile>
      <anchor>a8505bf78988d141096d4e13b20f33807</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjMessagehdlr</name>
    <filename>classscip_1_1ObjMessagehdlr.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjMessagehdlr</name>
      <anchorfile>classscip_1_1ObjMessagehdlr.html</anchorfile>
      <anchor>acda620e0838ffdb827a48d1f587b9d8c</anchor>
      <arglist>(SCIP_Bool bufferedoutput)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjMessagehdlr</name>
      <anchorfile>classscip_1_1ObjMessagehdlr.html</anchorfile>
      <anchor>a1d5d08aec8932678a5af93f9f7ef413d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scip_error</name>
      <anchorfile>classscip_1_1ObjMessagehdlr.html</anchorfile>
      <anchor>a367140c43ee7790bb61e5c4f399c30fb</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, FILE *file, const char *msg)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scip_warning</name>
      <anchorfile>classscip_1_1ObjMessagehdlr.html</anchorfile>
      <anchor>a7a3bf352b2f2ca7c1b6a923224841ab3</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, FILE *file, const char *msg)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scip_dialog</name>
      <anchorfile>classscip_1_1ObjMessagehdlr.html</anchorfile>
      <anchor>af71ca2b69952a501066e821cc3c33454</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, FILE *file, const char *msg)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scip_info</name>
      <anchorfile>classscip_1_1ObjMessagehdlr.html</anchorfile>
      <anchor>aee04c6f21133861c8b6fae1cc0027d5b</anchor>
      <arglist>(SCIP_MESSAGEHDLR *messagehdlr, FILE *file, const char *msg)=0</arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_bufferedoutput_</name>
      <anchorfile>classscip_1_1ObjMessagehdlr.html</anchorfile>
      <anchor>a7514c789c90747534788617052916d71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjNodesel</name>
    <filename>classscip_1_1ObjNodesel.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjNodesel</name>
      <anchorfile>classscip_1_1ObjNodesel.html</anchorfile>
      <anchor>a2bc8b2fc77fee699d195ac6d28da6490</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int stdpriority, int memsavepriority)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjNodesel</name>
      <anchorfile>classscip_1_1ObjNodesel.html</anchorfile>
      <anchor>a30c1a81f4e43ebb3defbc0275851a343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_free</name>
      <anchorfile>classscip_1_1ObjNodesel.html</anchorfile>
      <anchor>acfbf9b07cf332ecea64f1cf9ff0ce728</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_init</name>
      <anchorfile>classscip_1_1ObjNodesel.html</anchorfile>
      <anchor>aca86b59e381f167a52c736d301150e71</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exit</name>
      <anchorfile>classscip_1_1ObjNodesel.html</anchorfile>
      <anchor>a472e681d0789f51c2fa2da5f8af2f403</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_initsol</name>
      <anchorfile>classscip_1_1ObjNodesel.html</anchorfile>
      <anchor>abf8ba8de449dff0fe4a77fb2326dd994</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exitsol</name>
      <anchorfile>classscip_1_1ObjNodesel.html</anchorfile>
      <anchor>a4338fb5df56571db790fffd65b2bf605</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_select</name>
      <anchorfile>classscip_1_1ObjNodesel.html</anchorfile>
      <anchor>ad17b32127d823670af7f1dc1baddf341</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel, SCIP_NODE **selnode)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>scip_comp</name>
      <anchorfile>classscip_1_1ObjNodesel.html</anchorfile>
      <anchor>aad06c4d99f9cbac93d4b1194102360f5</anchor>
      <arglist>(SCIP *scip, SCIP_NODESEL *nodesel, SCIP_NODE *node1, SCIP_NODE *node2)=0</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjNodesel.html</anchorfile>
      <anchor>aaf6e3806b09a044d1612a4fcf0d2c0eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjNodesel.html</anchorfile>
      <anchor>ae5ea6d5089bc77929bc2165d94ddf356</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjNodesel.html</anchorfile>
      <anchor>afd7998cd71ffd595aaef24425621afab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_stdpriority_</name>
      <anchorfile>classscip_1_1ObjNodesel.html</anchorfile>
      <anchor>a55761b0ccbde97f5425866887cc21a44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_memsavepriority_</name>
      <anchorfile>classscip_1_1ObjNodesel.html</anchorfile>
      <anchor>aef1e20eb9d74972ceb2e94f3dc800633</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjPresol</name>
    <filename>classscip_1_1ObjPresol.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjPresol</name>
      <anchorfile>classscip_1_1ObjPresol.html</anchorfile>
      <anchor>a4f817e66b2a9911219ef2ad8c39fb240</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int maxrounds, SCIP_Bool delay)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjPresol</name>
      <anchorfile>classscip_1_1ObjPresol.html</anchorfile>
      <anchor>aae298dbd0aef7f3fd262ff919b4db53e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_free</name>
      <anchorfile>classscip_1_1ObjPresol.html</anchorfile>
      <anchor>a1cd7c8d364d4e7d2a151c78d9c4ab498</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_init</name>
      <anchorfile>classscip_1_1ObjPresol.html</anchorfile>
      <anchor>ab379657377e6bdffe64c7c960936521a</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exit</name>
      <anchorfile>classscip_1_1ObjPresol.html</anchorfile>
      <anchor>a925ed2d164bb9136f49e10b2e9e01fdb</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_initpre</name>
      <anchorfile>classscip_1_1ObjPresol.html</anchorfile>
      <anchor>aada50f65daf5fc717e4c2761e26a7255</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exitpre</name>
      <anchorfile>classscip_1_1ObjPresol.html</anchorfile>
      <anchor>a94d2c6874e6e0a823df58419726ea4f7</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exec</name>
      <anchorfile>classscip_1_1ObjPresol.html</anchorfile>
      <anchor>a689243b91ba9232ca3f15e2a3572748e</anchor>
      <arglist>(SCIP *scip, SCIP_PRESOL *presol, int nrounds, int nnewfixedvars, int nnewaggrvars, int nnewchgvartypes, int nnewchgbds, int nnewholes, int nnewdelconss, int nnewupgdconss, int nnewchgcoefs, int nnewchgsides, int *nfixedvars, int *naggrvars, int *nchgvartypes, int *nchgbds, int *naddholes, int *ndelconss, int *nupgdconss, int *nchgcoefs, int *nchgsides, SCIP_RESULT *result)=0</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjPresol.html</anchorfile>
      <anchor>afb4a4dd8c1006b7c5903ffe310ccad16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjPresol.html</anchorfile>
      <anchor>a6bf31e5ed97b1c24fdcb26d87de8cd17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjPresol.html</anchorfile>
      <anchor>abda346b28095aa5f126373a16d204415</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_priority_</name>
      <anchorfile>classscip_1_1ObjPresol.html</anchorfile>
      <anchor>aed9f18427bfb7ae5cf4b98c3db37a58d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_maxrounds_</name>
      <anchorfile>classscip_1_1ObjPresol.html</anchorfile>
      <anchor>a059e3f868b87f3aa37a6e3daaede6bf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_delay_</name>
      <anchorfile>classscip_1_1ObjPresol.html</anchorfile>
      <anchor>ac580729e3833f72ea0ec381b945d8491</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjPricer</name>
    <filename>classscip_1_1ObjPricer.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjPricer</name>
      <anchorfile>classscip_1_1ObjPricer.html</anchorfile>
      <anchor>a8c736af4a15dec6dd1ab01d7da3a87a6</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, SCIP_Bool delay)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjPricer</name>
      <anchorfile>classscip_1_1ObjPricer.html</anchorfile>
      <anchor>a0e26c8b3a9dbf56303104556eea52daa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_free</name>
      <anchorfile>classscip_1_1ObjPricer.html</anchorfile>
      <anchor>a340bf3cae91b9e138b1a238c9ac65c43</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_init</name>
      <anchorfile>classscip_1_1ObjPricer.html</anchorfile>
      <anchor>a9fa896ae1b4f21d65741baf4aa75ebd0</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exit</name>
      <anchorfile>classscip_1_1ObjPricer.html</anchorfile>
      <anchor>aa7cd757ca87178bbda8b9fa17257c7ed</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_initsol</name>
      <anchorfile>classscip_1_1ObjPricer.html</anchorfile>
      <anchor>a11cf0d6b480fc793572152608f50e573</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exitsol</name>
      <anchorfile>classscip_1_1ObjPricer.html</anchorfile>
      <anchor>a9b47e5dd3c5bbdd20052cc92210fb4a8</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_redcost</name>
      <anchorfile>classscip_1_1ObjPricer.html</anchorfile>
      <anchor>a6ae21669e518b04cec2491b40fe5387d</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer, SCIP_Real *lowerbound, SCIP_RESULT *result)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_farkas</name>
      <anchorfile>classscip_1_1ObjPricer.html</anchorfile>
      <anchor>a2d6f2d53949f83fa70256641a03f3e78</anchor>
      <arglist>(SCIP *scip, SCIP_PRICER *pricer)</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjPricer.html</anchorfile>
      <anchor>aa33cc9c619bfd7ba7847499b3ff7a4c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjPricer.html</anchorfile>
      <anchor>a48486dd89d9613a1ea806d2f16eacecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjPricer.html</anchorfile>
      <anchor>abd7db4f4b12c15295d3677383cdbbc70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_priority_</name>
      <anchorfile>classscip_1_1ObjPricer.html</anchorfile>
      <anchor>af21f089031fb812e1a7f37d6690b6acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_delay_</name>
      <anchorfile>classscip_1_1ObjPricer.html</anchorfile>
      <anchor>a582f6a4dba8ba2f4a3286011d2dd2b71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>scip::ObjProbCloneable</name>
    <filename>structscip_1_1ObjProbCloneable.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjProbCloneable</name>
      <anchorfile>structscip_1_1ObjProbCloneable.html</anchorfile>
      <anchor>a9c17f67c4382d55fffa1d656efd62a60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ObjProbCloneable *</type>
      <name>clone</name>
      <anchorfile>structscip_1_1ObjProbCloneable.html</anchorfile>
      <anchor>ac51ece35b0aa97cec46e31bcb5b0e8e9</anchor>
      <arglist>(SCIP *scip, SCIP_Bool *valid) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_Bool</type>
      <name>iscloneable</name>
      <anchorfile>structscip_1_1ObjProbCloneable.html</anchorfile>
      <anchor>aeefe7f13433411b5edf0334ddbe094bb</anchor>
      <arglist>(void) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjProbData</name>
    <filename>classscip_1_1ObjProbData.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjProbData</name>
      <anchorfile>classscip_1_1ObjProbData.html</anchorfile>
      <anchor>aaa4de68a603c9199c9b5049929a24402</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjProbData</name>
      <anchorfile>classscip_1_1ObjProbData.html</anchorfile>
      <anchor>acdaa9ea3982eed89be1a1201a693ce8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_delorig</name>
      <anchorfile>classscip_1_1ObjProbData.html</anchorfile>
      <anchor>a26997d970b0685eb06bba7061674a5a6</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_trans</name>
      <anchorfile>classscip_1_1ObjProbData.html</anchorfile>
      <anchor>a33e3c189b851724be985dd089bf1848b</anchor>
      <arglist>(SCIP *scip, ObjProbData **objprobdata, SCIP_Bool *deleteobject)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_deltrans</name>
      <anchorfile>classscip_1_1ObjProbData.html</anchorfile>
      <anchor>af84ebbcebd466fc848543975c8663bd1</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_initsol</name>
      <anchorfile>classscip_1_1ObjProbData.html</anchorfile>
      <anchor>a9401f772cae5cd6f77e78a20c7d8386f</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exitsol</name>
      <anchorfile>classscip_1_1ObjProbData.html</anchorfile>
      <anchor>a2f77a398d4c00342db497549d9fe4742</anchor>
      <arglist>(SCIP *scip)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_copy</name>
      <anchorfile>classscip_1_1ObjProbData.html</anchorfile>
      <anchor>ad3d4e88e9cf89f77b31b0c7b3439d8d4</anchor>
      <arglist>(SCIP *scip, SCIP *sourcescip, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, ObjProbData **objprobdata, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjProp</name>
    <filename>classscip_1_1ObjProp.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjProp</name>
      <anchorfile>classscip_1_1ObjProp.html</anchorfile>
      <anchor>aab0cad32af841aed4ee676a81cbc1149</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int freq, SCIP_Bool delay)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjProp</name>
      <anchorfile>classscip_1_1ObjProp.html</anchorfile>
      <anchor>a64b82e2065afb164ab41b624e9b9530c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_free</name>
      <anchorfile>classscip_1_1ObjProp.html</anchorfile>
      <anchor>acfcc7311c352a686b7bb0fe844c5e64f</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_init</name>
      <anchorfile>classscip_1_1ObjProp.html</anchorfile>
      <anchor>a6797d6740a3d9f5098ebbdadb924e996</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exit</name>
      <anchorfile>classscip_1_1ObjProp.html</anchorfile>
      <anchor>a37df5860d6970ae54dc464b571e6ca0a</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_initsol</name>
      <anchorfile>classscip_1_1ObjProp.html</anchorfile>
      <anchor>a3af766dd7c362a3346b7e9fb084425eb</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exitsol</name>
      <anchorfile>classscip_1_1ObjProp.html</anchorfile>
      <anchor>a60c334c870bce52e2a1e95916e60414d</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exec</name>
      <anchorfile>classscip_1_1ObjProp.html</anchorfile>
      <anchor>a55b1a5a9bf276d42bc06a3c84cd443e1</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop, SCIP_RESULT *result)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_resprop</name>
      <anchorfile>classscip_1_1ObjProp.html</anchorfile>
      <anchor>af8c1e0e1069968cd2731bcafb5530d3c</anchor>
      <arglist>(SCIP *scip, SCIP_PROP *prop, SCIP_VAR *infervar, int inferinfo, SCIP_BOUNDTYPE boundtype, SCIP_BDCHGIDX *bdchgidx, SCIP_RESULT *result)=0</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjProp.html</anchorfile>
      <anchor>a5b964d38cbd295aa97f54b5ba55e740e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjProp.html</anchorfile>
      <anchor>ad11dff49d66b1f34994dda6a5b4b54c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjProp.html</anchorfile>
      <anchor>a55e4b2c3d96bc879bba64aa09a008253</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_priority_</name>
      <anchorfile>classscip_1_1ObjProp.html</anchorfile>
      <anchor>a0ff9427b60d06111b85012ed8fa0e5d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_freq_</name>
      <anchorfile>classscip_1_1ObjProp.html</anchorfile>
      <anchor>a66d9b8d15a495f445453bd88f42b6b5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_delay_</name>
      <anchorfile>classscip_1_1ObjProp.html</anchorfile>
      <anchor>a11013fd1e5c98f722db32bca1fc83efb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjReader</name>
    <filename>classscip_1_1ObjReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjReader</name>
      <anchorfile>classscip_1_1ObjReader.html</anchorfile>
      <anchor>a8e38a7cf0999c5cb9df7d6f34ccf9572</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, const char *extension)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjReader</name>
      <anchorfile>classscip_1_1ObjReader.html</anchorfile>
      <anchor>a5b6e009bd744bbf0cc16b83607444698</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_free</name>
      <anchorfile>classscip_1_1ObjReader.html</anchorfile>
      <anchor>a2e5b3728c6dbf2d81eda7b0ac34a77f4</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_read</name>
      <anchorfile>classscip_1_1ObjReader.html</anchorfile>
      <anchor>a8fc8e7132216fd70a468faaba9a99f29</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader, const char *filename, SCIP_RESULT *result)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_write</name>
      <anchorfile>classscip_1_1ObjReader.html</anchorfile>
      <anchor>af00bf4e7dae98b6a56e33dd4b28019fa</anchor>
      <arglist>(SCIP *scip, SCIP_READER *reader, FILE *file, const char *name, SCIP_PROBDATA *probdata, SCIP_Bool transformed, SCIP_OBJSENSE objsense, SCIP_Real objscale, SCIP_Real objoffset, SCIP_VAR **vars, int nvars, int nbinvars, int nintvars, int nimplvars, int ncontvars, SCIP_VAR **fixedvars, int nfixedvars, int startnvars, SCIP_CONS **conss, int nconss, int maxnconss, int startnconss, SCIP_Bool genericnames, SCIP_RESULT *result)=0</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjReader.html</anchorfile>
      <anchor>ab7ddd5947cf817a01ddca56460998445</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjReader.html</anchorfile>
      <anchor>aa9d1738104dd5eb1f1c8d8408435f731</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjReader.html</anchorfile>
      <anchor>abdeeccd7785e4bfa4481f95804a1bfb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_extension_</name>
      <anchorfile>classscip_1_1ObjReader.html</anchorfile>
      <anchor>a318a81cd84b5a5fd2e1936e9d7a74f75</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjRelax</name>
    <filename>classscip_1_1ObjRelax.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjRelax</name>
      <anchorfile>classscip_1_1ObjRelax.html</anchorfile>
      <anchor>aa1bfb99f96da9050d9f866a058e314c0</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int freq)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjRelax</name>
      <anchorfile>classscip_1_1ObjRelax.html</anchorfile>
      <anchor>ad733e515c03012323934c08e2fe3cd4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_free</name>
      <anchorfile>classscip_1_1ObjRelax.html</anchorfile>
      <anchor>afa04f7844d8440d021ca30ad2b22d6a5</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_init</name>
      <anchorfile>classscip_1_1ObjRelax.html</anchorfile>
      <anchor>a95071bda764fd72f317e70b8d04b6cc6</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exit</name>
      <anchorfile>classscip_1_1ObjRelax.html</anchorfile>
      <anchor>af82a0c846842fe3cb85c92d18f43e915</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_initsol</name>
      <anchorfile>classscip_1_1ObjRelax.html</anchorfile>
      <anchor>af3c8a42950b0b96164a3276baf1da2f6</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exitsol</name>
      <anchorfile>classscip_1_1ObjRelax.html</anchorfile>
      <anchor>a8ded9495b562e8b9337fbbc017977849</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exec</name>
      <anchorfile>classscip_1_1ObjRelax.html</anchorfile>
      <anchor>a09bd731533286d6096985ce9a27f3f09</anchor>
      <arglist>(SCIP *scip, SCIP_RELAX *relax, SCIP_Real *lowerbound, SCIP_RESULT *result)=0</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjRelax.html</anchorfile>
      <anchor>a0f5aaa9576145d10fb6e3e93b3361df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjRelax.html</anchorfile>
      <anchor>a85acac014c73dbf352c25145623c73e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjRelax.html</anchorfile>
      <anchor>a4b0369e85d81d5167518a786f0aea883</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_priority_</name>
      <anchorfile>classscip_1_1ObjRelax.html</anchorfile>
      <anchor>a48a1c66e1a93b61d600aa02e2d5f926d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_freq_</name>
      <anchorfile>classscip_1_1ObjRelax.html</anchorfile>
      <anchor>adea0c8dfe5fb4400ee6b563539682113</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjSepa</name>
    <filename>classscip_1_1ObjSepa.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjSepa</name>
      <anchorfile>classscip_1_1ObjSepa.html</anchorfile>
      <anchor>a66249560d03658955b67baac2d0e0197</anchor>
      <arglist>(SCIP *scip, const char *name, const char *desc, int priority, int freq, SCIP_Real maxbounddist, SCIP_Bool usessubscip, SCIP_Bool delay)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjSepa</name>
      <anchorfile>classscip_1_1ObjSepa.html</anchorfile>
      <anchor>af8d2813b3e1b521e8706d6030212d8d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_free</name>
      <anchorfile>classscip_1_1ObjSepa.html</anchorfile>
      <anchor>a520c98e367b5519e99bc21d4d2ed9db4</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_init</name>
      <anchorfile>classscip_1_1ObjSepa.html</anchorfile>
      <anchor>a9ed39e43eb82b2faa8c542573245e130</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exit</name>
      <anchorfile>classscip_1_1ObjSepa.html</anchorfile>
      <anchor>a68e2a4517f05d7f3a4254830e16501d3</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_initsol</name>
      <anchorfile>classscip_1_1ObjSepa.html</anchorfile>
      <anchor>ab43411ce1e25a9ba4d1d6b2a5bb9bffb</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_exitsol</name>
      <anchorfile>classscip_1_1ObjSepa.html</anchorfile>
      <anchor>a623cb8844b65eb75b1f80253c7459717</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_execlp</name>
      <anchorfile>classscip_1_1ObjSepa.html</anchorfile>
      <anchor>ae7ec415bf27ad5f040323c3a8a563fc0</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_execsol</name>
      <anchorfile>classscip_1_1ObjSepa.html</anchorfile>
      <anchor>a128a6e0856dccceaf0c98f5a6e232221</anchor>
      <arglist>(SCIP *scip, SCIP_SEPA *sepa, SCIP_SOL *sol, SCIP_RESULT *result)</arglist>
    </member>
    <member kind="variable">
      <type>SCIP *</type>
      <name>scip_</name>
      <anchorfile>classscip_1_1ObjSepa.html</anchorfile>
      <anchor>a9ca98fca580f336e8e4f6b93b726a4cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_name_</name>
      <anchorfile>classscip_1_1ObjSepa.html</anchorfile>
      <anchor>afd1b25a18f21a7dd9eaa9313dc2b9a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>scip_desc_</name>
      <anchorfile>classscip_1_1ObjSepa.html</anchorfile>
      <anchor>a17b905f838a85ec4187772f66f6927d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_priority_</name>
      <anchorfile>classscip_1_1ObjSepa.html</anchorfile>
      <anchor>aea53090c54e1511218de25c24495bb9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>scip_freq_</name>
      <anchorfile>classscip_1_1ObjSepa.html</anchorfile>
      <anchor>adcef2ae2e2324d2284a1567253cf0dd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Real</type>
      <name>scip_maxbounddist_</name>
      <anchorfile>classscip_1_1ObjSepa.html</anchorfile>
      <anchor>a9824e0c1d598a7046c1fe22fd32a4ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_usessubscip_</name>
      <anchorfile>classscip_1_1ObjSepa.html</anchorfile>
      <anchor>ad8215c7b0db6fc440499eb5c511bdb45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SCIP_Bool</type>
      <name>scip_delay_</name>
      <anchorfile>classscip_1_1ObjSepa.html</anchorfile>
      <anchor>a62198a84b1b5d2eb69718434da09e226</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>scip::ObjVardata</name>
    <filename>classscip_1_1ObjVardata.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjVardata</name>
      <anchorfile>classscip_1_1ObjVardata.html</anchorfile>
      <anchor>af43a699a06a44e9d23bec2ac77488f33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ObjVardata</name>
      <anchorfile>classscip_1_1ObjVardata.html</anchorfile>
      <anchor>a72b7f44b4f753c48dbad015ab6143bab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_delorig</name>
      <anchorfile>classscip_1_1ObjVardata.html</anchorfile>
      <anchor>a0eea1b6fcf279629816c5689d2cceab1</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_trans</name>
      <anchorfile>classscip_1_1ObjVardata.html</anchorfile>
      <anchor>a36e4d4b4a278c97c3f90ceff13a962ff</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var, ObjVardata **objvardata, SCIP_Bool *deleteobject)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_deltrans</name>
      <anchorfile>classscip_1_1ObjVardata.html</anchorfile>
      <anchor>a694f807d0678ee1491c8117b8f5f23e9</anchor>
      <arglist>(SCIP *scip, SCIP_VAR *var)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SCIP_RETCODE</type>
      <name>scip_copy</name>
      <anchorfile>classscip_1_1ObjVardata.html</anchorfile>
      <anchor>a53453bdf70db73767dd2f681ba8aec8a</anchor>
      <arglist>(SCIP *scip, SCIP *sourcescip, SCIP_VAR *sourcevar, SCIP_HASHMAP *varmap, SCIP_HASHMAP *consmap, SCIP_VAR *targetvar, ObjVardata **objvardata, SCIP_RESULT *result)</arglist>
    </member>
  </compound>
</tagfile>
